[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R数据科学与编程",
    "section": "",
    "text": "参考资料",
    "crumbs": [
      "参考资料"
    ]
  },
  {
    "objectID": "index.html#可视化",
    "href": "index.html#可视化",
    "title": "R数据科学与编程",
    "section": "可视化",
    "text": "可视化\n\nggplot2: Elegant Graphics for Data Analysis (3e)\nhttps://exts.ggplot2.tidyverse.org/gallery/\nhttps://www.datanovia.com/en/blog/tag/ggpubr/\n现代统计图形（2）\nR Graphics Cookbook, 2nd edition",
    "crumbs": [
      "参考资料"
    ]
  },
  {
    "objectID": "index.html#数据科学",
    "href": "index.html#数据科学",
    "title": "R数据科学与编程",
    "section": "数据科学",
    "text": "数据科学\n\nR for data science\ntidyverse.org\nbookdown.org\ndata.table\narrow.apache.R",
    "crumbs": [
      "参考资料"
    ]
  },
  {
    "objectID": "index.html#编程",
    "href": "index.html#编程",
    "title": "R数据科学与编程",
    "section": "编程",
    "text": "编程\n\nAdvanced R\nEfficient R programming\nR Packages(2e)\nPandoc",
    "crumbs": [
      "参考资料"
    ]
  },
  {
    "objectID": "type_class.html",
    "href": "type_class.html",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "",
    "text": "1.1 基本数据类型\n基本数据类型（mode） 是指数据最基本的存储格式。在R中有5 种最基本的数据存储格式，分别是numeric（integer，double），character，logical，complex 和 raw。\n强制类型转换： 逻辑 -&gt; 整数 -&gt; 浮点数 -&gt; 字符",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#基本数据类型",
    "href": "type_class.html#基本数据类型",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "",
    "text": "1.1.1 numeric\n\n1.1.1.1 integer\n\n\nCodemode(2024L)\n#&gt; [1] \"numeric\"\ntypeof(2024L)\n#&gt; [1] \"integer\"\n\n\n\n1.1.1.2 double\n\n十进制decimal ()，科学计数法scientific () ，十六进制hexadecimal ()\n\nCodemode(1.1)\n#&gt; [1] \"numeric\"\ntypeof(1.1)\n#&gt; [1] \"double\"\n0.1234\n#&gt; [1] 0.1234\n1.23e4\n#&gt; [1] 12300\n0x111   # 16^2×1+ 16^1×1 + 16^0×1\n#&gt; [1] 273\n\n\n浮点标准定义的特殊值\n\n\nInfinity 无穷大\n\nCodemode(-Inf)\n#&gt; [1] \"numeric\"\nInf\n#&gt; [1] Inf\n\n\n\n\nNaN，Not a Number，非数字\n\nCodeNaN\n#&gt; [1] NaN\n0 / 0\n#&gt; [1] NaN\nis.nan(0 / 0)\n#&gt; [1] TRUE\nmode(0 / 0)\n#&gt; [1] \"numeric\"\n\n\n\n\n1.1.2 character\n\nCodetypeof(\"R language\")\n#&gt; [1] \"character\"\n\n\n\n1.1.3 logical\n比较运算符 ?Comparison\n逻辑运算符?Logic\n\nCodetypeof(TRUE)\n#&gt; [1] \"logical\"\nx &lt;- c(T,F,T)\ny &lt;- c(T,T,F)\n\n# 非\n!x\n#&gt; [1] FALSE  TRUE FALSE\n\n# 与\nx&y\n#&gt; [1]  TRUE FALSE FALSE\nT&&F\n#&gt; [1] FALSE\n# 或\nx|y\n#&gt; [1] TRUE TRUE TRUE\nT||F\n#&gt; [1] TRUE\n\n# 异或  不同为TRUE 或 1\nxor(x,y)\n#&gt; [1] FALSE  TRUE  TRUE\n\n\n\n1.1.4 complex\n\nCodez &lt;- 2+3i\ntypeof(z) \n#&gt; [1] \"complex\"\n\nis.complex(z)\n#&gt; [1] TRUE\n# 获取实部\nRe(z)\n#&gt; [1] 2\n\n# 获取虚部\nIm(z)\n#&gt; [1] 3\n\n# 模\nMod(z)\n#&gt; [1] 3.605551\n\n# 共轭\nConj(z)\n#&gt; [1] 2-3i\n\n\n\n1.1.5 raw\n\nCodecharToRaw(\"abcde12345\") #每个字符的原始二进制表示（ASCII码）转换成16进制输出\n#&gt;  [1] 61 62 63 64 65 31 32 33 34 35\ntypeof(charToRaw(\"abcde12345\")) \n#&gt; [1] \"raw\"\n\n\n\n1.1.6 NA\nNA，Not Available，不可用\n实际上，每种原子类型有一个缺失值：NA_logical_、NA_integer_、NA_double_、NA_character_。\n\nCodemode(NA_character_)\n#&gt; [1] \"character\"\ntypeof(NA_complex_)\n#&gt; [1] \"complex\"\nNA_integer_\n#&gt; [1] NA\nis.na(NA)\n#&gt; [1] TRUE",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#数据结构",
    "href": "type_class.html#数据结构",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.2 数据结构",
    "text": "1.2 数据结构\nR中的数据结构包括 原子向量（atomic vector）和泛型向量（generic vector）。\n\n原子向量是基本数据类型（numeric，character，logical，complex，raw）的数组（一维vector，二维matrix，多维array）。\n泛型向量是原子向量的集合，即列表list。\n\n\n1.2.1 属性\n在R中任何一个object都具有两个最基本的属性：基本数据类型 “mode” 和 长度”length”，可以通过调用mode()（或 typeof()）和length() 查看，但无法通过 attributes() 查看。\n对于vector，其mode与class属性一致。\n对于由vector构建出来的其他更复杂的数据结构，其存储结构mode由其存储的最基本的数据类型决定。如matrix可以用于存储数值型数据，也可以用于存储字符串型数据。\n在R中有多种方式查看object的属性，\n\n\nclass()函数，查看object的属性主要是站在面向对象编程的角度，因为知道object的属性后就可以查找相应的generic function对其操作。知道其为matrix后我们可以通过methods函数查找支持对matrix操作的generic function,\n\nCodem1 &lt;- matrix(1:6,nrow = 2)\nm1\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    3    5\n#&gt; [2,]    2    4    6\nclass(m1)\n#&gt; [1] \"matrix\" \"array\"\nmethods(class=\"matrix\")\n#&gt;  [1] anyDuplicated as.data.frame as.raster     as_tibble     boxplot      \n#&gt;  [6] coerce        determinant   duplicated    edit          head         \n#&gt; [11] initialize    isSymmetric   Math          Math2         Ops          \n#&gt; [16] relist        subset        summary       tail          unique       \n#&gt; see '?methods' for accessing help and source code\n\n\n\n\nattributes() 主要是用于列出object所有已有的属性。\n\nCodeattributes(m1)\n#&gt; $dim\n#&gt; [1] 2 3\n\nattr(x = m1,which = \"dim\") &lt;- c(3,2)\nm1\n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\n\n# 或者\na &lt;- structure(\n  m1, \n  dim=c(1,6)\n)\nstr(attributes(a))\n#&gt; List of 1\n#&gt;  $ dim: int [1:2] 1 6\na\n#&gt;      [,1] [,2] [,3] [,4] [,5] [,6]\n#&gt; [1,]    1    2    3    4    5    6\n\n\n\n\ntypeof() 主要站在R的角度查看object的属性，大多数情况下其返回值与mode一样。\n\nCodetypeof(m1)\n#&gt; [1] \"integer\"\nmode(m1)\n#&gt; [1] \"numeric\"\n\n\n\n\n大多数操作都会丢失大多数属性。\n只有两个属性是例行保留的：\n\n\n“names”，一个字符向量，为每个元素命名。\n\nCode# When creating it: \nx &lt;- c(a = 1, b = 2, c = 3)\nattributes(x)\n#&gt; $names\n#&gt; [1] \"a\" \"b\" \"c\"\nnames(x)\n#&gt; [1] \"a\" \"b\" \"c\"\n\n# By assigning a character vector to names()\nx &lt;- 1:3\nnames(x) &lt;- c(\"a\", \"b\", \"c\")\n\n# Inline, with setNames():\nx &lt;- setNames(1:3, c(\"a\", \"b\", \"c\"))\n\n\n\n\n“dim”，dimensions 的缩写，整数向量，用于将向量转换为矩阵或数组。\n对于原子向量，dimension 属性通常用于创建矩阵或数组。\n\nCodez &lt;- 1:6\ndim(z) &lt;- c(3, 2, 1)\nz\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2]\n#&gt; [1,]    1    4\n#&gt; [2,]    2    5\n#&gt; [3,]    3    6\nclass(z)\n#&gt; [1] \"array\"\nattributes(z)\n#&gt; $dim\n#&gt; [1] 3 2 1\ndim(z)\n#&gt; [1] 3 2 1\n\n\n对于列表，dimension 属性可用于创建列表矩阵或列表数组：\n\nCodel &lt;- list(1:5, \"a\", TRUE, 1.0)\ndim(l) &lt;- c(2, 2)\nl\n#&gt;      [,1]      [,2]\n#&gt; [1,] integer,5 TRUE\n#&gt; [2,] \"a\"       1\nclass(l)\n#&gt; [1] \"matrix\" \"array\"\nattributes(l)\n#&gt; $dim\n#&gt; [1] 2 2\nl[[1,1]]\n#&gt; [1] 1 2 3 4 5\n\n\n\n\n向量\n矩阵\n数组\n\n\n\nnames()\nrownames(),colnames()\ndimnames()\n\n\nlength()\nnrow(),ncol()\ndim()\n\n\nc()\nrbind(),cbind()\nabind::abind()\n\n\n—\nt()\naperm()\n\n\nis.null(dim(x))\nis.matrix()\nis.array()\n\n\n\n\n\n1.2.2 atomic vectors\n\n\n\n\n\n1.2.2.1 vector\n\nCode# 单元素向量\n\"a\" == c(\"a\")\n#&gt; [1] TRUE\nis.vector(\"a\")\n#&gt; [1] TRUE\n\n# 函数c()  Combine Values into a Vector or List\n\nc(\"a\",\"b\",\"c\")\n#&gt; [1] \"a\" \"b\" \"c\"\nc(list(1),list(T)) |&gt; is.vector()\n#&gt; [1] TRUE\n\n\n\n1.2.2.2 matrix\n矩阵是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\nmatrix(data= ,nrow=1  ,ncol=1  ,byrow=FALSE ,dimnames=list(rnames,cnames) ,...)\n\nCodenum&lt;-c(16,22,24,28)\nrnames&lt;-c(\"R1\",\"R2\")\ncnames&lt;-c(\"C1\",\"C2\")\nm&lt;-matrix(num,nrow=2,ncol=2,byrow=TRUE,dimnames=list(rnames,cnames))\nm\n#&gt;    C1 C2\n#&gt; R1 16 22\n#&gt; R2 24 28\nclass(m)\n#&gt; [1] \"matrix\" \"array\"\nattributes(m)\n#&gt; $dim\n#&gt; [1] 2 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"R1\" \"R2\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"C1\" \"C2\"\ndim(m)\n#&gt; [1] 2 2\nrownames(m)\n#&gt; [1] \"R1\" \"R2\"\ncolnames(m)\n#&gt; [1] \"C1\" \"C2\"\n\n\n\n1.2.2.3 array\n数组也是一个具有维度属性（dim）的原子向量，所有元素必须是同一类型。\narray(data,dim_numeric_vector=c(...),dimnames = list(dim1,dim2,...),...)\n\nCodev&lt;-1:24 \ndim1&lt;-c(\"A1\",\"A2\",\"A3\") \ndim2&lt;-c(\"B1\",\"B2\",\"B3\",\"B4\")\ndim3&lt;-c(\"C1\",\"C2\") \narray_3d&lt;-array(v,c(3,4,2),dimnames = list(dim1,dim2,dim3)) \narray_3d\n#&gt; , , C1\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1  1  4  7 10\n#&gt; A2  2  5  8 11\n#&gt; A3  3  6  9 12\n#&gt; \n#&gt; , , C2\n#&gt; \n#&gt;    B1 B2 B3 B4\n#&gt; A1 13 16 19 22\n#&gt; A2 14 17 20 23\n#&gt; A3 15 18 21 24\n\nclass(array_3d)\n#&gt; [1] \"array\"\nattributes(array_3d)\n#&gt; $dim\n#&gt; [1] 3 4 2\n#&gt; \n#&gt; $dimnames\n#&gt; $dimnames[[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; $dimnames[[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; $dimnames[[3]]\n#&gt; [1] \"C1\" \"C2\"\ndim(array_3d)\n#&gt; [1] 3 4 2\ndimnames(array_3d)\n#&gt; [[1]]\n#&gt; [1] \"A1\" \"A2\" \"A3\"\n#&gt; \n#&gt; [[2]]\n#&gt; [1] \"B1\" \"B2\" \"B3\" \"B4\"\n#&gt; \n#&gt; [[3]]\n#&gt; [1] \"C1\" \"C2\"\n\n\n要保留其他属性，需要创建S3 类。\n\n1.2.3 S3类 原子向量\nbase R 中使用的四个重要的 S3类原子向量：\n\n分类数据，其中值来自factor向量中记录的一组固定水平。\n日期（具有日期分辨率），记录在Date向量中。\n日期时间（具有秒或亚秒分辨率），存储在 POSIXct 向量中。\n持续时间，存储在difftime向量中。\n\n\n\n\n\n\n1.2.3.1 factor\n因子，分类变量，建立在具有两个属性（class，levels）的 integer向量之上。\nfactor(vector,ordered=FALSE,levels=c(v1,v2,…),labels= ,...) ，在内存中以整数向量c(1,2,3,...,k)存储。\n\nCode# 存储形式\nx &lt;- factor(c(\"a\", \"b\", \"b\", \"a\"))\nx\n#&gt; [1] a b b a\n#&gt; Levels: a b\ntypeof(x)\n#&gt; [1] \"integer\"\nattributes(x)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\nlevels(x)\n#&gt; [1] \"a\" \"b\"\nclass(x)\n#&gt; [1] \"factor\"\n\n\n# 名义变量 nominal variable\ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nattributes(diabetes)\n#&gt; NULL\ndiabetes&lt;-factor(diabetes)\nattributes(diabetes)\n#&gt; $levels\n#&gt; [1] \"t1\" \"t2\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n# 顺序变量 ordinal variable     默认水平根据字母顺序而定\nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\")\nstatus&lt;-factor(status,ordered = TRUE) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"best\"&lt;\"better\"&lt;..: 3 2 1 3\nstatus&lt;-factor(status,ordered =TRUE,levels = c(\"poor\",\"better\",\"best\")) \nstr(status) \n#&gt;  Ord.factor w/ 3 levels \"poor\"&lt;\"better\"&lt;..: 1 2 3 1\n\n\n#改变外在标签\nsex&lt;-c(1,2,2,1)\nsex\n#&gt; [1] 1 2 2 1\nsex&lt;-factor(sex,levels=c(1,2),labels = c(\"男\",\"女\")) \nstr(sex) \n#&gt;  Factor w/ 2 levels \"男\",\"女\": 1 2 2 1\nsex\n#&gt; [1] 男 女 女 男\n#&gt; Levels: 男 女\n\nleadership &lt;- read_csv(\"data/leadership.txt\") |&gt; column_to_rownames(var = \"id\")\n# 连续型变量→因子\nleadership$agecat&lt;-cut(leadership$age,\n                    breaks = c(0,18,45,65,Inf),\n                    labels=c(\"minor\",\"young\",\"middle_age\",\"elder\"),\n                    include.lowest = TRUE,\n                    right = TRUE\n                    )\nleadership$agecat\n#&gt; [1] young young young elder elder\n#&gt; Levels: minor young middle_age elder\n\n\n\n1.2.3.2 Date\n日期向量建立在 double 向量之上，具有class \"Date\"属性。\n日期 默认格式：\"%Y-%m-%d\" xxxx-xx-xx,例如：2023-03-15\n\nCodetoday &lt;- Sys.Date()\ntoday\n#&gt; [1] \"2024-06-05\"\ntypeof(today)\n#&gt; [1] \"double\"\nattributes(today)\n#&gt; $class\n#&gt; [1] \"Date\"\nclass(today)\n#&gt; [1] \"Date\"\n\nas.Date(c(\"02 14-2002\",\"01 04-2013\"),\"%m %d-%Y\") #以\"%m %d-%Y\"格式读入\n#&gt; [1] \"2002-02-14\" \"2013-01-04\"\nformat(Sys.Date(),\"%Y/%m/%d\") #以\"%Y/%m/%d\"格式输出\n#&gt; [1] \"2024/06/05\"\n\n\n# 双精度值（通过剥离类来查看）表示自 1970 年 1 月 1 日以来的天数\ndate &lt;- as.Date(\"1970-02-01\")\nunclass(date)\n#&gt; [1] 31\n\n\n\n1.2.3.3 Datetime\nPOSIXct 和 POSIXlt\n“POSIX”是可移植操作系统接口（ Portable Operating System Interface）的缩写，这是一个跨平台标准系列。“ct”代表calendar time（C 中的类型），“lt”代表local time（C 中的类型）。\nPOSIXct 向量建立在 double向量之上，其中值表示自 1970-01-01 以来的秒数\n\nCodenow_ct &lt;- as.POSIXct(\"2024-04-20 15:45\", tz = \"Asia/Shanghai\")\nnow_ct\n#&gt; [1] \"2024-04-20 15:45:00 CST\"\ntypeof(now_ct)\n#&gt; [1] \"double\"\nattributes(now_ct)\n#&gt; $class\n#&gt; [1] \"POSIXct\" \"POSIXt\" \n#&gt; \n#&gt; $tzone\n#&gt; [1] \"Asia/Shanghai\"\nclass(now_ct)\n#&gt; [1] \"POSIXct\" \"POSIXt\"\n\n\n\n1.2.3.4 Durations\n持续时间（表示日期对或日期时间对之间的时间量）存储在difftimes中。Difftimes 建立在 double 之上，并且具有确定整数应如何解释的属性。\n\nCodeunits_1 &lt;- as.difftime(1, units = \"weeks\")  #units = c(\"auto\", \"secs\", \"mins\", \"hours\",\"days\", \"weeks\"))\n\nunits_1\n#&gt; Time difference of 1 weeks\ntypeof(units_1)\n#&gt; [1] \"double\"\nattributes(units_1)\n#&gt; $class\n#&gt; [1] \"difftime\"\n#&gt; \n#&gt; $units\n#&gt; [1] \"weeks\"\nclass(units_1)\n#&gt; [1] \"difftime\"\nunits(units_1)\n#&gt; [1] \"weeks\"\nunits(units_1) &lt;- \"days\"\n\nattributes(units_1)\n#&gt; $units\n#&gt; [1] \"days\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"difftime\"\n\n\n\n1.2.4 泛型向量（列表）\n从技术上讲，列表的每个元素实际上是相同的类型，因为每个元素实际上是对另一个对象的引用 Figure 1.1 ，该对象可以是任何类型。\n\n1.2.4.1 list\n列表不存储值本身，而是存储对它们的引用：\n\nCodel1 &lt;- list(1,2,3)\ntypeof(l1)\n#&gt; [1] \"list\"\n\n\n\n\n\n\n\nFigure 1.1\n\n\n列表，list(name1=object1,name2=object2,...)\n\nCodelist1&lt;-list(title=\"My list\",\n             matr=matrix(c(\"a1\",\"b1\",\"a2\",\"b2\"),nrow=2,ncol=2,byrow=TRUE,\n                           dimnames = list(c(\"X1\",\"X2\"),c(\"Y1\",\"Y2\"))\n                         ),\n             df=data.frame(id=matrix(c(\"Lisa\",\"BOb\",\"John\",\"Jule\"),\n                                     nrow=4,ncol=1,byrow=TRUE\n                                     ),\n                           int=c(3,5,7,9),\n                           TF=c(T,T,T,F)\n                           ),\n             list=list(a=c(1,2,3),b=c(\"A\",\"B\"))\n             )\nlist1\n#&gt; $title\n#&gt; [1] \"My list\"\n#&gt; \n#&gt; $matr\n#&gt;    Y1   Y2  \n#&gt; X1 \"a1\" \"b1\"\n#&gt; X2 \"a2\" \"b2\"\n#&gt; \n#&gt; $df\n#&gt;     id int    TF\n#&gt; 1 Lisa   3  TRUE\n#&gt; 2  BOb   5  TRUE\n#&gt; 3 John   7  TRUE\n#&gt; 4 Jule   9 FALSE\n#&gt; \n#&gt; $list\n#&gt; $list$a\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $list$b\n#&gt; [1] \"A\" \"B\"\ntypeof(list1)\n#&gt; [1] \"list\"\nattributes(list1)\n#&gt; $names\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\nclass(list1)\n#&gt; [1] \"list\"\nnames(list1)\n#&gt; [1] \"title\" \"matr\"  \"df\"    \"list\"\n\n\n\n1.2.4.2 data frame/tibble\n建立在\"list\"之上的两个最重要的 S3 类是data.frame 和 tibble\n\n\n\n\n数据框是列向量具有 names，row.names ，class”data.frame” 属性的命名列表，是一种特殊的列表，每个原子向量的长度必须相同。\n\nCodeid&lt;-c(001231,001241,001413,001244) \nage&lt;-c(21,14,52,15) \ndiabetes&lt;-c(\"t1\",\"t2\",\"t1\",\"t1\") \nstatus&lt;-c(\"poor\",\"better\",\"best\",\"poor\") \ndf1&lt;-data.frame(patientID=id,age,diabetes,status,row.names = c(1,2,3,4),\n                stringsAsFactors = FALSE) # 4个列向量组成数据框 \ndf1\n\n\n\n\npatientID\nage\ndiabetes\nstatus\n\n\n\n1231\n21\nt1\npoor\n\n\n1241\n14\nt2\nbetter\n\n\n1413\n52\nt1\nbest\n\n\n1244\n15\nt1\npoor\n\n\n\n\n\nCodetypeof(df1)\n#&gt; [1] \"list\"\nattributes(df1)\n#&gt; $names\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"   \n#&gt; \n#&gt; $class\n#&gt; [1] \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nclass(df1)\n#&gt; [1] \"data.frame\"\nnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\ncolnames(df1)\n#&gt; [1] \"patientID\" \"age\"       \"diabetes\"  \"status\"\nrow.names(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\nrownames(df1)\n#&gt; [1] \"1\" \"2\" \"3\" \"4\"\n\n\ntibblle与data frame共享相同的结构。区别是class属性更多,不会自动进行强制类型转换，不会自动转换非法名称（自动反引号非法名称）， tibbles 只能循环较短的长度为 1 的向量，允许引用在构造过程中创建的变量。\n\nCodelibrary(tibble)\ndf2 &lt;- tibble(x = 1:3, y = letters[1:3])\ntypeof(df2)\n#&gt; [1] \"list\"\nattributes(df2)\n#&gt; $class\n#&gt; [1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n#&gt; \n#&gt; $row.names\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $names\n#&gt; [1] \"x\" \"y\"\n\n\nnames(tibble(`1` = 1))\n#&gt; [1] \"1\"\n\ntibble(x = 1:4, y = 1)\n\n\n\n\nx\ny\n\n\n\n1\n1\n\n\n2\n1\n\n\n3\n1\n\n\n4\n1\n\n\n\n\n\nCodetibble(x = 1:4, y = 1:2)\n#&gt; Error in `tibble()`:\n#&gt; ! Tibble columns must have compatible sizes.\n#&gt; • Size 4: Existing data.\n#&gt; • Size 2: Column `y`.\n#&gt; ℹ Only values of size one are recycled.\n\ntibble(\n  x = 1:3,\n  y = x * 2\n)\n\n\n\n\nx\ny\n\n\n\n1\n2\n\n\n2\n4\n\n\n3\n6\n\n\n\n\n\n\n\n1.2.4.3 行名→列\n\nCodedf3 &lt;- data.frame(\n  age = c(35, 27, 18),\n  hair = c(\"blond\", \"brown\", \"black\"),\n  row.names = c(\"Bob\", \"Susan\", \"Sam\")\n)\ndf3 |&gt; rownames_to_column(var = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nCodeas_tibble(df3, rownames = \"name\")\n\n\n\n\nname\nage\nhair\n\n\n\nBob\n35\nblond\n\n\nSusan\n27\nbrown\n\n\nSam\n18\nblack\n\n\n\n\n\nCode\n\nis_tibble(df2)\n#&gt; [1] TRUE\nis_tibble(df3)\n#&gt; [1] FALSE\nas_tibble(df3)\n\n\n\n\nage\nhair\n\n\n\n35\nblond\n\n\n27\nbrown\n\n\n18\nblack\n\n\n\n\n\n\n\n1.2.4.4 列表列\n\nCodedf &lt;- data.frame(x = 1:3)\ndf$y &lt;- list(1:2, 1:3, 1:4)\ndf\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nCode\ndata.frame(\n  x = 1:3, \n  y = I(list(1:2, 1:3, 1:4))\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\nCode\ntibble(\n  x = 1:3, \n  y = list(1:2, 1:3, 1:4)\n)\n\n\n\n\nx\ny\n\n\n\n1\n1, 2\n\n\n2\n1, 2, 3\n\n\n3\n1, 2, 3, 4\n\n\n\n\n\n\n\n1.2.4.5 矩阵和数据框列\n行数必须相等\n\nCodedfm &lt;- data.frame(\n  x = 1:3 * 10\n)\ndfm$y &lt;- matrix(1:9, nrow = 3)\ndfm$z &lt;- data.frame(a = 3:1, b = letters[1:3], stringsAsFactors = FALSE)\n\ndfm\n\n\n\n\nx\ny\nz\n\n\n\n10\n1\n3\n\n\n20\n2\n2\n\n\n30\n3\n1",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#null",
    "href": "type_class.html#null",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.3 NULL\n",
    "text": "1.3 NULL\n\n长度始终为零，并且没有属性。\n\nCodetypeof(NULL)\n#&gt; [1] \"NULL\"\nlength(NULL)\n#&gt; [1] 0\nis.null(NULL)\n#&gt; [1] TRUE\nc()\n#&gt; NULL",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#函数类型",
    "href": "type_class.html#函数类型",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.4 函数类型",
    "text": "1.4 函数类型\n\nCodetypeof(mean)\n#&gt; [1] \"closure\"\n\ntypeof(`[`)\n#&gt; [1] \"special\"\n\ntypeof(sum)    \n#&gt; [1] \"builtin\"",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#环境",
    "href": "type_class.html#环境",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.5 环境",
    "text": "1.5 环境\n\nCodetypeof(globalenv())\n#&gt; [1] \"environment\"",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "type_class.html#面向对象编程的类",
    "href": "type_class.html#面向对象编程的类",
    "title": "\n1  基本数据类型和数据结构\n",
    "section": "\n1.6 面向对象编程的类",
    "text": "1.6 面向对象编程的类\n\nCodemle_obj &lt;- stats4::mle(function(x = 1) (x - 2) ^ 2)\ntypeof(mle_obj)\n#&gt; [1] \"S4\"",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>基本数据类型和数据结构</span>"
    ]
  },
  {
    "objectID": "I-O.html",
    "href": "I-O.html",
    "title": "\n2  读入和写出\n",
    "section": "",
    "text": "2.1 Import",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "I-O.html#import",
    "href": "I-O.html#import",
    "title": "\n2  读入和写出\n",
    "section": "",
    "text": "2.1.1 键盘输入\n\nCodedf &lt;- data.frame(id=character(0),age=numeric(0),sex=character(0))\ndf &lt;- edit(df)\n\nfix(df)\n\n\n\n2.1.2 逐行键入数据\n\nCodereadline(\"输入年龄：\")\n#&gt; 输入年龄：\n#&gt; [1] \"\"\n# 键入 24\n\n\n\n2.1.3 文本文件\n常用的分隔符如逗号, ，制表符\\t，分号;，空格space，…… 等。\n\n2.1.3.1 utils::\n\nutilities,a piece of computer software that performs a particular task\nread.table() read.csv() read.csv2\n\nCode# 列名(第1行),行标识符 (第1列)\nutils::read.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\nCodex &lt;- read.csv(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = 1)\nread.table(\"data/leadership.txt\",header = TRUE,sep=\",\",row.names = \"id\") \n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n2.1.3.2 readr::\n\nread.csv2() read_tsv() read_delim()\n\nCodereadr::read_csv(\"data/leadership.txt\",col_names = TRUE,id=\"file_path\") |&gt; \n    column_to_rownames(var = \"id\")\n\n\n\n2.1.4 Excel\n\nCodelibrary(readxl)\n#read_xls()\n#read_xlsx()\nread_excel(path = \"data/example.xlsx\",sheet = 1,range = \"A1:D11\")\n\n\n\n\n姓名\n数学\n科学\n英语\n\n\n\nJ.D\n502\n95\n25\n\n\nA.W\n600\n99\n22\n\n\nB.M\n412\n80\n18\n\n\nD.J\n358\n82\n15\n\n\nJ.M\n495\n75\n20\n\n\nC.C\n512\n85\n28\n\n\nR.y\n410\n80\n15\n\n\nG.K\n625\n95\n30\n\n\nJ.E\n573\n89\n27\n\n\nM.R\n522\n86\n18\n\n\n\n\n\nCoderead_excel(\"data/example.xlsx\",2)\n\n\n\n\nID\nTime\nX1\nX2\n\n\n\n1\n1\n5\n6\n\n\n1\n2\n3\n5\n\n\n2\n1\n6\n1\n\n\n2\n2\n2\n4\n\n\n\n\n\n\n\n2.1.5 等宽格式\nreadr 包提供的 read_fwf()\n\nCode' First     Last  Sex Number\n Currer     Bell    F      2\n    Dr.    Seuss    M     49\n    \"\"   Student   NA     21' |&gt; read_fwf()\n\n\n\n\nX1\nX2\nX3\n\n\n\nFirst\nLast\nSex Number\n\n\nCurrer\nBell\nF 2\n\n\nDr.\nSeuss\nM 49\n\n\n“”\nStudent\nNA 21\n\n\n\n\n\n\n\n2.1.6 Internet datasets\n\nCodeurl = \"https://www.monetdb.org/sites/default/files/voc_tsvs.zip\"\ndownload.file(url, \"voc_tsvs.zip\") # download file\nunzip(\"voc_tsvs.zip\", exdir = \"data\") # unzip files\nfile.remove(\"voc_tsvs.zip\") # tidy up by removing the zip file\n\nurl = \"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/co2.csv\"\ndownload.file(url, \"extdata/co2.csv\")\ndf_co2 = read_csv(\"extdata/co2.csv\")\n\n\n\n2.1.7 library datasets\n\nCode#|eval: false\ndata(package = \"dplyr\")\n#&gt; Data sets in package ‘dplyr’:\n#&gt; \n#&gt; band_instruments               Band membership\n#&gt; band_instruments2              Band membership\n#&gt; band_members                   Band membership\n#&gt; starwars                       Starwars characters\n#&gt; storms                         Storm tracks data\n\n\n\n2.1.8 二进制文件\nRDS,R’s custom binary format called RDS\nread_rds()\n\nCodewrite_rds(x,file = \"data/leadership.parquet\")\nread_rds(\"data/leadership.rds\")\n\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\nBob\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\nMary\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\nLily\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\nJuly\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\nFrank\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\nParquet,a fast binary and columnar storage file format(列式存储文件)\n\nCodelibrary(arrow)\nwrite_parquet(x,sink = \"data/leadership.parquet\")\nread_parquet(file = \"data/leadership.parquet\" )\n\n\n\n\ndate\ncountry\ngender\nage\nq1\nq2\nq3\nq4\nq5\n\n\n\n10/24/14\nUS\nM\n29\n5\n4\n5\n5\n5\n\n\n10/28/14\nUS\nF\n44\n3\n5\n2\n5\n5\n\n\n10/01/14\nUK\nF\n45\n3\n5\n5\n5\n2\n\n\n10/12/14\nUK\nM\n68\n3\n3\n4\nNA\nNA\n\n\n05/01/14\nUK\nF\n99\n2\n2\n1\n2\n1\n\n\n\n\n\n\n\n2.1.9 JSON\njavascript object notation\n\nCodelibrary(jsonlite)\nread_json(path = \"data/3龙门币3赤金.json\",simplifyVector = TRUE)\n#&gt; $author\n#&gt; [1] \"wal\"\n#&gt; \n#&gt; $description\n#&gt; [1] \"\"\n#&gt; \n#&gt; $id\n#&gt; [1] 1.71086e+15\n#&gt; \n#&gt; $title\n#&gt; [1] \"3龙门币3赤金\"\n#&gt; \n#&gt; $buildingType\n#&gt; [1] 243\n#&gt; \n#&gt; $planTimes\n#&gt; [1] \"3班\"\n#&gt; \n#&gt; $plans\n#&gt;    name description Fiammetta.enable Fiammetta.target Fiammetta.order\n#&gt; 1 A白班                         TRUE             巫恋             pre\n#&gt; 2 B夜班                         TRUE           龙舌兰             pre\n#&gt;   drones.room drones.index drones.enable drones.order\n#&gt; 1     trading            1          TRUE          pre\n#&gt; 2     trading            1          TRUE          pre\n#&gt;                                                                                                                                      rooms.trading\n#&gt; 1         FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 柏喙, 孑, 银灰, 琳琅诗怀雅, 空弦, 但书, 伺夜, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, LMD, LMD, LMD, 巫恋, 龙舌兰, 卡夫卡, 能天使, 德克萨斯, 拉普兰德, 黑键, 慕斯, 石英, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                                                                              rooms.manufacture\n#&gt; 1         FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 槐琥, 至简, 清流, 苍苔, 斑点, 夜烟, 温蒂, 森蚺, 异客, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2 FALSE, FALSE, FALSE, Pure Gold, Pure Gold, Pure Gold, 淬羽赫默, 多萝西, 白面鸮, 砾, 迷迭香, 香草, 火神, 贝娜, 泡泡, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                               rooms.power\n#&gt; 1 FALSE, FALSE, FALSE, 承曦格雷伊, 澄闪, 格雷伊, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt; 2       FALSE, FALSE, FALSE, 缪尔赛思, 雷蛇, 黍, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#&gt;                                                                                  rooms.dormitory\n#&gt; 1 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 重岳, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt; 2 FALSE, FALSE, FALSE, FALSE, 菲亚梅塔, 塑心, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE\n#&gt;                                                     rooms.control\n#&gt; 1 FALSE, 阿米娅, 麒麟R夜刀, 火龙S黑角, 灵知, 玛恩纳, FALSE, FALSE\n#&gt; 2             FALSE, 重岳, 诗怀雅, 凯尔希, 令, 琴柳, FALSE, FALSE\n#&gt;                       rooms.meeting                    rooms.hire\n#&gt; 1     FALSE, 陈, 白雪, FALSE, FALSE FALSE, 艾雅法拉, FALSE, FALSE\n#&gt; 2 FALSE, 远山, 塞雷娅, FALSE, FALSE     FALSE, 絮雨, FALSE, FALSE\n#&gt;          rooms.processing                     period\n#&gt; 1     FALSE, FALSE, FALSE               07:00, 21:59\n#&gt; 2 FALSE, 年, FALSE, FALSE 22:00, 00:00, 23:59, 06:59\n#&gt; \n#&gt; $scheduleType\n#&gt; $scheduleType$planTimes\n#&gt; [1] 2\n#&gt; \n#&gt; $scheduleType$trading\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$manufacture\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$power\n#&gt; [1] 3\n#&gt; \n#&gt; $scheduleType$dormitory\n#&gt; [1] 4\n\n\n\n2.1.10 SPSS/SAS/stata DTA\n\nCodelibrary(haven)\nread_spss()\nread_sav()\n\nread_sas()\n\nread_dta()\nread_stata()\n\n\n\n2.1.11 Database\n\nCodelibrary(DBI)\nlibrary(dbplyr)\n\n\n\n2.1.12 脚本载入\n\nCodesource(\"data/add_function.R\")\nadd(c(1,24,4),4)\n#&gt; [1]  5 28  8\n\n\n\n\n\n\n\n\nNote\n\n\n\nadd_function\n\nCodeadd &lt;- function(x,y){\n  return(x+y)\n}",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "I-O.html#write",
    "href": "I-O.html#write",
    "title": "\n2  读入和写出\n",
    "section": "\n2.2 Write",
    "text": "2.2 Write\n\n2.2.1 文本输出\n\nCodewrite_csv()\nwrite_xlsx()\nwrite_rds()\nwrite_parquet()\n\n\n\nCodesink(\"data/sink_output.txt\",append = F,split = T)  # split =T 输出到控制台和文件\nletters\n#&gt;  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#&gt; [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nsink(NULL)\n\n\n\n2.2.2 图片输出\nRstudio 直接 Export save as Image/PDF，copy to clipboard\n\nCodepdf(file = \"data/pdf_output.pdf\")       # bmp,jpeg,png，SVG\nplot(1:25,1:25,pch=1:25,col=\"green\",bg=\"red\",type = \"b\")\nwhile(!is.null(dev.list()))  dev.off()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>读入和写出</span>"
    ]
  },
  {
    "objectID": "useful_function.html",
    "href": "useful_function.html",
    "title": "\n3  实用函数\n",
    "section": "",
    "text": "3.1 三方包的安装与更新\nCode# CRAN \ninstall.packages(\"package_name\")  \n# 本地 \ninstall.packages(\"package_file_path/package_name_version.tar.gz\", repos = NULL)  \n# Bioconductor \ninstall.packages(\"BiocManager\") \nBiocManager::install(\"Bioconductor_Packages\")  \n# Github \nremotes::install_github(\"tidyverse/ggplot2\")\nCodepacman::p_up() # 或 pacman::p_update()\nBiocManager::install()\nrvcheck::update_all()\nremotes::update_packages()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#查看默认加载的包",
    "href": "useful_function.html#查看默认加载的包",
    "title": "\n3  实用函数\n",
    "section": "\n3.2 查看默认加载的包",
    "text": "3.2 查看默认加载的包\n\nCode\nprint(.packages())\n#&gt;  [1] \"MASS\"        \"benchmarkme\" \"Rcpp\"        \"Matrix\"      \"writexl\"    \n#&gt;  [6] \"readxl\"      \"patchwork\"   \"stats\"       \"graphics\"    \"grDevices\"  \n#&gt; [11] \"utils\"       \"datasets\"    \"BiocManager\" \"lubridate\"   \"forcats\"    \n#&gt; [16] \"stringr\"     \"dplyr\"       \"purrr\"       \"readr\"       \"tidyr\"      \n#&gt; [21] \"tibble\"      \"ggplot2\"     \"tidyverse\"   \"conflicted\"  \"methods\"    \n#&gt; [26] \"base\"\nsearch()\n#&gt;  [1] \".GlobalEnv\"          \"package:MASS\"        \"package:benchmarkme\"\n#&gt;  [4] \"package:Rcpp\"        \"package:Matrix\"      \"package:writexl\"    \n#&gt;  [7] \"package:readxl\"      \"package:patchwork\"   \"package:stats\"      \n#&gt; [10] \"package:graphics\"    \"package:grDevices\"   \"package:utils\"      \n#&gt; [13] \"package:datasets\"    \".conflicts\"          \"package:BiocManager\"\n#&gt; [16] \"package:lubridate\"   \"package:forcats\"     \"package:stringr\"    \n#&gt; [19] \"package:dplyr\"       \"package:purrr\"       \"package:readr\"      \n#&gt; [22] \"package:tidyr\"       \"package:tibble\"      \"package:ggplot2\"    \n#&gt; [25] \"package:tidyverse\"   \"package:conflicted\"  \"package:methods\"    \n#&gt; [28] \"Autoloads\"           \"package:base\"\n# \nsessionInfo()\n#&gt; R version 4.4.0 (2024-04-24 ucrt)\n#&gt; Platform: x86_64-w64-mingw32/x64\n#&gt; Running under: Windows 10 x64 (build 19045)\n#&gt; \n#&gt; Matrix products: default\n#&gt; \n#&gt; \n#&gt; locale:\n#&gt; [1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n#&gt; [2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n#&gt; [3] LC_MONETARY=Chinese (Simplified)_China.utf8\n#&gt; [4] LC_NUMERIC=C                               \n#&gt; [5] LC_TIME=Chinese (Simplified)_China.utf8    \n#&gt; \n#&gt; time zone: Asia/Shanghai\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt;  [1] MASS_7.3-60.2       benchmarkme_1.0.8   Rcpp_1.0.12        \n#&gt;  [4] Matrix_1.7-0        writexl_1.5.0       readxl_1.4.3       \n#&gt;  [7] patchwork_1.2.0     BiocManager_1.30.23 lubridate_1.9.3    \n#&gt; [10] forcats_1.0.0       stringr_1.5.1       dplyr_1.1.4        \n#&gt; [13] purrr_1.0.2         readr_2.1.5         tidyr_1.3.1        \n#&gt; [16] tibble_3.2.1        ggplot2_3.5.1       tidyverse_2.0.0    \n#&gt; [19] conflicted_1.2.0   \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] utf8_1.2.4            generics_0.1.3        lattice_0.22-6       \n#&gt;  [4] stringi_1.8.4         hms_1.1.3             digest_0.6.35        \n#&gt;  [7] magrittr_2.0.3        evaluate_0.23         grid_4.4.0           \n#&gt; [10] timechange_0.3.0      iterators_1.0.14      fastmap_1.2.0        \n#&gt; [13] foreach_1.5.2         doParallel_1.0.17     cellranger_1.1.0     \n#&gt; [16] jsonlite_1.8.8        httr_1.4.7            fansi_1.0.6          \n#&gt; [19] scales_1.3.0          codetools_0.2-20      cli_3.6.2            \n#&gt; [22] rlang_1.1.4           munsell_0.5.1         withr_3.0.0          \n#&gt; [25] cachem_1.1.0          parallel_4.4.0        tools_4.4.0          \n#&gt; [28] tzdb_0.4.0            memoise_2.0.1         colorspace_2.1-0     \n#&gt; [31] vctrs_0.6.5           R6_2.5.1              lifecycle_1.0.4      \n#&gt; [34] htmlwidgets_1.6.4     pkgconfig_2.0.3       pillar_1.9.0         \n#&gt; [37] gtable_0.3.5          glue_1.7.0            benchmarkmeData_1.0.4\n#&gt; [40] xfun_0.44             tidyselect_1.2.1      rstudioapi_0.16.0    \n#&gt; [43] knitr_1.47            htmltools_0.5.8.1     rmarkdown_2.27       \n#&gt; [46] compiler_4.4.0\ndevtools::session_info()\n#&gt; ─ Session info ───────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.4.0 (2024-04-24 ucrt)\n#&gt;  os       Windows 10 x64 (build 19045)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  Chinese (Simplified)_China.utf8\n#&gt;  ctype    Chinese (Simplified)_China.utf8\n#&gt;  tz       Asia/Shanghai\n#&gt;  date     2024-06-06\n#&gt;  pandoc   3.1.11 @ D:/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────────────────\n#&gt;  package         * version  date (UTC) lib source\n#&gt;  benchmarkme     * 1.0.8    2022-06-12 [1] CRAN (R 4.4.0)\n#&gt;  benchmarkmeData   1.0.4    2020-04-23 [1] CRAN (R 4.4.0)\n#&gt;  BiocManager     * 1.30.23  2024-05-04 [1] CRAN (R 4.4.0)\n#&gt;  cachem            1.1.0    2024-05-16 [1] CRAN (R 4.4.0)\n#&gt;  cellranger        1.1.0    2016-07-27 [1] CRAN (R 4.4.0)\n#&gt;  cli               3.6.2    2023-12-11 [1] CRAN (R 4.4.0)\n#&gt;  codetools         0.2-20   2024-03-31 [1] CRAN (R 4.4.0)\n#&gt;  colorspace        2.1-0    2023-01-23 [1] CRAN (R 4.4.0)\n#&gt;  conflicted      * 1.2.0    2023-02-01 [1] CRAN (R 4.4.0)\n#&gt;  devtools          2.4.5    2022-10-11 [1] CRAN (R 4.4.0)\n#&gt;  digest            0.6.35   2024-03-11 [1] CRAN (R 4.4.0)\n#&gt;  doParallel        1.0.17   2022-02-07 [1] CRAN (R 4.4.0)\n#&gt;  dplyr           * 1.1.4    2023-11-17 [1] CRAN (R 4.4.0)\n#&gt;  ellipsis          0.3.2    2021-04-29 [1] CRAN (R 4.4.0)\n#&gt;  evaluate          0.23     2023-11-01 [1] CRAN (R 4.4.0)\n#&gt;  fansi             1.0.6    2023-12-08 [1] CRAN (R 4.4.0)\n#&gt;  fastmap           1.2.0    2024-05-15 [1] CRAN (R 4.4.0)\n#&gt;  forcats         * 1.0.0    2023-01-29 [1] CRAN (R 4.4.0)\n#&gt;  foreach           1.5.2    2022-02-02 [1] CRAN (R 4.4.0)\n#&gt;  fs                1.6.4    2024-04-25 [1] CRAN (R 4.4.0)\n#&gt;  generics          0.1.3    2022-07-05 [1] CRAN (R 4.4.0)\n#&gt;  ggplot2         * 3.5.1    2024-04-23 [1] CRAN (R 4.4.0)\n#&gt;  glue              1.7.0    2024-01-09 [1] CRAN (R 4.4.0)\n#&gt;  gtable            0.3.5    2024-04-22 [1] CRAN (R 4.4.0)\n#&gt;  hms               1.1.3    2023-03-21 [1] CRAN (R 4.4.0)\n#&gt;  htmltools         0.5.8.1  2024-04-04 [1] CRAN (R 4.4.0)\n#&gt;  htmlwidgets       1.6.4    2023-12-06 [1] CRAN (R 4.4.0)\n#&gt;  httpuv            1.6.15   2024-03-26 [1] CRAN (R 4.4.0)\n#&gt;  httr              1.4.7    2023-08-15 [1] CRAN (R 4.4.0)\n#&gt;  iterators         1.0.14   2022-02-05 [1] CRAN (R 4.4.0)\n#&gt;  jsonlite          1.8.8    2023-12-04 [1] CRAN (R 4.4.0)\n#&gt;  knitr             1.47     2024-05-29 [1] CRAN (R 4.4.0)\n#&gt;  later             1.3.2    2023-12-06 [1] CRAN (R 4.4.0)\n#&gt;  lattice           0.22-6   2024-03-20 [1] CRAN (R 4.4.0)\n#&gt;  lifecycle         1.0.4    2023-11-07 [1] CRAN (R 4.4.0)\n#&gt;  lubridate       * 1.9.3    2023-09-27 [1] CRAN (R 4.4.0)\n#&gt;  magrittr          2.0.3    2022-03-30 [1] CRAN (R 4.4.0)\n#&gt;  MASS            * 7.3-60.2 2024-04-24 [1] local\n#&gt;  Matrix          * 1.7-0    2024-03-22 [1] CRAN (R 4.4.0)\n#&gt;  memoise           2.0.1    2021-11-26 [1] CRAN (R 4.4.0)\n#&gt;  mime              0.12     2021-09-28 [1] CRAN (R 4.4.0)\n#&gt;  miniUI            0.1.1.1  2018-05-18 [1] CRAN (R 4.4.0)\n#&gt;  munsell           0.5.1    2024-04-01 [1] CRAN (R 4.4.0)\n#&gt;  patchwork       * 1.2.0    2024-01-08 [1] CRAN (R 4.4.0)\n#&gt;  pillar            1.9.0    2023-03-22 [1] CRAN (R 4.4.0)\n#&gt;  pkgbuild          1.4.4    2024-03-17 [1] CRAN (R 4.4.0)\n#&gt;  pkgconfig         2.0.3    2019-09-22 [1] CRAN (R 4.4.0)\n#&gt;  pkgload           1.3.4    2024-01-16 [1] CRAN (R 4.4.0)\n#&gt;  profvis           0.3.8    2023-05-02 [1] CRAN (R 4.4.0)\n#&gt;  promises          1.3.0    2024-04-05 [1] CRAN (R 4.4.0)\n#&gt;  purrr           * 1.0.2    2023-08-10 [1] CRAN (R 4.4.0)\n#&gt;  R6                2.5.1    2021-08-19 [1] CRAN (R 4.4.0)\n#&gt;  Rcpp            * 1.0.12   2024-01-09 [1] CRAN (R 4.4.0)\n#&gt;  readr           * 2.1.5    2024-01-10 [1] CRAN (R 4.4.0)\n#&gt;  readxl          * 1.4.3    2023-07-06 [1] CRAN (R 4.4.0)\n#&gt;  remotes           2.5.0    2024-03-17 [1] CRAN (R 4.4.0)\n#&gt;  rlang             1.1.4    2024-06-04 [1] CRAN (R 4.4.0)\n#&gt;  rmarkdown         2.27     2024-05-17 [1] CRAN (R 4.4.0)\n#&gt;  rstudioapi        0.16.0   2024-03-24 [1] CRAN (R 4.4.0)\n#&gt;  scales            1.3.0    2023-11-28 [1] CRAN (R 4.4.0)\n#&gt;  sessioninfo       1.2.2    2021-12-06 [1] CRAN (R 4.4.0)\n#&gt;  shiny             1.8.1.1  2024-04-02 [1] CRAN (R 4.4.0)\n#&gt;  stringi           1.8.4    2024-05-06 [1] CRAN (R 4.4.0)\n#&gt;  stringr         * 1.5.1    2023-11-14 [1] CRAN (R 4.4.0)\n#&gt;  tibble          * 3.2.1    2023-03-20 [1] CRAN (R 4.4.0)\n#&gt;  tidyr           * 1.3.1    2024-01-24 [1] CRAN (R 4.4.0)\n#&gt;  tidyselect        1.2.1    2024-03-11 [1] CRAN (R 4.4.0)\n#&gt;  tidyverse       * 2.0.0    2023-02-22 [1] CRAN (R 4.4.0)\n#&gt;  timechange        0.3.0    2024-01-18 [1] CRAN (R 4.4.0)\n#&gt;  tzdb              0.4.0    2023-05-12 [1] CRAN (R 4.4.0)\n#&gt;  urlchecker        1.0.1    2021-11-30 [1] CRAN (R 4.4.0)\n#&gt;  usethis           2.2.3    2024-02-19 [1] CRAN (R 4.4.0)\n#&gt;  utf8              1.2.4    2023-10-22 [1] CRAN (R 4.4.0)\n#&gt;  vctrs             0.6.5    2023-12-01 [1] CRAN (R 4.4.0)\n#&gt;  withr             3.0.0    2024-01-16 [1] CRAN (R 4.4.0)\n#&gt;  writexl         * 1.5.0    2024-02-09 [1] CRAN (R 4.4.0)\n#&gt;  xfun              0.44     2024-05-15 [1] CRAN (R 4.4.0)\n#&gt;  xtable            1.8-4    2019-04-21 [1] CRAN (R 4.4.0)\n#&gt; \n#&gt;  [1] D:/R-4.4.0/library\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#对象的显示和删除",
    "href": "useful_function.html#对象的显示和删除",
    "title": "\n3  实用函数\n",
    "section": "\n3.3 对象的显示和删除",
    "text": "3.3 对象的显示和删除\n\nCodels()\n#&gt; character(0)\nls.str()\n\nrm(list = ls())",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#索引",
    "href": "useful_function.html#索引",
    "title": "\n3  实用函数\n",
    "section": "\n3.4 索引",
    "text": "3.4 索引\n\nCode1:length(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32\nseq_along(mtcars$mpg)\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n#&gt; [26] 26 27 28 29 30 31 32",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#子集运算",
    "href": "useful_function.html#子集运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.5 子集运算",
    "text": "3.5 子集运算\n[，$，[[\nS4 对象： @ slot\n\n3.5.1 [ ]\n\n\nCodex &lt;- c(2.1, 4.2, 3.3, 5.4)\n\nx[c(3, 1)]\n#&gt; [1] 3.3 2.1\n\nx[-c(3, 1)]\n#&gt; [1] 4.2 5.4\n\nx[c(TRUE, TRUE, FALSE, FALSE)]\n#&gt; [1] 2.1 4.2\nx[x &gt; 3]\n#&gt; [1] 4.2 3.3 5.4\n\nx[c(TRUE, FALSE)] # recycling rules 循环\n#&gt; [1] 2.1 3.3\n\nx[]\n#&gt; [1] 2.1 4.2 3.3 5.4\n\nx[0]\n#&gt; numeric(0)\n\n\n\n3.5.2 $, [[ ]]\n\n$是一个简写运算符, x$y大致相当于 x[[\"y\"]] ,从左到右部分匹配\n\nCodex &lt;- list(abc = 1)\nx$a\n#&gt; [1] 1\n\nx[[\"a\"]]\n#&gt; NULL\n\noptions(warnPartialMatchDollar = TRUE)\nx$a\n#&gt; [1] 1\n\n\n\n3.5.3 subset(), sample()\n\n\nCodesubset()\nsample()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#seq-rep-cut",
    "href": "useful_function.html#seq-rep-cut",
    "title": "\n3  实用函数\n",
    "section": "\n3.6 seq(), rep(), cut()\n",
    "text": "3.6 seq(), rep(), cut()\n\n\nCodeseq(from=1,to=30,by=3)  # 生成一个序列\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28\nseq(from=1,to=30,length=10) \n#&gt;  [1]  1.000000  4.222222  7.444444 10.666667 13.888889 17.111111 20.333333\n#&gt;  [8] 23.555556 26.777778 30.000000\n\nsequence(30,by=3)\n#&gt;  [1]  1  4  7 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67 70 73\n#&gt; [26] 76 79 82 85 88\n\n\nrep(x = c(\"A\",1,\"B\",2),times = 3)           #重复序列\n#&gt;  [1] \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\" \"A\" \"1\" \"B\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),times = c(1,2,3,4))\n#&gt;  [1] \"A\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"2\"\nrep(x = c(\"A\",1,\"B\",2),each = 3,times = 2)\n#&gt;  [1] \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\" \"B\" \"B\" \"2\" \"2\" \"2\" \"A\" \"A\" \"A\" \"1\" \"1\" \"1\" \"B\"\n#&gt; [20] \"B\" \"B\" \"2\" \"2\" \"2\"\n\nx &lt;- c(2.3,4.5,2.4,3,3.8,4,5.6,6.7,2.1,1.5)\ncut( x = x, breaks =3,)                # 因子\n#&gt;  [1] (1.49,3.23] (3.23,4.97] (1.49,3.23] (1.49,3.23] (3.23,4.97] (3.23,4.97]\n#&gt;  [7] (4.97,6.71] (4.97,6.71] (1.49,3.23] (1.49,3.23]\n#&gt; Levels: (1.49,3.23] (3.23,4.97] (4.97,6.71]\ncut( x = x, breaks =c(1,3,5,8),include.lowest = TRUE) \n#&gt;  [1] [1,3] (3,5] [1,3] [1,3] (3,5] (3,5] (5,8] (5,8] [1,3] [1,3]\n#&gt; Levels: [1,3] (3,5] (5,8]",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#逻辑运算",
    "href": "useful_function.html#逻辑运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.7 逻辑运算",
    "text": "3.7 逻辑运算\n\nCodex&lt;-c(2,3,5,1,4)\nx&gt;2\n#&gt; [1] FALSE  TRUE  TRUE FALSE  TRUE\n\nall(x&gt;2)\n#&gt; [1] FALSE\nany(x&gt;2)\n#&gt; [1] TRUE\n\n# 返回值为TRUE的索引\nwhich(x&gt;2)\n#&gt; [1] 2 3 5\nwhich.max(x)\n#&gt; [1] 3\nwhich.min(x)\n#&gt; [1] 4\n\n# 返回值\nx[x&gt;2]\n#&gt; [1] 3 5 4\nx[which(x&gt;2)]\n#&gt; [1] 3 5 4",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#集合运算",
    "href": "useful_function.html#集合运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.8 集合运算",
    "text": "3.8 集合运算\n\nCode(x1 &lt;- 1:10 %% 2 == 0)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE\n(x2 &lt;- which(x1))\n#&gt; [1]  2  4  6  8 10\n\n(y1 &lt;- 1:10 %% 5 == 0)\n#&gt;  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n(y2 &lt;- which(y1))\n#&gt; [1]  5 10\n# 交集\nx1 & y1\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\nbase::intersect(x2, y2)\n#&gt; [1] 10\n\n# 并集\nx1 | y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE\nbase::union(x2,y2)\n#&gt; [1]  2  4  6  8 10  5\n\n# 差集\nx1 & !y1\n#&gt;  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(x2, y2)\n#&gt; [1] 2 4 6 8\n\nxor(x1, y1)\n#&gt;  [1] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\nbase::setdiff(base::union(x2, y2), base::intersect(x2, y2))\n#&gt; [1] 2 4 6 8 5",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#排序",
    "href": "useful_function.html#排序",
    "title": "\n3  实用函数\n",
    "section": "\n3.9 排序",
    "text": "3.9 排序\n\nCodex &lt;- c(\"b\", \"c\", \"a\")\norder(x)\n#&gt; [1] 3 1 2\nx[order(x)]\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n\nCodesort()\ndplyr::arrange()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#数学函数",
    "href": "useful_function.html#数学函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.10 数学函数",
    "text": "3.10 数学函数\n\nCodex&lt;-c(25,-4,3.66,3.42,-5.99)\nabs(x)                       #绝对值\n#&gt; [1] 25.00  4.00  3.66  3.42  5.99\nsqrt(x)                      #平方根\n#&gt; [1] 5.000000      NaN 1.913113 1.849324      NaN\nceiling(x)                   #向上取整\n#&gt; [1] 25 -4  4  4 -5\nfloor(x)                     #向下取整\n#&gt; [1] 25 -4  3  3 -6\ntrunc(x)                     #整数部分\n#&gt; [1] 25 -4  3  3 -5\nround(x,digits = 2)          #四舍五入，保留2位小数\n#&gt; [1] 25.00 -4.00  3.66  3.42 -5.99\nsignif(x,digits = 2)         #四舍五入，保留2有效数字\n#&gt; [1] 25.0 -4.0  3.7  3.4 -6.0\nlog(x,base=4)                #对x取以base为底的对数\n#&gt; [1] 2.3219281       NaN 0.9359218 0.8869982       NaN\nlog(x)                          #自然对数\n#&gt; [1] 3.218876      NaN 1.297463 1.229641      NaN\nlog10(x)                        #常用对数\n#&gt; [1] 1.3979400       NaN 0.5634811 0.5340261       NaN\nexp(x)                       #e指数函数\n#&gt; [1] 7.200490e+10 1.831564e-02 3.886134e+01 3.056942e+01 2.503664e-03",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#统计函数",
    "href": "useful_function.html#统计函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.11 统计函数",
    "text": "3.11 统计函数\n\nCodemean(x,trim = 0.05,na.rm = TRUE)     #算术平均值\n#&gt; [1] 4.418\nmedian(x)                            #中位数\n#&gt; [1] 3.42\nsd(x)                                #标准差\n#&gt; [1] 12.29206\nvar(x)                               #方差\n#&gt; [1] 151.0946\nmad(x)                               #绝对中位差\n#&gt; [1] 11.00089\nquantile(x,probs = c(0,0.25,0.5,0.75,1))     #分位数\n#&gt;    0%   25%   50%   75%  100% \n#&gt; -5.99 -4.00  3.42  3.66 25.00\nrange(x)                             # 值域\n#&gt; [1] -5.99 25.00\nscale(x,center = TRUE,scale = TRUE)  #标准化（均值为0、标准差为1）\n#&gt;             [,1]\n#&gt; [1,]  1.67441487\n#&gt; [2,] -0.68483259\n#&gt; [3,] -0.06166585\n#&gt; [4,] -0.08119065\n#&gt; [5,] -0.84672578\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n#&gt; attr(,\"scaled:scale\")\n#&gt; [1] 12.29206\nscale(x,center = TRUE,scale =FALSE)  #中心化：减去均值\n#&gt;         [,1]\n#&gt; [1,]  20.582\n#&gt; [2,]  -8.418\n#&gt; [3,]  -0.758\n#&gt; [4,]  -0.998\n#&gt; [5,] -10.408\n#&gt; attr(,\"scaled:center\")\n#&gt; [1] 4.418\n\n\nx &lt;- c(1,3,5,7,9,11,13)\n# Find the \"previous\" (lag()) or \"next\" (lead()) values in a vector\ndplyr::lag(x,n=2)                      # n阶滞后\n#&gt; [1] NA NA  1  3  5  7  9\ndplyr::lead(x,n=2)                     # n阶前移\n#&gt; [1]  5  7  9 11 13 NA NA\n\n# 滞后差分  lag阶滞后  difference阶差分\ndiff(x,lag = 1,difference=1)     # 隔0个值后位减前位，进行1次\n#&gt; [1] 2 2 2 2 2 2\ndiff(x,lag = 1,difference=2)     ## 隔0个值后位减前位，进行2次\n#&gt; [1] 0 0 0 0 0\ndiff(x,lag = 1,difference=3)     # 隔0个值后位减前位，进行3次\n#&gt; [1] 0 0 0 0\n\ndiff(x,lag = 2,difference=1)  # 隔1个值后位减前位，进行1次\n#&gt; [1] 4 4 4 4 4\ndiff(x,lag = 2,difference=2) ## 隔1个值后位减前位，进行2次\n#&gt; [1] 0 0 0",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#字符串函数",
    "href": "useful_function.html#字符串函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.12 字符串函数",
    "text": "3.12 字符串函数\n\nCode\n# 匹配\ndata &lt;- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Carol\", \"Dave\", \"Eve\"),\n  description = c(\"Software developer\", \"Data analyst\", \"UX designer\", \"Project manager\", \"Data scientist\")\n)\ndata\n\n\n\n\nname\ndescription\n\n\n\nAlice\nSoftware developer\n\n\nBob\nData analyst\n\n\nCarol\nUX designer\n\n\nDave\nProject manager\n\n\nEve\nData scientist\n\n\n\n\n\nCode\ndata$has_data_analyst &lt;- str_detect(data$description, \"Data analyst\")\nprint(data)\n#&gt;    name        description has_data_analyst\n#&gt; 1 Alice Software developer            FALSE\n#&gt; 2   Bob       Data analyst             TRUE\n#&gt; 3 Carol        UX designer            FALSE\n#&gt; 4  Dave    Project manager            FALSE\n#&gt; 5   Eve     Data scientist            FALSE\n\ndata$has_data_grepl &lt;- grepl(\"Data\", data$description)\nprint(data)\n#&gt;    name        description has_data_analyst has_data_grepl\n#&gt; 1 Alice Software developer            FALSE          FALSE\n#&gt; 2   Bob       Data analyst             TRUE           TRUE\n#&gt; 3 Carol        UX designer            FALSE          FALSE\n#&gt; 4  Dave    Project manager            FALSE          FALSE\n#&gt; 5   Eve     Data scientist            FALSE           TRUE\n\n\n\nCode#子串\nsubstr(x=\"qwertyyuio\",start = 2,stop=4)   \n#&gt; [1] \"wer\"\nstr_sub(string = \"qwertyyuio\",start = 2,end = 4)\n#&gt; [1] \"wer\"\n#查找替换\nsub(pattern = \" \",replacement = \".\",\n    x=\"hello world hello !\",ignore.case = FALSE,fixed = FALSE)  \n#&gt; [1] \"hello.world hello !\"\n\nstr_replace_all(\"hello world hello !\",\" \",replacement = \".\")\n#&gt; [1] \"hello.world.hello.!\"\n# 查找,返回下标\ngrep(pattern = \"v\",x=c(\"a\",\"v\",\"D\",\"A\",\"f\",\"J\"),ignore.case = FALSE,fixed = FALSE)   \n#&gt; [1] 2\n\n # 分隔，\\\\转义字符\nstrsplit(x=\"a.fa.fag\",split = \"\\\\.\",fixed = FALSE) \n#&gt; [[1]]\n#&gt; [1] \"a\"   \"fa\"  \"fag\"\n\n\n#连接\npaste(\"x\",c(\"a\",\"b\"),sep=\"\",collapse = \"?\")  \n#&gt; [1] \"xa?xb\"\npaste0(\"x\",c(\"A\",\"B\"),collapse=\"?\")\n#&gt; [1] \"xA?xB\"\n\ncat(\"hello\",\"BOb\",\"\\b\\n\",\"\\bIsn\\' R\",\"\\t\",\"GREAT?\\n\",sep = \" \" )\n#&gt; hello BOb \n#&gt;  Isn' R      GREAT?\n\n#\ntoupper(\"abc\")              #大写转换\n#&gt; [1] \"ABC\"\ntolower(\"aaAGEErg\")         #小写转换\n#&gt; [1] \"aaageerg\"\n\n\n\nCodea &lt;- \"string\"\nsprintf(\"This is where a %s goes.\", a)\n#&gt; [1] \"This is where a string goes.\"\n\nx &lt;- 8\nsprintf(\"Regular:%04d\", x)\n#&gt; [1] \"Regular:0008\"\n\nsprintf(\"%f\", pi)         # \"3.141593\"\n#&gt; [1] \"3.141593\"\nsprintf(\"%.3f\", pi)       # \"3.142\"\n#&gt; [1] \"3.142\"\nsprintf(\"%1.0f\", pi)      # \"3\"\n#&gt; [1] \"3\"\nsprintf(\"%5.1f\", pi)      # \"  3.1\"\n#&gt; [1] \"  3.1\"\nsprintf(\"%05.1f\", pi)     # \"003.1\"\n#&gt; [1] \"003.1\"\nsprintf(\"%+f\", pi)        # \"+3.141593\"\n#&gt; [1] \"+3.141593\"\nsprintf(\"% f\", pi)        # \" 3.141593\"\n#&gt; [1] \" 3.141593\"\nsprintf(\"%-10f\", pi)      # \"3.141593  \"   (left justified)\n#&gt; [1] \"3.141593  \"\nsprintf(\"%e\", pi)         #\"3.141593e+00\"\n#&gt; [1] \"3.141593e+00\"\nsprintf(\"%E\", pi)         # \"3.141593E+00\"\n#&gt; [1] \"3.141593E+00\"\nsprintf(\"%g\", pi)         # \"3.14159\"\n#&gt; [1] \"3.14159\"\nsprintf(\"%g\",   1e6 * pi) # \"3.14159e+06\"  (exponential)\n#&gt; [1] \"3.14159e+06\"\nsprintf(\"%.9g\", 1e6 * pi) # \"3141592.65\"   (\"fixed\")\n#&gt; [1] \"3141592.65\"\nsprintf(\"%G\", 1e-6 * pi)  # \"3.14159E-06\"\n#&gt; [1] \"3.14159E-06\"",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#apply函数簇",
    "href": "useful_function.html#apply函数簇",
    "title": "\n3  实用函数\n",
    "section": "\n3.13 apply函数簇",
    "text": "3.13 apply函数簇\n\n3.13.1 apply()\n\n\nCodeapply(X = mtcars, MARGIN = 2, FUN = mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\n3.13.2 aggregate()\n\n\nCodeaggregate(x = mtcars,\n          by = list(am=mtcars$am,cyl=mtcars$cyl),\n          FUN = mean)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n0\n4\n22.90000\n4\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n0\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n4\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n1\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n6\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n0\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n6\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n1\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n8\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n0\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n8\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n1\n5.000000\n6.000000\n\n\n\n\n\nCodeaggregate(.~am+cyl,\n          data = mtcars,\n          FUN = mean)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nam\ncyl\nmpg\ndisp\nhp\ndrat\nwt\nqsec\nvs\ngear\ncarb\n\n\n\n0\n4\n22.90000\n135.8667\n84.66667\n3.770000\n2.935000\n20.97000\n1.000\n3.666667\n1.666667\n\n\n1\n4\n28.07500\n93.6125\n81.87500\n4.183750\n2.042250\n18.45000\n0.875\n4.250000\n1.500000\n\n\n0\n6\n19.12500\n204.5500\n115.25000\n3.420000\n3.388750\n19.21500\n1.000\n3.500000\n2.500000\n\n\n1\n6\n20.56667\n155.0000\n131.66667\n3.806667\n2.755000\n16.32667\n0.000\n4.333333\n4.666667\n\n\n0\n8\n15.05000\n357.6167\n194.16667\n3.120833\n4.104083\n17.14250\n0.000\n3.000000\n3.083333\n\n\n1\n8\n15.40000\n326.0000\n299.50000\n3.880000\n3.370000\n14.55000\n0.000\n5.000000\n6.000000\n\n\n\n\n\nCodeaggregate(mpg~am+cyl,\n          data = mtcars,\n          FUN = summary)\n\n\n\n\nam\ncyl\nmpg\n\n\n\n0\n4\n21.50000\n\n\n1\n4\n21.40000\n\n\n0\n6\n17.80000\n\n\n1\n6\n19.70000\n\n\n0\n8\n10.40000\n\n\n1\n8\n15.00000\n\n\n\n\n\n\n\n3.13.3 by(), tapply()\n\nby()是应用于数据框的tapply的面向对象包装器。\n\nCodeby(data = mtcars[,1:3],\n   INDICES = list(cyl=mtcars$cyl),\n   FUN = summary)\n#&gt; cyl: 4\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 6\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; ------------------------------------------------------------ \n#&gt; cyl: 8\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\nby(data = mtcars[,1:3],\n   INDICES = factor(mtcars$cyl),\n   FUN = function(x) lm( disp ~ mpg, data = x))\n#&gt; factor(mtcars$cyl): 4\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     233.067       -4.798  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 6\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;     125.122        2.947  \n#&gt; \n#&gt; ------------------------------------------------------------ \n#&gt; factor(mtcars$cyl): 8\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = disp ~ mpg, data = x)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)          mpg  \n#&gt;      560.87       -13.76\n\ntapply(X = mtcars[,1:3],\n       INDEX = list(cyl=mtcars$cyl),\n       FUN = summary)\n#&gt; $`4`\n#&gt;       mpg             cyl         disp       \n#&gt;  Min.   :21.40   Min.   :4   Min.   : 71.10  \n#&gt;  1st Qu.:22.80   1st Qu.:4   1st Qu.: 78.85  \n#&gt;  Median :26.00   Median :4   Median :108.00  \n#&gt;  Mean   :26.66   Mean   :4   Mean   :105.14  \n#&gt;  3rd Qu.:30.40   3rd Qu.:4   3rd Qu.:120.65  \n#&gt;  Max.   :33.90   Max.   :4   Max.   :146.70  \n#&gt; \n#&gt; $`6`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :17.80   Min.   :6   Min.   :145.0  \n#&gt;  1st Qu.:18.65   1st Qu.:6   1st Qu.:160.0  \n#&gt;  Median :19.70   Median :6   Median :167.6  \n#&gt;  Mean   :19.74   Mean   :6   Mean   :183.3  \n#&gt;  3rd Qu.:21.00   3rd Qu.:6   3rd Qu.:196.3  \n#&gt;  Max.   :21.40   Max.   :6   Max.   :258.0  \n#&gt; \n#&gt; $`8`\n#&gt;       mpg             cyl         disp      \n#&gt;  Min.   :10.40   Min.   :8   Min.   :275.8  \n#&gt;  1st Qu.:14.40   1st Qu.:8   1st Qu.:301.8  \n#&gt;  Median :15.20   Median :8   Median :350.5  \n#&gt;  Mean   :15.10   Mean   :8   Mean   :353.1  \n#&gt;  3rd Qu.:16.25   3rd Qu.:8   3rd Qu.:390.0  \n#&gt;  Max.   :19.20   Max.   :8   Max.   :472.0\n\n\n\n3.13.4 lapply(), sapply()\n\nlapply() returns a list of the same length as X,\nsapply() is a user-friendly version and wrapper of lapply() by default returning a vector or matrix\n\nCodex &lt;- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))\nlapply(X = x,FUN = quantile)\n#&gt; $a\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00 \n#&gt; \n#&gt; $beta\n#&gt;          0%         25%         50%         75%        100% \n#&gt;  0.04978707  0.25160736  1.00000000  5.05366896 20.08553692 \n#&gt; \n#&gt; $logic\n#&gt;   0%  25%  50%  75% 100% \n#&gt;  0.0  0.0  0.5  1.0  1.0\n\nsapply(x, quantile)\n#&gt;          a        beta logic\n#&gt; 0%    1.00  0.04978707   0.0\n#&gt; 25%   3.25  0.25160736   0.0\n#&gt; 50%   5.50  1.00000000   0.5\n#&gt; 75%   7.75  5.05366896   1.0\n#&gt; 100% 10.00 20.08553692   1.0\n\n\n\n3.13.5 vapply\n\n\nCodeby_cyl &lt;- split(mtcars, mtcars$cyl)\nmodels &lt;- lapply(by_cyl, function(data) lm(mpg ~ wt, data = data))\nmodels\n#&gt; $`4`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      39.571       -5.647  \n#&gt; \n#&gt; \n#&gt; $`6`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;       28.41        -2.78  \n#&gt; \n#&gt; \n#&gt; $`8`\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = mpg ~ wt, data = data)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)           wt  \n#&gt;      23.868       -2.192\nvapply(models, function(x) coef(x)[[2]], double(1))\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#矩阵运算",
    "href": "useful_function.html#矩阵运算",
    "title": "\n3  实用函数\n",
    "section": "\n3.14 矩阵运算",
    "text": "3.14 矩阵运算\n\nCodeX &lt;- matrix(data = 1:9,ncol = 3,nrow = 3)\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n\ndiag(X)\n#&gt; [1] 1 5 9\ndet(X)\n#&gt; [1] 0\neigen(X)\n#&gt; eigen() decomposition\n#&gt; $values\n#&gt; [1]  1.611684e+01 -1.116844e+00 -5.700691e-16\n#&gt; \n#&gt; $vectors\n#&gt;            [,1]       [,2]       [,3]\n#&gt; [1,] -0.4645473 -0.8829060  0.4082483\n#&gt; [2,] -0.5707955 -0.2395204 -0.8164966\n#&gt; [3,] -0.6770438  0.4038651  0.4082483\n\nX\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    4    7\n#&gt; [2,]    2    5    8\n#&gt; [3,]    3    6    9\n# 协方差矩阵\ncov(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1\n\n# 相关系数矩阵\ncor(X)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    1    1\n#&gt; [2,]    1    1    1\n#&gt; [3,]    1    1    1",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "useful_function.html#统计分布函数",
    "href": "useful_function.html#统计分布函数",
    "title": "\n3  实用函数\n",
    "section": "\n3.15 统计分布函数",
    "text": "3.15 统计分布函数\n形如[dpqr]distribution_abbreviation，其中密度函数d，分布函数p，分位数函数q，随机数生成函数r\n\nCode### 正态分布\ndnorm(3,0,2)  #N(0,4)在 3 处的密度值\n#&gt; [1] 0.0647588\npnorm(1:3,0,2)#N(0,4)在1，2，3处的分布概率值\n#&gt; [1] 0.6914625 0.8413447 0.9331928\nqnorm(1-0.025,0,1)# N(0,1)的上0.025分位数\n#&gt; [1] 1.959964\nrnorm(5,3,3)  # 生成5个服从N(3,9)的随机数\n#&gt; [1] 0.2891081 3.4383484 1.4556073 4.1387602 3.2466002\n\n\n### 二项分布\n1-sum(dbinom(0:1,400,0.02))# 命中率为0.02，独立射击400次，至少击中2次的概率\n#&gt; [1] 0.9971655\nggplot()\n\n\n\n\n\n\nCode\n\n\n### 多元正态分布\nmean&lt;-c(230.7,146.7,3.6)\nsigma&lt;-matrix(c(15360.8,6721.2,-47.1,\n                6721.2,4700.9,-16.5,\n                -47.1,16.5,0.3),nrow = 3,ncol = 3)\nlibrary(MASS)\nmulti &lt;- mvrnorm(500,mean,sigma)\nhead(multi)\n#&gt;            [,1]       [,2]     [,3]\n#&gt; [1,] 274.360632 178.296590 3.739516\n#&gt; [2,] 276.925939 146.194721 3.891480\n#&gt; [3,] 365.619110 314.044505 3.489077\n#&gt; [4,] 309.964766 268.700640 3.730031\n#&gt; [5,]   5.294053  -9.555759 4.001449\n#&gt; [6,] 207.046292 202.889589 3.198244",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>实用函数</span>"
    ]
  },
  {
    "objectID": "base_graphics.html",
    "href": "base_graphics.html",
    "title": "\n4  base graphics\n",
    "section": "",
    "text": "4.1 图形参数",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#图形参数",
    "href": "base_graphics.html#图形参数",
    "title": "\n4  base graphics\n",
    "section": "",
    "text": "4.1.1 par()\n\nCodepar()     #返回当前设置，一个list\n#&gt; $xlog\n#&gt; [1] FALSE\n#&gt; \n#&gt; $ylog\n#&gt; [1] FALSE\n#&gt; \n#&gt; $adj\n#&gt; [1] 0.5\n#&gt; \n#&gt; $ann\n#&gt; [1] TRUE\n#&gt; \n#&gt; $ask\n#&gt; [1] FALSE\n#&gt; \n#&gt; $bg\n#&gt; [1] \"white\"\n#&gt; \n#&gt; $bty\n#&gt; [1] \"o\"\n#&gt; \n#&gt; $cex\n#&gt; [1] 1\n#&gt; \n#&gt; $cex.axis\n#&gt; [1] 1\n#&gt; \n#&gt; $cex.lab\n#&gt; [1] 1\n#&gt; \n#&gt; $cex.main\n#&gt; [1] 1.2\n#&gt; \n#&gt; $cex.sub\n#&gt; [1] 1\n#&gt; \n#&gt; $cin\n#&gt; [1] 0.15 0.20\n#&gt; \n#&gt; $col\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $col.axis\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $col.lab\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $col.main\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $col.sub\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $cra\n#&gt; [1] 10.8 14.4\n#&gt; \n#&gt; $crt\n#&gt; [1] 0\n#&gt; \n#&gt; $csi\n#&gt; [1] 0.2\n#&gt; \n#&gt; $cxy\n#&gt; [1] 0.02604167 0.06329114\n#&gt; \n#&gt; $din\n#&gt; [1] 7 5\n#&gt; \n#&gt; $err\n#&gt; [1] 0\n#&gt; \n#&gt; $family\n#&gt; [1] \"\"\n#&gt; \n#&gt; $fg\n#&gt; [1] \"black\"\n#&gt; \n#&gt; $fig\n#&gt; [1] 0 1 0 1\n#&gt; \n#&gt; $fin\n#&gt; [1] 7 5\n#&gt; \n#&gt; $font\n#&gt; [1] 1\n#&gt; \n#&gt; $font.axis\n#&gt; [1] 1\n#&gt; \n#&gt; $font.lab\n#&gt; [1] 1\n#&gt; \n#&gt; $font.main\n#&gt; [1] 2\n#&gt; \n#&gt; $font.sub\n#&gt; [1] 1\n#&gt; \n#&gt; $lab\n#&gt; [1] 5 5 7\n#&gt; \n#&gt; $las\n#&gt; [1] 0\n#&gt; \n#&gt; $lend\n#&gt; [1] \"round\"\n#&gt; \n#&gt; $lheight\n#&gt; [1] 1\n#&gt; \n#&gt; $ljoin\n#&gt; [1] \"round\"\n#&gt; \n#&gt; $lmitre\n#&gt; [1] 10\n#&gt; \n#&gt; $lty\n#&gt; [1] \"solid\"\n#&gt; \n#&gt; $lwd\n#&gt; [1] 1\n#&gt; \n#&gt; $mai\n#&gt; [1] 1.02 0.82 0.82 0.42\n#&gt; \n#&gt; $mar\n#&gt; [1] 5.1 4.1 4.1 2.1\n#&gt; \n#&gt; $mex\n#&gt; [1] 1\n#&gt; \n#&gt; $mfcol\n#&gt; [1] 1 1\n#&gt; \n#&gt; $mfg\n#&gt; [1] 1 1 1 1\n#&gt; \n#&gt; $mfrow\n#&gt; [1] 1 1\n#&gt; \n#&gt; $mgp\n#&gt; [1] 3 1 0\n#&gt; \n#&gt; $mkh\n#&gt; [1] 0.001\n#&gt; \n#&gt; $new\n#&gt; [1] FALSE\n#&gt; \n#&gt; $oma\n#&gt; [1] 0 0 0 0\n#&gt; \n#&gt; $omd\n#&gt; [1] 0 1 0 1\n#&gt; \n#&gt; $omi\n#&gt; [1] 0 0 0 0\n#&gt; \n#&gt; $page\n#&gt; [1] TRUE\n#&gt; \n#&gt; $pch\n#&gt; [1] 1\n#&gt; \n#&gt; $pin\n#&gt; [1] 5.76 3.16\n#&gt; \n#&gt; $plt\n#&gt; [1] 0.1171429 0.9400000 0.2040000 0.8360000\n#&gt; \n#&gt; $ps\n#&gt; [1] 12\n#&gt; \n#&gt; $pty\n#&gt; [1] \"m\"\n#&gt; \n#&gt; $smo\n#&gt; [1] 1\n#&gt; \n#&gt; $srt\n#&gt; [1] 0\n#&gt; \n#&gt; $tck\n#&gt; [1] NA\n#&gt; \n#&gt; $tcl\n#&gt; [1] -0.5\n#&gt; \n#&gt; $usr\n#&gt; [1] 0 1 0 1\n#&gt; \n#&gt; $xaxp\n#&gt; [1] 0 1 5\n#&gt; \n#&gt; $xaxs\n#&gt; [1] \"r\"\n#&gt; \n#&gt; $xaxt\n#&gt; [1] \"s\"\n#&gt; \n#&gt; $xpd\n#&gt; [1] FALSE\n#&gt; \n#&gt; $yaxp\n#&gt; [1] 0 1 5\n#&gt; \n#&gt; $yaxs\n#&gt; [1] \"r\"\n#&gt; \n#&gt; $yaxt\n#&gt; [1] \"s\"\n#&gt; \n#&gt; $ylbias\n#&gt; [1] 0.2\nopar&lt;-par(no.readonly = TRUE)\n\n\npar(pch=22) #空心=0、1、2、5、6,  黑色=15:20,  col边界色  bg= 21-25填充\npar(lty=1)  # 1=实线 2:6=虚线\npar(cex.main=2,font.main=4,col.main=\"black\")#font字体样式  4=粗斜体\npar(cex.sub=1.5,font.sub=3,col.sub=\"gray\")  # 3=斜体\npar(cex.lab=1.25,font.lab=2,col.lab=\"purple\")   # 2=粗体\npar(cex.axis=1,font.axis=1,col.axis=\"green4\") # 1=常规\npar(fg=\"black\")   #边框和刻度颜色\npar(bg=\"white\")  #背景色\npar(pin=c(4,3))        #宽×高 1英寸=1.7\npar(mar=c(5,4,4,2)+0.1)    #默认值，边距\n\npar(opar) #恢复默认设置\n\n\n\n4.1.2 颜色\n\nCodecolors()\n#&gt;   [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n#&gt;   [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n#&gt;   [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n#&gt;  [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n#&gt;  [13] \"azure\"                \"azure1\"               \"azure2\"              \n#&gt;  [16] \"azure3\"               \"azure4\"               \"beige\"               \n#&gt;  [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n#&gt;  [22] \"bisque3\"              \"bisque4\"              \"black\"               \n#&gt;  [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n#&gt;  [28] \"blue2\"                \"blue3\"                \"blue4\"               \n#&gt;  [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n#&gt;  [34] \"brown2\"               \"brown3\"               \"brown4\"              \n#&gt;  [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n#&gt;  [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n#&gt;  [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n#&gt;  [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n#&gt;  [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n#&gt;  [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n#&gt;  [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n#&gt;  [58] \"coral1\"               \"coral2\"               \"coral3\"              \n#&gt;  [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n#&gt;  [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n#&gt;  [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n#&gt;  [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n#&gt;  [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n#&gt;  [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n#&gt;  [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n#&gt;  [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n#&gt;  [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n#&gt;  [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n#&gt;  [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n#&gt;  [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n#&gt;  [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n#&gt; [100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n#&gt; [103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n#&gt; [106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n#&gt; [109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n#&gt; [112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n#&gt; [115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n#&gt; [118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n#&gt; [121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n#&gt; [124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n#&gt; [127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n#&gt; [130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n#&gt; [133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n#&gt; [136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n#&gt; [139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n#&gt; [142] \"gold\"                 \"gold1\"                \"gold2\"               \n#&gt; [145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n#&gt; [148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n#&gt; [151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n#&gt; [154] \"gray1\"                \"gray2\"                \"gray3\"               \n#&gt; [157] \"gray4\"                \"gray5\"                \"gray6\"               \n#&gt; [160] \"gray7\"                \"gray8\"                \"gray9\"               \n#&gt; [163] \"gray10\"               \"gray11\"               \"gray12\"              \n#&gt; [166] \"gray13\"               \"gray14\"               \"gray15\"              \n#&gt; [169] \"gray16\"               \"gray17\"               \"gray18\"              \n#&gt; [172] \"gray19\"               \"gray20\"               \"gray21\"              \n#&gt; [175] \"gray22\"               \"gray23\"               \"gray24\"              \n#&gt; [178] \"gray25\"               \"gray26\"               \"gray27\"              \n#&gt; [181] \"gray28\"               \"gray29\"               \"gray30\"              \n#&gt; [184] \"gray31\"               \"gray32\"               \"gray33\"              \n#&gt; [187] \"gray34\"               \"gray35\"               \"gray36\"              \n#&gt; [190] \"gray37\"               \"gray38\"               \"gray39\"              \n#&gt; [193] \"gray40\"               \"gray41\"               \"gray42\"              \n#&gt; [196] \"gray43\"               \"gray44\"               \"gray45\"              \n#&gt; [199] \"gray46\"               \"gray47\"               \"gray48\"              \n#&gt; [202] \"gray49\"               \"gray50\"               \"gray51\"              \n#&gt; [205] \"gray52\"               \"gray53\"               \"gray54\"              \n#&gt; [208] \"gray55\"               \"gray56\"               \"gray57\"              \n#&gt; [211] \"gray58\"               \"gray59\"               \"gray60\"              \n#&gt; [214] \"gray61\"               \"gray62\"               \"gray63\"              \n#&gt; [217] \"gray64\"               \"gray65\"               \"gray66\"              \n#&gt; [220] \"gray67\"               \"gray68\"               \"gray69\"              \n#&gt; [223] \"gray70\"               \"gray71\"               \"gray72\"              \n#&gt; [226] \"gray73\"               \"gray74\"               \"gray75\"              \n#&gt; [229] \"gray76\"               \"gray77\"               \"gray78\"              \n#&gt; [232] \"gray79\"               \"gray80\"               \"gray81\"              \n#&gt; [235] \"gray82\"               \"gray83\"               \"gray84\"              \n#&gt; [238] \"gray85\"               \"gray86\"               \"gray87\"              \n#&gt; [241] \"gray88\"               \"gray89\"               \"gray90\"              \n#&gt; [244] \"gray91\"               \"gray92\"               \"gray93\"              \n#&gt; [247] \"gray94\"               \"gray95\"               \"gray96\"              \n#&gt; [250] \"gray97\"               \"gray98\"               \"gray99\"              \n#&gt; [253] \"gray100\"              \"green\"                \"green1\"              \n#&gt; [256] \"green2\"               \"green3\"               \"green4\"              \n#&gt; [259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n#&gt; [262] \"grey1\"                \"grey2\"                \"grey3\"               \n#&gt; [265] \"grey4\"                \"grey5\"                \"grey6\"               \n#&gt; [268] \"grey7\"                \"grey8\"                \"grey9\"               \n#&gt; [271] \"grey10\"               \"grey11\"               \"grey12\"              \n#&gt; [274] \"grey13\"               \"grey14\"               \"grey15\"              \n#&gt; [277] \"grey16\"               \"grey17\"               \"grey18\"              \n#&gt; [280] \"grey19\"               \"grey20\"               \"grey21\"              \n#&gt; [283] \"grey22\"               \"grey23\"               \"grey24\"              \n#&gt; [286] \"grey25\"               \"grey26\"               \"grey27\"              \n#&gt; [289] \"grey28\"               \"grey29\"               \"grey30\"              \n#&gt; [292] \"grey31\"               \"grey32\"               \"grey33\"              \n#&gt; [295] \"grey34\"               \"grey35\"               \"grey36\"              \n#&gt; [298] \"grey37\"               \"grey38\"               \"grey39\"              \n#&gt; [301] \"grey40\"               \"grey41\"               \"grey42\"              \n#&gt; [304] \"grey43\"               \"grey44\"               \"grey45\"              \n#&gt; [307] \"grey46\"               \"grey47\"               \"grey48\"              \n#&gt; [310] \"grey49\"               \"grey50\"               \"grey51\"              \n#&gt; [313] \"grey52\"               \"grey53\"               \"grey54\"              \n#&gt; [316] \"grey55\"               \"grey56\"               \"grey57\"              \n#&gt; [319] \"grey58\"               \"grey59\"               \"grey60\"              \n#&gt; [322] \"grey61\"               \"grey62\"               \"grey63\"              \n#&gt; [325] \"grey64\"               \"grey65\"               \"grey66\"              \n#&gt; [328] \"grey67\"               \"grey68\"               \"grey69\"              \n#&gt; [331] \"grey70\"               \"grey71\"               \"grey72\"              \n#&gt; [334] \"grey73\"               \"grey74\"               \"grey75\"              \n#&gt; [337] \"grey76\"               \"grey77\"               \"grey78\"              \n#&gt; [340] \"grey79\"               \"grey80\"               \"grey81\"              \n#&gt; [343] \"grey82\"               \"grey83\"               \"grey84\"              \n#&gt; [346] \"grey85\"               \"grey86\"               \"grey87\"              \n#&gt; [349] \"grey88\"               \"grey89\"               \"grey90\"              \n#&gt; [352] \"grey91\"               \"grey92\"               \"grey93\"              \n#&gt; [355] \"grey94\"               \"grey95\"               \"grey96\"              \n#&gt; [358] \"grey97\"               \"grey98\"               \"grey99\"              \n#&gt; [361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n#&gt; [364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n#&gt; [367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n#&gt; [370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n#&gt; [373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n#&gt; [376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n#&gt; [379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n#&gt; [382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n#&gt; [385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n#&gt; [388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n#&gt; [391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n#&gt; [394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n#&gt; [397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n#&gt; [400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n#&gt; [403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n#&gt; [406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n#&gt; [409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n#&gt; [412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n#&gt; [415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n#&gt; [418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n#&gt; [421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n#&gt; [424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n#&gt; [427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n#&gt; [430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n#&gt; [433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n#&gt; [436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n#&gt; [439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n#&gt; [442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n#&gt; [445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n#&gt; [448] \"limegreen\"            \"linen\"                \"magenta\"             \n#&gt; [451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n#&gt; [454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n#&gt; [457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n#&gt; [460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n#&gt; [463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n#&gt; [466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n#&gt; [469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n#&gt; [472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n#&gt; [475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n#&gt; [478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n#&gt; [481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n#&gt; [484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n#&gt; [487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n#&gt; [490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n#&gt; [493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n#&gt; [496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n#&gt; [499] \"orange1\"              \"orange2\"              \"orange3\"             \n#&gt; [502] \"orange4\"              \"orangered\"            \"orangered1\"          \n#&gt; [505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n#&gt; [508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n#&gt; [511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n#&gt; [514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n#&gt; [517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n#&gt; [520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n#&gt; [523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n#&gt; [526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n#&gt; [529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n#&gt; [532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n#&gt; [535] \"peru\"                 \"pink\"                 \"pink1\"               \n#&gt; [538] \"pink2\"                \"pink3\"                \"pink4\"               \n#&gt; [541] \"plum\"                 \"plum1\"                \"plum2\"               \n#&gt; [544] \"plum3\"                \"plum4\"                \"powderblue\"          \n#&gt; [547] \"purple\"               \"purple1\"              \"purple2\"             \n#&gt; [550] \"purple3\"              \"purple4\"              \"red\"                 \n#&gt; [553] \"red1\"                 \"red2\"                 \"red3\"                \n#&gt; [556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n#&gt; [559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n#&gt; [562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n#&gt; [565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n#&gt; [568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n#&gt; [571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n#&gt; [574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n#&gt; [577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n#&gt; [580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n#&gt; [583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n#&gt; [586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n#&gt; [589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n#&gt; [592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n#&gt; [595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n#&gt; [598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n#&gt; [601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n#&gt; [604] \"slategrey\"            \"snow\"                 \"snow1\"               \n#&gt; [607] \"snow2\"                \"snow3\"                \"snow4\"               \n#&gt; [610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n#&gt; [613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n#&gt; [616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n#&gt; [619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n#&gt; [622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n#&gt; [625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n#&gt; [628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n#&gt; [631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n#&gt; [634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n#&gt; [637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n#&gt; [640] \"violet\"               \"violetred\"            \"violetred1\"          \n#&gt; [643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n#&gt; [646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n#&gt; [649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n#&gt; [652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n#&gt; [655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"\nrgb(red = 0,green = 1,blue = 1)\n#&gt; [1] \"#00FFFF\"\nhsv()\n#&gt; [1] \"#FF0000\"\nbarplot(1:10,col=c(1:10))\n\n\n\n\n\n\nCode\n### n种连续的彩虹色  十六进制\nrainbow(10)        \n#&gt;  [1] \"#FF0000\" \"#FF9900\" \"#CCFF00\" \"#33FF00\" \"#00FF66\" \"#00FFFF\" \"#0066FF\"\n#&gt;  [8] \"#3300FF\" \"#CC00FF\" \"#FF0099\"\nbarplot(rep(1:15),col=rainbow(10))\n\n\n\n\n\n\nCode\n### n阶灰度色 十六进制\ngray(0:15/15)      \n#&gt;  [1] \"#000000\" \"#111111\" \"#222222\" \"#333333\" \"#444444\" \"#555555\" \"#666666\"\n#&gt;  [8] \"#777777\" \"#888888\" \"#999999\" \"#AAAAAA\" \"#BBBBBB\" \"#CCCCCC\" \"#DDDDDD\"\n#&gt; [15] \"#EEEEEE\" \"#FFFFFF\"\nbarplot(rep(1,15),col=gray(0:15/15))\n\n\n\n\n\n\nCode\nlibrary(RColorBrewer)\nRColorBrewer::display.brewer.all()\n\n\n\n\n\n\nCodebarplot(rep(1,7),col=brewer.pal(7,\"Set3\"))\n\n\n\n\n\n\n\n\nCodedose&lt;-c(20,30,40,45,60)\nA&lt;-c(16,20,27,40,60)\nB&lt;-c(15,18,25,31,40)\nplot(dose,A,type=\"b\",           #type=\"b\" 线连接点\n     \n     col=\"red\",lty=1,pch=18,lwd=3,cex=2,    #点和线属性\n     \n     main=\"Clinical trials for Drug A\",     #主标题\n     sub=\"this is my data\",                  #副标题\n     xlab=\"Dosage\",ylab=\"Drug Response\",    #坐标轴标签\n     xlim=c(0,60),ylim = c(0,70)           #坐标轴范围\n)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#自定义图形标题坐标轴标签",
    "href": "base_graphics.html#自定义图形标题坐标轴标签",
    "title": "\n4  base graphics\n",
    "section": "\n4.2 自定义图形标题、坐标轴标签",
    "text": "4.2 自定义图形标题、坐标轴标签\n\nCodepar(mfrow=c(1,2))  \nhist(A)\nhist(A,ann=FALSE)    #ann=FALSE 移除默认标题\ntitle(main=\"main title\", col.main=\"purple\",       #主标题\n      sub=\"subtitle\", col.sub=\"pink\",            #副标题\n      xlab=\"Dosage\",ylab=\"Drug Response\",col.lab=\"red\" ,cex.lab=0.75\n      )\n\n\n\n\n\n\nCodepar(opar)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#自定义坐标轴图例文本",
    "href": "base_graphics.html#自定义坐标轴图例文本",
    "title": "\n4  base graphics\n",
    "section": "\n4.3 自定义坐标轴、图例、文本",
    "text": "4.3 自定义坐标轴、图例、文本\n\nCodex&lt;-c(1:10)\ny&lt;-x\n\npar(mar=c(5,4,4,4))\npar(mfrow=c(1,2))\nplot(x,y)\nplot(x,y,axes=FALSE)#禁用坐标轴框架、刻度\n\n\n\n\n\n\nCodeplot(x,y,axes=FALSE,frame.plot = TRUE)#禁用刻度\n\n\n\n\n\n\n\n\nCodez&lt;-10/x\nplot(x,y,type=\"b\",pch=21,col=\"red\",bg=\"black\",\n     xaxt=\"n\",yaxt=\"n\",lty=1  #xaxt、yaxt 禁用X、Y坐标轴刻度\n     )\nlines(x,z,type=\"b\",pch=22,col=\"blue\",lty=2,bg=\"green\")  #添加新图形\n#绘制自定义坐标轴\n#axis(side,at= ,labels = ,pos = ,las=,tck=,…)\n#side  1=下，2=左，3=上，4=右 \n#at   数值向量，绘制刻度线的位置\n#labels  字符序列，刻度线的文字标签\n#las    0=垂直于坐标轴，2=平行于坐标轴   \n#tck=-0.01    刻度线的长度   1=网格线 0=禁用刻度  负值在图形外侧，正值在图形内侧\naxis(side = 1,at=x,labels = x,las=0,tck=-0.1)\naxis(side=2,at=x,labels=x,col.axis=\"red\",las=2,tck=0.1)\naxis(side=4,at=z,labels=round(z,digits=3),col.axis=\"blue\",las=2,tck=-.05)\n\n#library(Hmisc)\n#minor.tick(nx=2,ny=2,tick.ratio = .5)#添加次要刻度线\n\n## 图例  legend(location, title, legend,...)\npar(lwd=2,cex=1,font.lab=2)\nlegend(\"top\",inset=0.05,title=\"函数\",c(\"Y=X\",\"Y=10/x\"),text.col = \"green\",\n       lty=c(3,2),pch=c(21,22),col=c(\"red\",\"blue\",bg=c(\"black\",\"green\")))\n\n# 文本\n\n#mtext(\"text\",side,line=,)\nmtext(\"Y=10/X\",side=4,line=3,cex.lab=1,las=2,col=\"blue\")  #边界文本\ntitle(main=\"my graphics\",\n      sub=\"subtitle\",\n      xlab=\"X values\",\n      ylab=\"Y=X\")\nabline(h=c(1,4),lty=2,col=\"red\")  ###添加水平辅助线 \nabline(v=c(8,10),lty=4,col=\"blue\")  ###添加垂直辅助线 \n\n\n# text(x,y,\"text\",pos=)  1=下，2=左，3=上，4=右\ntext(5,5,\"文本1\",pos=4,adj=0,cex=2,col=\"green\")\n\n\n\n\n\n\nCode\n#text(locator[1],\"文本\",pos=4,adj=0,cex=2,col=\"green\")#鼠标点击确定位置",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#添加文本",
    "href": "base_graphics.html#添加文本",
    "title": "\n4  base graphics\n",
    "section": "\n4.4 添加文本",
    "text": "4.4 添加文本\n\nCode#标注点的信息\nA&lt;-c(1:5)\nB&lt;-c(15,23,26,17,21)\nplot(A,B,type=\"b\")\nABC&lt;-data.frame(A,B,row.names =c(\"afaf\",\"fa\",\"faae\",\"agg\",\"grgw\"))\nattach(ABC)\ntext(A,B,row.names(ABC),cex=0.6,pos=4,col=\"blue\")\n\n\n\n\n\n\nCodedetach(ABC)\npar(opar)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#图形组合",
    "href": "base_graphics.html#图形组合",
    "title": "\n4  base graphics\n",
    "section": "\n4.5 图形组合",
    "text": "4.5 图形组合\n\nCode#layout(matrix,widths=,heights=)\nattach(mtcars)\nmat&lt;-matrix(c(1,1,2,3),2, 2, byrow = FALSE)\nlayout(mat,widths = c(1,0.5),heights = c(0.5,1))\nhist(wt)\nhist(mpg)\nhist(disp)\n\n\n\n\n\n\nCodedetach(mtcars)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#图形的精细控制",
    "href": "base_graphics.html#图形的精细控制",
    "title": "\n4  base graphics\n",
    "section": "\n4.6 图形的精细控制",
    "text": "4.6 图形的精细控制\n\nCode#参数fig=c(x1,x2,y1,y2)\nattach(mtcars)\npar(fig=c(0,0.8,0,0.8))\nplot(wt,mpg,xlab=\"Miles per Gallon\",ylab=\"Car Weight\")\npar(fig=c(0,0.8,0.55,1),new=TRUE)\nboxplot(wt,horizontal = TRUE,axes=FALSE)\npar(fig=c(0.65,1,0,0.8),new=TRUE)\nboxplot(mpg,axes=FALSE)\nmtext(\"boxplot of wt\",side=3,outer = TRUE,line=-3)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "base_graphics.html#geometry",
    "href": "base_graphics.html#geometry",
    "title": "\n4  base graphics\n",
    "section": "\n4.7 Geometry",
    "text": "4.7 Geometry\n\nCodedata(mpg,package=\"ggplot2\") \n\n\n\n4.7.1 条形图\n\nCodebarplot(table(mpg$drv))\n\n\n\n\n\n\nCodebarplot(table(mpg$drv),horiz = TRUE)\n\n\n\n\n\n\nCode\nbarplot(table(mpg$drv,mpg$class),legend=row.names(table(mpg$drv,mpg$class)))\n\n\n\n\n\n\nCodebarplot(table(mpg$drv,mpg$class),beside = TRUE,\n        legend=row.names(table(mpg$drv,mpg$class)))\n\n\n\n\n\n\nCode\nspineplot(table(mpg$class,mpg$drv))\n\n\n\n\n\n\n\n\n4.7.2 饼图\n\nCodex&lt;-c(10,12,4,16,8)\nlabs&lt;-c(\"US\",\"UK\",\"Australia\",\"Germany\",\"France\")\n\npie(x,labels=labs,main=\"简单饼图\")\n\n\n\n\n\n\nCodepct&lt;-round(x/sum(x)*100)\nlabs2&lt;-paste(labs,\" \",pct,\"%\",sep=\"\")\npie(x,labels=labs2,col=rainbow(length(labs2)),main=\"百分比饼图\")\n\n\n\n\n\n\n\n\n4.7.3 直方图\n\nCodehist(mpg$hwy,breaks = 12,col=\"red\")\n\n\n\n\n\n\nCode\nhist(mpg$hwy,freq = FALSE,breaks = 12, col=\"lightgreen\")\nrug(mpg$hwy,col=\"brown\",lwd=2)\nlines(density(mpg$hwy),col=\"blue\",lwd=2)\n\n\n\n\n\n\nCode\nh &lt;- hist(mpg$hwy,breaks = 12,col=\"red\")\nx&lt;-seq(min(mpg$hwy),max(mpg$hwy),by=0.01)\ny&lt;-dnorm(x,mean=mean(mpg$hwy),sd=sd(mpg$hwy))   #概率密度曲线  f(X)=(fi/n)/ΔXi\ny&lt;-y*diff(h$mids[1:2])*length(mpg$hwy)  # y*组距*总样本量  正态分布\nlines(x,y,col=\"blue\",lwd=2)\n\n\n\n\n\n\nCode\nplot(x,y)\n\n\n\n\n\n\n\n\n4.7.4 密度曲线\n\nCodeplot(density(mpg$hwy))\npolygon(density(mpg$hwy),col=\"lightblue\",border = \"red\") \nrug(mpg$hwy,col=\"brown\") \n\n\n\n\n\n\n\n\n4.7.5 箱线图\n\nCodeboxplot.stats(mpg$hwy)\n#&gt; $stats\n#&gt; [1] 12 18 24 27 37\n#&gt; \n#&gt; $n\n#&gt; [1] 234\n#&gt; \n#&gt; $conf\n#&gt; [1] 23.07041 24.92959\n#&gt; \n#&gt; $out\n#&gt; [1] 44 44 41\nboxplot(mpg$hwy)\n\n\n\n\n\n\nCode\nboxplot(hwy~drv,data=mpg,\n        notch=TRUE,\n        varwidth=TRUE)\n\n\n\n\n\n\nCode\nboxplot(hwy~drv*cyl,data=mpg)\n\n\n\n\n\n\n\n\n4.7.6 克利夫兰点图\n\nCodedotchart(mtcars[order(mtcars$mpg),]$mpg,labels = row.names(mtcars),groups = mtcars$cyl)\n\n\n\n\n\n\nCode\n\n#分组、排序、着色后的点图\nx&lt;-mtcars[order(mtcars$mpg),]\nx$cyl&lt;-factor(x$cyl)\nx$color[x$cyl==4]&lt;-\"red\"\nx$color[x$cyl==6]&lt;-\"yellow\"\nx$color[x$cyl==8]&lt;-\"blue\"\ndotchart(x$mpg,\n         labels = row.names(x),cex=.7,\n         groups = x$cyl,         #分组参数 因子\n         gcolor = \"black\",\n         color = x$color\n         )\n\n\n\n\n\n\n\n\n4.7.7 散点图\n\nCodecar::scatterplot(mpg~wt|am,data=mtcars,\n            id=TRUE,\n            legend =TRUE,#图例\n            grid=TRUE,   #添加网格线\n            boxplots=\"xy\"  #添加边界箱线图\n)\n\n\n\n\n\n\n#&gt;          Fiat 128         Merc 240D     Maserati Bora Chrysler Imperial \n#&gt;                 4                 5                12                14\n\n\n4.7.8 散点图矩阵\n\nCodecar::scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars)\n\n\n\n\n\n\n\n\n4.7.9 气泡图\n\nCodesymbols(mtcars$wt,mtcars$mpg,\n        circle=sqrt(mtcars$disp/pi),\n        inches = .30, #比例\n        fg=\"white\",bg=\"lightblue\")\ntext(mtcars$wt,mtcars$mpg,row.names(mtcars),cex=.6)\n\n\n\n\n\n\n\n\n4.7.10 折线图\n\nCodehead(Orange)\n\n\n\n\nTree\nage\ncircumference\n\n\n\n1\n118\n30\n\n\n1\n484\n58\n\n\n1\n664\n87\n\n\n1\n1004\n115\n\n\n1\n1231\n120\n\n\n1\n1372\n142\n\n\n\n\n\nCodet1&lt;-subset(Orange,Tree==1)\nplot(t1$age,t1$circumference,type=\"p\")\n\n\n\n\n\n\nCodeplot(t1$age,t1$circumference,type=\"b\")\n\n\n\n\n\n\nCodeplot(t1$age,t1$circumference,type=\"c\")\n\n\n\n\n\n\n\n\n4.7.11 相关图\ncorrgram()\n\n4.7.12 马赛克图\nmosaic()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>base graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html",
    "href": "ggplot2_graphics.html",
    "title": "5  ggplot2 Graphics",
    "section": "",
    "text": "5.1 ggplot(data =  ,mapping = aes(x,y,…))",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#ggplotdata-mapping-aesxy",
    "href": "ggplot2_graphics.html#ggplotdata-mapping-aesxy",
    "title": "5  ggplot2 Graphics",
    "section": "",
    "text": "5.1.1 data\n数据应使用数据框格式，例如ggplot2包自动的数据集mpg，其中发动机排量 displ，油耗 cty，发动机驱动方式 drv，\n\nCodedata(mpg,package = \"ggplot2\")\nhead(mpg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\n\n\n\n\n\n5.1.2 aesthetics mapping\nmapping=aes(x,y,z,..,color,fill,shape,linetype,alpha,size,group,linewidth)\n\nCodempg %&gt;% \n  distinct(class)  # 7种汽车类型\n\n\n\n\nclass\n\n\n\ncompact\n\n\nmidsize\n\n\nsuv\n\n\n2seater\n\n\nminivan\n\n\npickup\n\n\nsubcompact\n\n\n\n\n\nCode\nggplot(mpg, aes(x = displ, y = hwy, color = class)) +#颜色 名义型变量\n  geom_point(shape=\".\") #像素点\n\n\n\n\n\n\nCode\nggplot(mpg, aes(x = displ, y = hwy, shape = class)) + #形状最多可以映射6个\n  geom_point()\n\n\n\n\n\n\nCodeggplot(mpg, aes(x = displ, y = hwy, size = class)) +#大小 有序型变量\n  geom_point()\n\n\n\n\n\n\nCodeggplot(mpg, aes(x = displ, y = hwy, alpha = class)) +#透明度 有序型变量\n  geom_point(color=\"red\") #更改外观\n\n\n\n\n\n\nCodeggplot(mpg, aes(x = displ, y = hwy, linetype = drv)) + #线条类型\n  geom_smooth()\n\n\n\n\n\n\nCode\nggplot(mpg, aes(x = displ, y = hwy, linewidth = drv)) + #线条粗细\n  geom_smooth()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#geometry",
    "href": "ggplot2_graphics.html#geometry",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.2 geometry",
    "text": "5.2 geometry\n\n\nGraphical primitives:\n\ngeom_blank(): display nothing. Most useful for adjusting axes limits using data.\ngeom_point(): points.\ngeom_path(): paths.\ngeom_ribbon(): ribbons, a path with vertical thickness.\ngeom_segment(): a line segment, specified by start and end position.\ngeom_rect(): rectangles.\ngeom_polygon(): filled polygons.\ngeom_text(): text.\n\n\n\n\n\nOne variable:\n\n\nDiscrete:\n\n\ngeom_bar(): display distribution of discrete variable.\n\n\n\nContinuous:\n\ngeom_histogram(): bin and count continuous variable, display with bars.\ngeom_density(): smoothed density estimate.\ngeom_dotplot(): stack individual points into a dot plot.\ngeom_freqpoly(): bin and count continuous variable, display with lines.\n\n\n\n\n\nTwo variables:\n\n\nBoth continuous:\n\ngeom_point(): scatterplot.\ngeom_quantile(): smoothed quantile regression.\ngeom_rug(): marginal rug plots.\ngeom_smooth(): smoothed line of best fit.\ngeom_text(): text labels.\n\n\n\nShow distribution:\n\ngeom_bin2d(): bin into rectangles and count.\ngeom_density2d(): smoothed 2d density estimate.\ngeom_hex(): bin into hexagons and count.\n\n\n\nAt least one discrete:\n\ngeom_count(): count number of point at distinct locations\ngeom_jitter(): randomly jitter overlapping points.\n\n\n\nOne continuous, one discrete:\n\ngeom_bar(stat = \"identity\"): a bar chart of precomputed summaries.\ngeom_boxplot(): boxplots.\ngeom_violin(): show density of values in each group.\n\n\n\nOne time, one continuous:\n\ngeom_area(): area plot.\ngeom_line(): line plot.\ngeom_step(): step plot.\n\n\n\nDisplay uncertainty:\n\ngeom_crossbar(): vertical bar with center.\ngeom_errorbar(): error bars.\ngeom_linerange(): vertical line.\ngeom_pointrange(): vertical line with center.\n\n\n\nSpatial:\n\n\ngeom_map(): fast version of for map data.geom_polygon()\n\n\n\n\n\n\nThree variables:\n\ngeom_contour(): contours.\ngeom_tile(): tile the plane with rectangles.\ngeom_raster(): fast version of for equal sized tiles.geom_tile()\n\n\n\n\nCodedf &lt;- data.frame(\n  x = c(3, 1, 5), \n  y = c(2, 4, 6), \n  label = c(\"a\",\"b\",\"c\")\n)\n\np &lt;- ggplot(df, aes(x, y, label = label)) + \n  labs(x = NULL, y = NULL) + # Hide axis label\n  theme(plot.title = element_text(size = 12)) # Shrink plot title\np + geom_point() + ggtitle(\"point\")|\np + geom_text() + ggtitle(\"text\")+\np + geom_bar(stat = \"identity\") + ggtitle(\"bar\")|\np + geom_tile() + ggtitle(\"raster\")\n\n\n\n\n\n\nCode\np + geom_line() + ggtitle(\"line\")|\np + geom_area() + ggtitle(\"area\")+\np + geom_path() + ggtitle(\"path\")|\np + geom_polygon() + ggtitle(\"polygon\")\n\n\n\n\n\n\n\n\n5.2.1 X=连续型变量\n\nCodep &lt;- ggplot(data = mpg,aes(x=displ))\np\n\n\n\n\n\n\n\n\n5.2.1.1 geom_point\n\nCodep + geom_point(mapping = aes(x=displ,y=hwy),\n               stat = \"identity\",position = \"identity\")+\n    geom_smooth(mapping = aes(x=displ,y=hwy),\n                formula = \"y~x\",\n                method = \"lm\", se =T)\n\n\n\n\n\n\n\n\nCodeggplot(mpg, aes(displ,hwy)) +\n    geom_point() |\n    \n    ggplot(mpg, aes(displ,hwy)) +\n    geom_point(aes(size = displ/10)) + \n    scale_size_area(name=\"displ/10\")\n\n\n\n\n\n\n\n\n5.2.1.2 geom_line\n\nCodeeconomics |&gt; head()\n\n\n\n\ndate\npce\npop\npsavert\nuempmed\nunemploy\n\n\n\n1967-07-01\n506.7\n198712\n12.6\n4.5\n2944\n\n\n1967-08-01\n509.8\n198911\n12.6\n4.7\n2945\n\n\n1967-09-01\n515.6\n199113\n11.9\n4.6\n2958\n\n\n1967-10-01\n512.2\n199311\n12.9\n4.9\n3143\n\n\n1967-11-01\n517.4\n199498\n12.8\n4.7\n3066\n\n\n1967-12-01\n525.1\n199657\n11.8\n4.8\n3018\n\n\n\n\n\nCode\nggplot(economics,aes(date,pop))+\n    geom_line()+\n    scale_x_date()\n\n\n\n\n\n\n\n\n5.2.1.3 geom_smooth geom_ribbon\n\nCodeq &lt;- ggplot(mpg, aes(displ, hwy)) +\n    geom_point()\n\nq+geom_smooth(method = \"loess\",span = 0.2) # loess 平滑局部回归   small n\n\n\n\n\n\n\nCode                                   #span 0非常摆动，1不那么摆动\n\nq+ geom_smooth(span = 1)  #不很摆动\n\n\n\n\n\n\nCode\nlibrary(MASS)\nq+geom_smooth(method = \"rlm\")   # robust linear model  稳健线性模型\n\n\n\n\n\n\nCode\nlibrary(mgcv)\nq+ geom_smooth(method = \"gam\", formula = y ~ s(x)) #gam 广义相加模型   n&gt;1000\n\n\n\n\n\n\n\n\n5.2.1.4 geom_histogram\n\nCodep &lt;- ggplot(data = mpg)\np + geom_histogram(aes(x=displ,y=after_stat(density)),\n                   stat = \"bin\",position = \"stack\",\n                   binwidth = 0.5\n                   ) +\n    scale_y_continuous(labels=scales::dollar) +\n    geom_density(aes(x=displ,y=after_stat(density)),\n                 color=\"red\", linewidth=1)\n\n\n\n\n\n\nCode\nggplot(mpg, aes(hwy)) + geom_histogram(binwidth = 2.5)\n\n\n\n\n\n\n\n加权\n\nCodeggplot(mpg, aes(hwy)) +\n  geom_histogram(binwidth = 1) |\n\nggplot(mpg, aes(hwy)) +\n  geom_histogram(aes(weight = displ), binwidth = 1) \n\n\n\n\n\n\n\n\n5.2.1.5 geom_freqpoly\n\nCodeggplot(mpg, aes(hwy)) + \n  geom_freqpoly(binwidth = 2.5)\n\n\n\n\n\n\n\n\n5.2.1.6 geom_density\n\nCodep + geom_density(aes(displ,fill=drv),\n                 stat = \"density\",position = \"identity\",\n                 alpha=0.3\n                 )+\n    scale_y_continuous(labels = scales::percent)+\n    labs(fill=\"图例名\")+ # 与映射aes()有关\n    theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n5.2.1.7 geom_rug\ny→sides=\"r\",\"l\"\nx→sides=\"b\",\"t\"\n\nCodep + geom_rug(aes(x=displ,y=hwy),\n           sides = \"br\",color=\"brown\")\n\n\n\n\n\n\n\n\n5.2.1.8 geom_jitter\n\nCodep + geom_jitter(mapping = aes(x=displ,y=hwy),\n               stat = \"identity\",position = \"jitter\")\n\n\n\n\n\n\n\n\n5.2.2 X=离散型变量\n\n5.2.2.1 geom_bar\n\nCodeggplot(data = mpg) + \n    geom_bar(mapping = aes(x=factor(cyl),fill=drv),\n             stat = \"count\",position = \"stack\")\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n    geom_col(mapping = aes(x=factor(cyl),y=hwy,fill=drv),\n             position = \"stack\")\n\n\n\n\n\n\n\n有序条形图\n\nCodeggplot(mpg, aes(x = fct_infreq(class))) +  #降序条形图\n  geom_bar()\n\n\n\n\n\n\n\n\n5.2.2.2 geom_errorbar errorbarh\ngeom_linerange geom_crossbar geom_pointrange\n\nCodey &lt;- c(18, 11, 16)\ndf &lt;- data.frame(x = 1:3, y = y, se = c(1.2, 0.5, 1.0))\n\nbase &lt;- ggplot(df, aes(x, y, ymin = y - se, ymax = y + se))\n(base + geom_errorbar()|\nbase + geom_linerange()|\nbase + geom_ribbon())/\n(base + geom_crossbar()|\nbase + geom_pointrange()|\nbase + geom_smooth(stat = \"identity\"))\n\n\n\n\n\n\n\n\nCoderead_csv(\"data/g.csv\") |&gt; \n    summarise(\n        mean=mean(liverweight),\n        sd=sd(liverweight),\n        .by=treatment\n  ) |&gt; \n    ggplot(aes(treatment,mean,fill=treatment))+\n    geom_bar(stat = \"identity\")+\n    geom_errorbar(aes(ymin=mean-sd,ymax=mean+sd),width=.2)\n\n\n\n\n\n\n\n\n5.2.2.3 geom_dotplot\n\nCodep + geom_dotplot(mapping = aes(x=drv,y=hwy),\n                 position = \"identity\",\n                 stackdir = \"center\",binaxis = 'y',# stacking along y axis\n                 fill=\"red\",binwidth = 0.7)\n\n\n\n\n\n\n\n\n5.2.2.4 geom_boxplot\n\nCodep + geom_boxplot(mapping = aes(x=drv,y=hwy),\n             stat = \"boxplot\",position = \"dodge\",\n             notch=TRUE, varwidth=TRUE,\n             width=0.1,fill=\"green\"\n            )+\n    geom_violin(aes(x=drv,y=hwy),alpha=0.2)\n\n\n\n\n\n\n\n\n5.2.2.5 geom_violin\n\nCodep + geom_violin(mapping = aes(x=drv,y=hwy),\n             stat = \"ydensity\",position = \"dodge\")\n\n\n\n\n\n\n\n\n5.2.2.6 geom_tile\n\nCode# 设置随机数种子以确保结果的可重复性  \nset.seed(10)  \n  \n# 生成随机数据集  \nmydata &lt;- tibble(  \n  year = 2000:2024,  \n  lung = runif(25),  \n  liver = runif(25), \n  bone = runif(25),  \n  luk = runif(25),  \n  eso = runif(25),  \n  gas = runif(25),   \n  eye = runif(25),  \n  brain = runif(25),  \n  pan = runif(25),  \n  kidney = runif(25),  \n  breast= runif(25),  \n)  |&gt; pivot_longer(cols = -1,\n                   names_to = \"cancer\",\n                   values_to = \"morbidity\")\n\nggplot(mydata, aes(year, cancer)) +  \n  geom_tile(aes(fill =morbidity)) +  \n  scale_fill_gradient(low = \"white\", high = \"red\")\n\n\n\n\n\n\n\n\n5.2.3 统计变换 statistical transformations\nstat_bin()：geom_bar()，geom_freqpoly()，geom_histogram()\nstat_bin2d()：geom_bin2d()\nstat_bindot()：geom_dotplot()\nstat_binhex()：geom_hex()\nstat_boxplot()：geom_boxplot()\nstat_contour()：geom_contour()\nstat_quantile()：geom_quantile()\nstat_smooth()：geom_smooth()\nstat_sum()：geom_count()\nstat_ecdf()：计算经验累积分布图。\nstat_function()：根据 x 值的函数计算 y 值。\nstat_summary()：将 Y 值汇总到不同的 X 值。\nstat_summary2d() ：汇总分箱值。\nstat_summary_hex()\nstat_qq()：对分位数-分位数图执行计算。\nstat_spoke()：将角度和半径转换为位置。\nstat_unique()：删除重复的行。\n\nCodeggplot(diamonds) + \n  stat_summary(\n    aes(x = cut, y = depth),\n    geom = \"errorbar\",\n    fun.min = min,\n    fun.max = max,\n    fun = mean\n  )\n\n\n\n\n\n\nCode\nggplot(mpg, aes(trans, cty)) + \n    geom_point() + \n    stat_summary(geom = \"point\", fun = \"mean\", colour = \"red\", size = 4)\n\n\n\n\n\n\n\n\n5.2.4 位置调整 position adjustments\n\n5.2.4.1 条\n\nCodeggplot(mpg, aes(x = drv, fill = class)) + \n  geom_bar(alpha = 1/5, position = \"identity\")|\n\nggplot(mpg, aes(x = drv, color = class)) + \n  geom_bar(fill = NA, position = \"identity\")\n\n\n\n\n\n\nCode\nggplot(mpg, aes(x = drv, fill = class)) + \n  geom_bar(position = \"fill\")|\n\nggplot(mpg, aes(x = drv, fill = class)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\n5.2.4.2 点\nposition_nudge()：按固定偏移量移动点。\nposition_jitter()：为每个位置添加一点随机噪音。\nposition_jitterdodge()：躲避组内的点，然后添加一点随机噪音。\n\nCodeggplot(mpg, aes(x = factor(cyl), y = hwy)) + \n  geom_point(position = \"identity\") |\nggplot(mpg, aes(x = factor(cyl), y = hwy)) + \n  geom_point(position = \"jitter\")\n\n\n\n\n\n\nCode\nggplot(mpg, aes(x = factor(cyl), y = hwy)) + \n  geom_point(position =position_nudge(x=0.1,y=0))|\nggplot(mpg, aes(x = factor(cyl), y = hwy,color=factor(cyl))) + \n  geom_point(position = position_jitterdodge())",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#坐标系-coordinate",
    "href": "ggplot2_graphics.html#坐标系-coordinate",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.3 坐标系 coordinate",
    "text": "5.3 坐标系 coordinate\n默认坐标系是笛卡尔坐标系\n\nCodebar &lt;- ggplot(data = diamonds) + \n  geom_bar(\n    mapping = aes(x = clarity, fill = clarity), \n    show.legend = FALSE,\n    width = 1\n  ) + \n  theme(aspect.ratio = 1)\nbar|\nbar + coord_flip()| #水平条形图\nbar + coord_polar()#极坐标\n\n\n\n\n\n\n\n\nCodelibrary(maps)\nworld &lt;- map_data(\"world\")\n\nggplot(world, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"black\")|\n\nggplot(world, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"white\", color = \"black\") +\n  coord_quickmap() #正确设置地理地图的纵横比",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#坐标轴-axis",
    "href": "ggplot2_graphics.html#坐标轴-axis",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.4 坐标轴 axis",
    "text": "5.4 坐标轴 axis\n\n5.4.1 变换\n\nCode\nggplot(mpg, aes(log10(cty),hwy)) +\n    geom_point()+\n    scale_x_log10()\n\n\n\n\n\n\n\n\n5.4.2 limits\n\nCodeggplot(mpg, aes(displ, hwy)) +\n    geom_point(na.rm = TRUE) | \nggplot(mpg, aes(displ, hwy)) +\n    geom_point(na.rm = TRUE) +\n    xlim(5, 6) +\n    ylim(10, 25)\n\n\n\n\n\n\nCode\nggplot(mpg, aes(drv, hwy)) +\n    geom_jitter(width = 0.25, na.rm = TRUE) +\n    xlim(\"f\", \"r\") +\n    ylim(25, NA)\n\n\n\n\n\n\n\n\nCode# filter\nmpg |&gt;\n  dplyr::filter(displ &gt;= 5 & displ &lt;= 6 & hwy &gt;= 10 & hwy &lt;= 25) |&gt;\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point(aes(color = drv)) +\n  geom_smooth(na.rm=TRUE)|\n# limits\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(aes(color = drv)) +\n  geom_smooth(na.rm=TRUE) +\n  scale_x_continuous(limits = c(5, 6)) +    #取子集\n  scale_y_continuous(limits = c(10, 25))  \n\n\n\n\n\n\n\n\n5.4.3 zooming\n调整绘制的数据,在每个刻度中设置coord_cartesian(xlim= ,ylim= )\n\nCodeggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(aes(color = drv)) +\n  geom_smooth() +\n  coord_cartesian(xlim = c(5, 6), ylim = c(10, 25))   #放大局部\n\n\n\n\n\n\n\n\n5.4.4 共享\nshared\n坐标轴相同\n\nCodex_scale &lt;- scale_x_continuous(limits = range(mpg$displ))\ny_scale &lt;- scale_y_continuous(limits = range(mpg$hwy))\ncol_scale &lt;- scale_color_discrete(limits = unique(mpg$drv))\nggplot(mpg[mpg$class==\"suv\",], aes(x = displ, y = hwy, color = drv)) +\n  geom_point() +\n  x_scale +\n  y_scale +\n  col_scale|\nggplot(mpg[mpg$class==\"compact\",], aes(x = displ, y = hwy, color = drv)) +\n  geom_point() +\n  x_scale +\n  y_scale +\n  col_scale",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#标题-labels",
    "href": "ggplot2_graphics.html#标题-labels",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.5 标题 labels",
    "text": "5.5 标题 labels\n\nCodeggplot(mpg, aes(cty, hwy)) +\n    geom_point(alpha = 1 / 3) +\n    xlab(\"city driving (mpg)\") +\n    ylab(\"highway driving (mpg)\")+\n    ggtitle(\"主标题\")\n\n\n\n\n\n\nCode\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(aes(color = class)) +\n  geom_smooth(se = FALSE) +\n  labs(\n    x = \"Engine displacement (L)\",\n    y = \"Highway fuel economy (mpg)\",\n    color = \"Car type\", # 图例 美学映射color\n    title = \"Fuel efficiency generally decreases with engine size\",\n    subtitle = \"Two seaters (sports cars) are an \n    exception because of their light weight\",\n    caption = \"Data from fueleconomy.gov\"\n  )",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#注释-annotation",
    "href": "ggplot2_graphics.html#注释-annotation",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.6 注释 annotation",
    "text": "5.6 注释 annotation\n\n5.6.1 文本 text\n\nCode# 字体\ndf &lt;- data.frame(x = 1, y = 3:1, family = c(\"sans\", \"serif\", \"mono\"))\nggplot(df, aes(x, y)) + \n  geom_text(aes(label = family, family = family))\n\n\n\n\n\n\nCode\n# 样式\ndf &lt;- data.frame(x = 1, y = 3:1, face = c(\"plain\", \"bold\", \"italic\"))\nggplot(df, aes(x, y)) + \n  geom_text(aes(label = face, fontface = face))\n\n\n\n\n\n\nCode\n# 位置\ndf &lt;- data.frame(\n  x = c(1, 1, 2, 2, 1.5),\n  y = c(1, 2, 1, 2, 1.5),\n  text = c(\n    \"bottom-left\", \"top-left\",  \n    \"bottom-right\", \"top-right\", \"center\"\n  )\n)\nggplot(df, aes(x, y)) +\n  geom_text(aes(label = text))|\nggplot(df, aes(x, y)) +\n  geom_text(aes(label = text), vjust = \"inward\", hjust = \"inward\")\n\n\n\n\n\n\nCode\n\n# 自定义\ndf &lt;- data.frame(\n  treatment = c(\"a\", \"b\", \"c\"), \n  response = c(1.2, 3.4, 2.5)\n)\nggplot(df, aes(treatment, response)) + \n  geom_point() + \n  geom_text(\n    mapping = aes(label = paste0(\"(\", response, \")\")), \n    nudge_x = -0.3,\n    nudge_y=.2\n  ) \n\n\n\n\n\n\n\n\nCodemtcars |&gt;\n    group_by(cyl,am) |&gt; \n    summarise(n=n()) |&gt; \n    mutate(pct = n / sum(n),\n         lbls = scales::percent(pct)\n         )|&gt; \n    ggplot(aes(factor(cyl),pct,fill=factor(am)))+\n    geom_bar(stat = \"identity\",position = \"fill\")+\n    geom_text(mapping = aes(label=lbls),\n              position = position_stack(vjust = 0.5),\n              size=3\n              )\n\n\n\n\n\n\n\n\nCodelabel_info &lt;- mpg |&gt;\n    group_by(drv) |&gt;\n    arrange(desc(displ)) |&gt;\n    slice_head(n = 1)|&gt;\n    mutate(\n        drive_type = case_when(       # vectorise multiple if_else () statements \n        drv == \"f\" ~ \"front-wheel drive\",\n        drv == \"r\" ~ \"rear-wheel drive\",\n        drv == \"4\" ~ \"4-wheel drive\")\n        )|&gt;\n    dplyr::select(displ, hwy, drv, drive_type)\n\np &lt;-ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n    geom_point(alpha = 0.3) +\n    geom_smooth(method=\"lm\",formula=\"y~x\",se = FALSE) +\n    theme(legend.position = \"none\")\n\np+  geom_text(#添加注释  geom_label 标签加背景框\n    data = label_info, \n    aes(x = displ, y = hwy, label = drive_type),#label映射\n    fontface = \"bold\", size = 5, nudge_y = 2\n    )\n\n\n\n\n\n\nCode\np + ggrepel::geom_label_repel(                   \n    data = label_info, \n    aes(x = displ, y = hwy, label = drive_type),\n    fontface = \"bold\", size = 5, nudge_y = 2\n  ) \n\n\n\n\n\n\nCode\n\npotential_outliers &lt;- mpg |&gt;\n  dplyr::filter(hwy &gt; 40 | (hwy &gt; 20 & displ &gt; 5))\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() +\n  ggrepel::geom_text_repel(data = potential_outliers, aes(label = model)) +\n  geom_point(data = potential_outliers, color = \"red\") +\n  geom_point(\n    data = potential_outliers,\n    color = \"red\", size = 3, shape = \"circle open\"\n  )\n\n\n\n\n\n\n\n\n5.6.2 markdown\n\nCodedf &lt;- data.frame(x = 1:3, y = 1:3)\nbase &lt;- ggplot(df, aes(x, y)) + \n  geom_point() + \n  labs(x = \"Axis title with *italics* and **boldface**\")\nbase |\nbase + theme(axis.title.x = ggtext::element_markdown())  #ggtext::element_markdown\n\n\n\n\n\n\n\n\n5.6.3 数学表达式\n\nCodetibble(\n  x = 1:10,\n  y = cumsum(x^2)) %&gt;% \n  ggplot(aes(x, y)) +\n  geom_point() +\n  labs(\n    x = quote(x[i]),\n    y = quote(sum(x[i] ^ 2, i == 1, n)) #数学方程式\n  )\n\n\n\n\n\n\nCode\nvalues &lt;- seq(from = -2, to = 2, by = .01)\ndf &lt;- data.frame(x = values, y = values ^ 3)\nggplot(df, aes(x, y)) + \n  geom_path() + \n  labs(y = quote(f(x) == x^3))         #数学表达式   ？plotmath\n\n\n\n\n\n\n\n\n5.6.4 线段 直线 箭头\ngeom_hline()\ngeom_vline()\ngeom_abline\ngeom_segment() arrow\n\nCodetrend_text &lt;- \"Larger engine sizes tend to have lower fuel economy.\" |&gt;\n  str_wrap(width = 30)\ntrend_text\n#&gt; [1] \"Larger engine sizes tend to\\nhave lower fuel economy.\"\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() +\n  annotate(\n    geom = \"label\", x = 3.5, y = 38,\n    label = trend_text,\n    hjust = \"left\", color = \"red\"\n  ) +\n  annotate(\n    geom = \"segment\",\n    x = 3, y = 35, xend = 5, yend = 25, color = \"red\",\n    arrow = arrow(type = \"closed\")\n  )\n\n\n\n\n\n\n\n\nCodep &lt;- ggplot(mpg, aes(displ, hwy)) +\n  geom_point(\n    data = dplyr::filter(mpg, manufacturer == \"subaru\"), \n    colour = \"orange\",\n    size = 3\n  ) +\n  geom_point() \np|p + \n  annotate(geom = \"point\", x = 5.5, y = 40, colour = \"orange\", size = 3) + \n  annotate(geom = \"point\", x = 5.5, y = 40) + \n  annotate(geom = \"text\", x = 5.6, y = 40, label = \"subaru\", hjust = \"left\")|\np + \n  annotate(\n    geom = \"curve\", x = 4, y = 35, xend = 2.65, yend = 27, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 4.1, y = 35, label = \"subaru\", hjust = \"left\")",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#scale",
    "href": "ggplot2_graphics.html#scale",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.7 scale",
    "text": "5.7 scale\n\n5.7.1 x/y_continuous\n\nCodeggplot(mtcars, aes(x = wt, y = mpg)) + \n  geom_point() +\n  scale_x_continuous(name = \"Weight (1000 lbs.)\",   \n                     n.breaks = 10,                 \n                     minor_breaks = NULL,           \n                     limits = c(1.5, 5.5)) +        \n  scale_y_continuous(name = \"Miles per gallon\",     \n                     breaks = seq(10, 35, 5),       \n                     minor_breaks = seq(10, 35, 1), \n                     limits = c(10, 35)) +          \n  labs(title = \"Fuel efficiency by car weight\")\n\n\n\n\n\n\n\n\nCodeggplot(diamonds, aes(x = price, y = cut)) +\n  geom_boxplot(alpha = 0.05) +\n  scale_x_continuous(labels = scales::label_dollar(scale = 1/1000, suffix = \"K\"))\n\n\n\n\n\n\nCode\nggplot(diamonds, aes(x = cut, fill = clarity)) +\n  geom_bar(position = \"fill\") +\n  scale_y_continuous(name = \"Percentage\", labels = scales::label_percent())\n\n\n\n\n\n\n\n\n5.7.2 x/y_discrete\n\nCodeggplot(mpg,aes(x=factor(drv),fill=class))+\n    geom_bar(position = \"fill\") -&gt;p\np | p + scale_x_discrete(name = \"drv\",                                  \n                   limits = c(\"f\", \"r\"),    \n                   labels = c('f'=\"drv='f'\",'r'= \"drv='r'\"),\n                   position = \"top\") \n\n\n\n\n\n\n\n\n5.7.3 color\n\nCodeRColorBrewer::display.brewer.all()\n\n\n\n\n\n\n\n\nCode\n\np &lt;- ggplot(mtcars, aes(x=wt, y=mpg, color=disp)) +\n  geom_point(shape=19, size=3) \n\np + ggtitle(\"A. Default color gradient\")|\np + scale_color_gradient(low=\"grey\", high=\"black\") +\n  ggtitle(\"B. Greyscale gradient\")|\np + scale_color_gradient(low=\"red\", high=\"blue\") +\n  ggtitle(\"C. Red-blue color gradient\")\n\n\n\n\n\n\nCode\np + scale_color_steps(low=\"red\", high=\"blue\") +\n  ggtitle(\"D. Red-blue binned color Gradient\")|\np + scale_color_steps2(low=\"red\", mid=\"white\", high=\"blue\",\n                       midpoint=median(mtcars$disp)) +\n  ggtitle(\"E. Red-white-blue binned gradient\")|\np + scale_color_viridis_c(direction = -1) +    # viridis_c,d,b\n  ggtitle(\"F. Viridis color gradient\")\n\n\n\n\n\n\n\n\nCodedf &lt;- tibble(\n  x = rnorm(10000),\n  y = rnorm(10000)\n)\n\nggplot(df, aes(x, y)) +\n  geom_hex() +\n  coord_fixed() +\n  labs(title = \"Default, continuous\", x = NULL, y = NULL)\n\n\n\n\n\n\nCode\nggplot(df, aes(x, y)) +\n  geom_hex() +\n  coord_fixed() +\n  scale_fill_viridis_c() +\n  labs(title = \"Viridis, continuous\", x = NULL, y = NULL)\n\n\n\n\n\n\nCode\nggplot(df, aes(x, y)) +\n  geom_hex() +\n  coord_fixed() +\n  scale_fill_viridis_b() +\n  labs(title = \"Viridis, binned\", x = NULL, y = NULL)\n\n\n\n\n\n\n\n\n5.7.4 fill\n\nCodep &lt;- ggplot(mpg,aes(drv,fill=class))+\n    geom_bar()\n\np + ggtitle(\"A. Default colors\")|\np + scale_fill_brewer(palette=\"Set2\") +\n  ggtitle(\"B. ColorBrewer Set2 palette\")\n\n\n\n\n\n\nCode\np + scale_fill_viridis_d() +\n  ggtitle(\"C. Viridis color scheme\")|\np + scale_fill_manual(values=c(\"gold4\", \"orange2\", \"deepskyblue3\", \"blue4\",\n                               \"brown2\", \"yellowgreen\",\"lightpink\")) +\n  ggtitle(\"D. Manual color selection\")",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#分面",
    "href": "ggplot2_graphics.html#分面",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.8 分面",
    "text": "5.8 分面\n\nCodeq &lt;- ggplot(mpg,aes(x=displ))+\n  geom_histogram(fill=\"lightblue\")\n\n# 一个分类变量\nq + facet_wrap(~drv,nrow = 3)\n\n\n\n\n\n\nCodeq + facet_wrap(~drv,ncol = 3)  #\n\n\n\n\n\n\nCode\n# 多个分类变量\nq + facet_grid(drv~class)\n\n\n\n\n\n\nCodeq + facet_grid(drv~.)\n\n\n\n\n\n\nCodeq + facet_grid(.~drv)   #\n\n\n\n\n\n\n\n\nCodeggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point() + \n  facet_grid(drv ~ cyl) |\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point() + \n  facet_grid(drv ~ cyl, scales = \"free_y\")",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#主题",
    "href": "ggplot2_graphics.html#主题",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.9 主题",
    "text": "5.9 主题\n\n5.9.1 内置主题\n\nCodep + theme_grey() + labs(title = \"theme_grey\")  |\np + theme_bw() + labs(title = \"theme_bw\")  \n\n\n\n\n\n\nCodep + theme_minimal() + labs(title = \"theme_minimal\")|  \np + theme_classic() + labs(title = \"theme_classic\")\n\n\n\n\n\n\n\n\n5.9.2 字体\n\nCodefindfont &lt;- function(x){\n  suppressMessages(require(showtext))\n  suppressMessages(require(dplyr))\n  dplyr::filter(font_files(), grepl(x, family, ignore.case=TRUE)) |&gt; \n    dplyr::select(path, file, family, face)\n}\n\nfindfont(\"comic\")\n\n\n\n\npath\nfile\nfamily\nface\n\n\n\nC:/Windows/Fonts\ncomic.ttf\nComic Sans MS\nRegular\n\n\nC:/Windows/Fonts\ncomicbd.ttf\nComic Sans MS\nBold\n\n\nC:/Windows/Fonts\ncomici.ttf\nComic Sans MS\nItalic\n\n\nC:/Windows/Fonts\ncomicz.ttf\nComic Sans MS\nBold Italic\n\n\n\n\n\nCodefont_add(family = \"Times New Roman\", regular = \"C:\\\\Windows\\\\Fonts\\\\Times New Roman\\\\times.ttf\",\n         bold = \"C:\\\\Windows\\\\Fonts\\\\Times New Roman\\\\timesbd.ttf\",\n         italic = \"C:\\\\Windows\\\\Fonts\\\\Times New Roman\\\\timesi.ttf\",\n         bolditalic = \"C:\\\\Windows\\\\Fonts\\\\Times New Roman\\\\timesbi.ttf\")\nfindfont(\"Times New Roman\")\n\n\n\n\npath\nfile\nfamily\nface\n\n\n\nC:/Windows/Fonts\ntimes.ttf\nTimes New Roman\nRegular\n\n\nC:/Windows/Fonts\ntimesbd.ttf\nTimes New Roman\nBold\n\n\nC:/Windows/Fonts\ntimesbi.ttf\nTimes New Roman\nBold Italic\n\n\nC:/Windows/Fonts\ntimesi.ttf\nTimes New Roman\nItalic\n\n\n\n\n\nCodefont.families()\n#&gt; [1] \"sans\"            \"serif\"           \"mono\"            \"wqy-microhei\"   \n#&gt; [5] \"Times New Roman\"\n\n\n\n5.9.3 自定义主题\n\nCodemytheme &lt;- theme(plot.title=element_text(face=\"bold.italic\",  size=\"14\", color=\"brown\"),\n                 axis.title=element_text(face=\"bold.italic\",  size=10, color=\"brown\"),\n                 axis.text=element_text(face=\"bold\", size=9,  color=\"darkblue\"), \n                 panel.background=element_rect(fill=\"white\",  color=\"darkblue\"),  \n                 panel.grid.major.y=element_line(color=\"grey\",  linetype=1),  \n                 panel.grid.minor.y=element_line(color=\"grey\",  linetype=2),  \n                 panel.grid.minor.x=element_blank(),  legend.position=\"top\") \nggplot(mpg, aes(x=drv, y=hwy, fill=drv)) +  \n  geom_boxplot() +  \n  mytheme \n\n\n\n\n\n\n\n\n5.9.4 图例\n\nCode# 位置和布局\nbase &lt;- ggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(aes(color = class))\n\nbase + theme(legend.position = \"right\") # the default\n\n\n\n\n\n\nCodebase + theme(legend.position = \"left\")\n\n\n\n\n\n\nCodebase + \n  theme(legend.position = \"top\") +\n  guides(color = guide_legend(nrow = 3))\n\n\n\n\n\n\nCodebase + \n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(nrow = 2, override.aes = list(size = 4)))\n\n\n\n\n\n\nCode\n# 文本\n\nggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +\n  geom_point(size=3) +\n  scale_color_discrete(name=\"Cylinders\") +\n  labs(title = \"Fuel Efficiency for 32 Automobiles\",\n       x = \"Weight (1000 lbs)\",\n       y = \"Miles per gallon\") +\n  theme(legend.position = c(.95, .95),\n        legend.justification = c(1, 1),\n        legend.background = element_rect(fill = \"lightgrey\",\n                                         color = \"white\",\n                                         linewidth = 1),\n        legend.key = element_blank(),\n        legend.direction = \"horizontal\")\n\n\n\n\n\n\n\n\nCodeggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_point() +\n  labs(\n    title = \"Larger engine sizes tend to have lower fuel economy\",\n    caption = \"Source: https://fueleconomy.gov.\"\n  ) +\n  theme(\n    legend.position = c(0.8, 0.9),\n    legend.direction = \"horizontal\",\n    legend.box.background = element_rect(color = \"blue\"),\n    plot.title = element_text(face = \"bold\",hjust = 0.5),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = 1)\n  )\n\n\n\n\n\n\n\n\n5.9.5 绘图区\n\nCodemtcars$am &lt;- factor(mtcars$am, labels = c(\"Automatic\", \"Manual\")) \nggplot(data=mtcars, aes(x = disp, y = mpg)) +                     \n  geom_point(aes(color=factor(cyl)), size=2) +                   \n  geom_smooth(method=\"lm\", formula = y ~ x + I(x^2),                             \n              linetype=\"dotted\", se=FALSE) +\n  scale_color_discrete(\"Number of cylinders\") +\n  facet_wrap(~am, ncol=2) +                                      \n  labs(title = \"Mileage, transmission type, and number of cylinders\",\n       x = \"Engine displacement (cu. in.)\",\n       y = \"Miles per gallon\") +\n  theme_bw() +                                                  \n  theme(strip.background = element_rect(fill = \"white\"),\n        panel.grid.major = element_line(color=\"lightgrey\"),\n        panel.grid.minor = element_line(color=\"lightgrey\",\n                                        linetype=\"dashed\"),\n        axis.ticks = element_blank(),\n        legend.position = \"bottom\",\n        legend.key = element_blank())",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#图形布局patchwork",
    "href": "ggplot2_graphics.html#图形布局patchwork",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.10 图形布局patchwork",
    "text": "5.10 图形布局patchwork\n\n5.10.1 布局方式\n\nCodep1 &lt;- ggplot(mpg, aes(x = drv, y = cty, color = drv)) + \n  geom_boxplot(show.legend = FALSE) + \n  labs(title = \"Plot 1\")\n\np2 &lt;- ggplot(mpg, aes(x = drv, y = hwy, color = drv)) + \n  geom_boxplot(show.legend = FALSE) + \n  labs(title = \"Plot 2\")\n\np3 &lt;- ggplot(mpg, aes(x = cty, color = drv, fill = drv)) + \n  geom_density(alpha = 0.5) + \n  labs(title = \"Plot 3\")\n\np4 &lt;- ggplot(mpg, aes(x = hwy, color = drv, fill = drv)) + \n  geom_density(alpha = 0.5) + \n  labs(title = \"Plot 4\")\n\np5 &lt;- ggplot(mpg, aes(x = cty, y = hwy, color = drv)) + \n  geom_point(show.legend = FALSE) + \n  facet_wrap(~drv) +\n  labs(title = \"Plot 5\")\n\n\n\nCodep1 + p2\n\n\n\n\n\n\n\n\nCodep1 + p2 + p3 + p4\n\n\n\n\n\n\n\n\nCodep1 + p2 + p3 + plot_layout(ncol = 2)\n\n\n\n\n\n\n\n\nCodep1 / p2\n\n\n\n\n\n\nCodep3 | p4\n\n\n\n\n\n\n\n\nCodep3 | (p2 / (p1 | p4))\n\n\n\n\n\n\n\n\nCode layout &lt;- \"\nAAB\nC#B\nCDD\n\"\n  p1 + p2 + p3 + p4 + plot_layout(design = layout)\n\n\n\n\n\n\n\n\nCodep1 + p2 + p3 + plot_layout(ncol = 2, guides = \"collect\")\n\n\n\n\n\n\n\n\n5.10.2 修改子图\n\nCode  p12 &lt;- p1 + p2\n  p12[[2]] &lt;- p12[[2]] + theme_light()\n  p12\n\n\n\n\n\n\nCode  p1 + p4 & theme_minimal()\n\n\n\n\n\n\nCode  p1 + p4 & scale_y_continuous(limits = c(10, 45))\n\n\n\n\n\n\n\n\n5.10.3 添加注释\n\nCode(p1 | p2) / p3 +                                      \n  plot_annotation(title = '主标题',caption = \"脚注\",\n                  theme = theme_gray(base_family = \"mono\")) &theme_minimal()+\n   theme(axis.title = element_text(size=8),\n        axis.text = element_text(size=8)\n        )\n\n\n\n\n\n\nCode\n(guide_area() / (p1 + p2) / (p3 + p4) / p5) +\n  plot_annotation(\n    title = \"City and highway mileage for cars with different drive trains\",\n    caption = \"Source: https://fueleconomy.gov.\"\n  ) +\n  plot_layout(\n    guides = \"collect\",\n    heights = c(1, 3, 2, 4)\n  ) &\n  theme(legend.position = \"top\",\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n5.10.4 图形编号\n\nCodep123 &lt;- p1 | (p2 / p3)\np123 + plot_annotation(tag_levels = \"I\") # Uppercase roman numerics i\n\n\n\n\n\n\nCode\n\np123 + plot_annotation(tag_levels = \"a\") # lowercase letters A\n\n\n\n\n\n\nCodep123 + plot_annotation(tag_levels = \"1\") #  numbers\n\n\n\n\n\n\nCode  \np123[[2]] \n\n\n\n\n\n\nCodep123[[2]] &lt;- p123[[2]] + plot_layout(tag_level = \"new\")\np123 + plot_annotation(tag_levels = c(\"I\",\"a\"))\n\n\n\n\n\n\n\n\n5.10.5 图形插入\n\nCode  p1 + inset_element(p2, left = 0.5, bottom = 0.4, right = 0.9, top = 0.95)\n\n\n\n\n\n\nCode  p24 &lt;- p2 / p4 + plot_layout(guides = \"collect\")\n  p1 + inset_element(p24, left = 0.5, bottom = 0.05, right = 0.95, top = 0.9)\n\n\n\n\n\n\nCode  p12 &lt;- p1 + inset_element(p2, left = 0.5, bottom = 0.5, right = 0.9, top = 0.95)\n  p12 & theme_bw()\n\n\n\n\n\n\nCode  p12 + plot_annotation(tag_levels = \"A\")",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#ggplot2-的内部结构",
    "href": "ggplot2_graphics.html#ggplot2-的内部结构",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.11 ggplot2 的内部结构",
    "text": "5.11 ggplot2 的内部结构\n\nCodep &lt;- ggplot(mpg, aes(displ, hwy, color = drv)) + \n  geom_point(position = \"jitter\") +\n  geom_smooth(method = \"lm\", formula = y ~ x) + \n  facet_wrap(vars(year)) + \n  ggtitle(\"A plot for expository purposes\")\np\n\n\n\n\n\n\n\n\nCodeggprint &lt;- function(x) {\n  data &lt;- ggplot_build(x)\n  gtable &lt;- ggplot_gtable(data)\n  grid::grid.newpage()\n  grid::grid.draw(gtable)\n  return(invisible(x))\n}\nggprint(p)\n\n\n\n\n\n\n\n\nCodep_built &lt;- ggplot_build(p)\n\np_built $data\n#&gt; [[1]]\n#&gt;      colour        x        y PANEL group shape size fill alpha stroke\n#&gt; 1   #00BA38 1.767385 29.04692     1     2    19  1.5   NA    NA    0.5\n#&gt; 2   #00BA38 1.779773 29.15194     1     2    19  1.5   NA    NA    0.5\n#&gt; 3   #00BA38 1.976448 30.77814     2     2    19  1.5   NA    NA    0.5\n#&gt; 4   #00BA38 1.970823 30.37771     2     2    19  1.5   NA    NA    0.5\n#&gt; 5   #00BA38 2.786053 25.70846     1     2    19  1.5   NA    NA    0.5\n#&gt; 6   #00BA38 2.831331 25.73572     1     2    19  1.5   NA    NA    0.5\n#&gt; 7   #00BA38 3.084410 27.01035     2     2    19  1.5   NA    NA    0.5\n#&gt; 8   #F8766D 1.806981 25.99238     1     1    19  1.5   NA    NA    0.5\n#&gt; 9   #F8766D 1.787019 24.96076     1     1    19  1.5   NA    NA    0.5\n#&gt; 10  #F8766D 2.037209 28.32164     2     1    19  1.5   NA    NA    0.5\n#&gt; 11  #F8766D 2.031835 26.73734     2     1    19  1.5   NA    NA    0.5\n#&gt; 12  #F8766D 2.803323 24.61591     1     1    19  1.5   NA    NA    0.5\n#&gt; 13  #F8766D 2.821173 24.93911     1     1    19  1.5   NA    NA    0.5\n#&gt; 14  #F8766D 3.093628 24.64943     2     1    19  1.5   NA    NA    0.5\n#&gt; 15  #F8766D 3.082713 25.13807     2     1    19  1.5   NA    NA    0.5\n#&gt; 16  #F8766D 2.769765 23.99082     1     1    19  1.5   NA    NA    0.5\n#&gt; 17  #F8766D 3.114283 25.25673     2     1    19  1.5   NA    NA    0.5\n#&gt; 18  #F8766D 4.236953 23.33551     2     1    19  1.5   NA    NA    0.5\n#&gt; 19  #619CFF 5.335211 20.37053     2     3    19  1.5   NA    NA    0.5\n#&gt; 20  #619CFF 5.321781 14.81809     2     3    19  1.5   NA    NA    0.5\n#&gt; 21  #619CFF 5.283038 19.71366     2     3    19  1.5   NA    NA    0.5\n#&gt; 22  #619CFF 5.671630 17.36100     1     3    19  1.5   NA    NA    0.5\n#&gt; 23  #619CFF 6.038297 17.10525     2     3    19  1.5   NA    NA    0.5\n#&gt; 24  #619CFF 5.732564 25.74664     1     3    19  1.5   NA    NA    0.5\n#&gt; 25  #619CFF 5.676562 22.60204     1     3    19  1.5   NA    NA    0.5\n#&gt; 26  #619CFF 6.187115 25.98762     2     3    19  1.5   NA    NA    0.5\n#&gt; 27  #619CFF 6.175819 24.87986     2     3    19  1.5   NA    NA    0.5\n#&gt; 28  #619CFF 7.028669 24.12225     2     3    19  1.5   NA    NA    0.5\n#&gt; 29  #F8766D 5.321105 19.05622     2     1    19  1.5   NA    NA    0.5\n#&gt; 30  #F8766D 5.278746 14.34140     2     1    19  1.5   NA    NA    0.5\n#&gt; 31  #F8766D 5.704519 15.13107     1     1    19  1.5   NA    NA    0.5\n#&gt; 32  #F8766D 6.500463 16.60401     1     1    19  1.5   NA    NA    0.5\n#&gt; 33  #00BA38 2.396365 27.33542     1     2    19  1.5   NA    NA    0.5\n#&gt; 34  #00BA38 2.390231 29.83168     2     2    19  1.5   NA    NA    0.5\n#&gt; 35  #00BA38 3.112008 25.74484     1     2    19  1.5   NA    NA    0.5\n#&gt; 36  #00BA38 3.534620 29.03418     2     2    19  1.5   NA    NA    0.5\n#&gt; 37  #00BA38 3.622772 25.74189     2     2    19  1.5   NA    NA    0.5\n#&gt; 38  #00BA38 2.380276 23.90531     1     2    19  1.5   NA    NA    0.5\n#&gt; 39  #00BA38 3.023258 23.82610     1     2    19  1.5   NA    NA    0.5\n#&gt; 40  #00BA38 3.336608 21.79428     1     2    19  1.5   NA    NA    0.5\n#&gt; 41  #00BA38 3.276630 22.24435     1     2    19  1.5   NA    NA    0.5\n#&gt; 42  #00BA38 3.325406 24.29460     2     2    19  1.5   NA    NA    0.5\n#&gt; 43  #00BA38 3.271618 23.67997     2     2    19  1.5   NA    NA    0.5\n#&gt; 44  #00BA38 3.283089 17.33850     2     2    19  1.5   NA    NA    0.5\n#&gt; 45  #00BA38 3.816214 22.30670     1     2    19  1.5   NA    NA    0.5\n#&gt; 46  #00BA38 3.803259 21.25791     1     2    19  1.5   NA    NA    0.5\n#&gt; 47  #00BA38 3.839192 23.21158     2     2    19  1.5   NA    NA    0.5\n#&gt; 48  #00BA38 4.024944 23.08708     2     2    19  1.5   NA    NA    0.5\n#&gt; 49  #F8766D 3.722582 18.72062     2     1    19  1.5   NA    NA    0.5\n#&gt; 50  #F8766D 3.723848 18.02785     2     1    19  1.5   NA    NA    0.5\n#&gt; 51  #F8766D 3.862451 17.34612     1     1    19  1.5   NA    NA    0.5\n#&gt; 52  #F8766D 3.924025 16.73514     1     1    19  1.5   NA    NA    0.5\n#&gt; 53  #F8766D 4.720194 19.34077     2     1    19  1.5   NA    NA    0.5\n#&gt; 54  #F8766D 4.715034 19.29608     2     1    19  1.5   NA    NA    0.5\n#&gt; 55  #F8766D 4.708938 11.87173     2     1    19  1.5   NA    NA    0.5\n#&gt; 56  #F8766D 5.208688 17.17428     1     1    19  1.5   NA    NA    0.5\n#&gt; 57  #F8766D 5.202502 15.21981     1     1    19  1.5   NA    NA    0.5\n#&gt; 58  #F8766D 3.872759 17.19270     1     1    19  1.5   NA    NA    0.5\n#&gt; 59  #F8766D 4.738936 17.27737     2     1    19  1.5   NA    NA    0.5\n#&gt; 60  #F8766D 4.697238 12.03239     2     1    19  1.5   NA    NA    0.5\n#&gt; 61  #F8766D 4.733710 16.78488     2     1    19  1.5   NA    NA    0.5\n#&gt; 62  #F8766D 5.230557 16.30768     1     1    19  1.5   NA    NA    0.5\n#&gt; 63  #F8766D 5.691053 18.16418     2     1    19  1.5   NA    NA    0.5\n#&gt; 64  #F8766D 5.919106 14.66299     1     1    19  1.5   NA    NA    0.5\n#&gt; 65  #F8766D 4.739009 16.04133     2     1    19  1.5   NA    NA    0.5\n#&gt; 66  #F8766D 4.700964 11.71892     2     1    19  1.5   NA    NA    0.5\n#&gt; 67  #F8766D 4.722044 16.72389     2     1    19  1.5   NA    NA    0.5\n#&gt; 68  #F8766D 4.726070 17.28553     2     1    19  1.5   NA    NA    0.5\n#&gt; 69  #F8766D 4.734337 16.11048     2     1    19  1.5   NA    NA    0.5\n#&gt; 70  #F8766D 4.730609 11.76769     2     1    19  1.5   NA    NA    0.5\n#&gt; 71  #F8766D 5.178997 14.78657     1     1    19  1.5   NA    NA    0.5\n#&gt; 72  #F8766D 5.201561 15.75372     1     1    19  1.5   NA    NA    0.5\n#&gt; 73  #F8766D 5.724607 16.76480     2     1    19  1.5   NA    NA    0.5\n#&gt; 74  #F8766D 5.868224 15.36175     1     1    19  1.5   NA    NA    0.5\n#&gt; 75  #619CFF 4.566835 17.09052     1     3    19  1.5   NA    NA    0.5\n#&gt; 76  #619CFF 5.409523 17.03880     1     3    19  1.5   NA    NA    0.5\n#&gt; 77  #619CFF 5.438758 17.63823     2     3    19  1.5   NA    NA    0.5\n#&gt; 78  #F8766D 3.961246 17.14821     1     1    19  1.5   NA    NA    0.5\n#&gt; 79  #F8766D 3.964623 19.37334     1     1    19  1.5   NA    NA    0.5\n#&gt; 80  #F8766D 4.029912 17.25249     1     1    19  1.5   NA    NA    0.5\n#&gt; 81  #F8766D 4.030852 19.39677     2     1    19  1.5   NA    NA    0.5\n#&gt; 82  #F8766D 4.573844 18.60666     2     1    19  1.5   NA    NA    0.5\n#&gt; 83  #F8766D 4.996931 16.88502     1     1    19  1.5   NA    NA    0.5\n#&gt; 84  #F8766D 4.227030 16.61598     1     1    19  1.5   NA    NA    0.5\n#&gt; 85  #F8766D 4.200593 16.74958     1     1    19  1.5   NA    NA    0.5\n#&gt; 86  #F8766D 4.587502 15.67467     1     1    19  1.5   NA    NA    0.5\n#&gt; 87  #F8766D 4.577617 16.39744     1     1    19  1.5   NA    NA    0.5\n#&gt; 88  #F8766D 4.639492 16.89370     2     1    19  1.5   NA    NA    0.5\n#&gt; 89  #F8766D 5.413256 15.38495     1     1    19  1.5   NA    NA    0.5\n#&gt; 90  #F8766D 5.395187 17.18730     2     1    19  1.5   NA    NA    0.5\n#&gt; 91  #619CFF 3.824527 25.63775     1     3    19  1.5   NA    NA    0.5\n#&gt; 92  #619CFF 3.802077 25.02959     1     3    19  1.5   NA    NA    0.5\n#&gt; 93  #619CFF 4.025991 25.89732     2     3    19  1.5   NA    NA    0.5\n#&gt; 94  #619CFF 3.973712 24.27180     2     3    19  1.5   NA    NA    0.5\n#&gt; 95  #619CFF 4.593057 20.65600     1     3    19  1.5   NA    NA    0.5\n#&gt; 96  #619CFF 4.571709 22.23025     1     3    19  1.5   NA    NA    0.5\n#&gt; 97  #619CFF 4.606725 22.67764     2     3    19  1.5   NA    NA    0.5\n#&gt; 98  #619CFF 4.612550 21.96620     2     3    19  1.5   NA    NA    0.5\n#&gt; 99  #619CFF 5.433011 20.14043     2     3    19  1.5   NA    NA    0.5\n#&gt; 100 #00BA38 1.608225 32.82401     1     2    19  1.5   NA    NA    0.5\n#&gt; 101 #00BA38 1.560008 31.69745     1     2    19  1.5   NA    NA    0.5\n#&gt; 102 #00BA38 1.579337 31.61259     1     2    19  1.5   NA    NA    0.5\n#&gt; 103 #00BA38 1.600461 29.22821     1     2    19  1.5   NA    NA    0.5\n#&gt; 104 #00BA38 1.638751 31.69464     1     2    19  1.5   NA    NA    0.5\n#&gt; 105 #00BA38 1.777011 33.97055     2     2    19  1.5   NA    NA    0.5\n#&gt; 106 #00BA38 1.796975 35.80591     2     2    19  1.5   NA    NA    0.5\n#&gt; 107 #00BA38 1.835005 35.69425     2     2    19  1.5   NA    NA    0.5\n#&gt; 108 #00BA38 1.984558 28.70598     2     2    19  1.5   NA    NA    0.5\n#&gt; 109 #00BA38 2.363958 26.19613     1     2    19  1.5   NA    NA    0.5\n#&gt; 110 #00BA38 2.368529 26.63068     1     2    19  1.5   NA    NA    0.5\n#&gt; 111 #00BA38 2.405860 30.02787     2     2    19  1.5   NA    NA    0.5\n#&gt; 112 #00BA38 2.381869 30.73507     2     2    19  1.5   NA    NA    0.5\n#&gt; 113 #00BA38 2.481247 26.33764     1     2    19  1.5   NA    NA    0.5\n#&gt; 114 #00BA38 2.461744 25.90365     1     2    19  1.5   NA    NA    0.5\n#&gt; 115 #00BA38 3.312542 28.12287     2     2    19  1.5   NA    NA    0.5\n#&gt; 116 #00BA38 1.960408 25.85143     1     2    19  1.5   NA    NA    0.5\n#&gt; 117 #00BA38 2.011533 29.33392     1     2    19  1.5   NA    NA    0.5\n#&gt; 118 #00BA38 2.004485 28.39719     2     2    19  1.5   NA    NA    0.5\n#&gt; 119 #00BA38 2.038957 27.37574     2     2    19  1.5   NA    NA    0.5\n#&gt; 120 #00BA38 2.720188 24.06923     2     2    19  1.5   NA    NA    0.5\n#&gt; 121 #00BA38 2.681605 24.16771     2     2    19  1.5   NA    NA    0.5\n#&gt; 122 #00BA38 2.664355 23.76682     2     2    19  1.5   NA    NA    0.5\n#&gt; 123 #F8766D 2.984553 22.37968     2     1    19  1.5   NA    NA    0.5\n#&gt; 124 #F8766D 3.683057 18.72318     2     1    19  1.5   NA    NA    0.5\n#&gt; 125 #F8766D 3.974925 19.93581     1     1    19  1.5   NA    NA    0.5\n#&gt; 126 #F8766D 4.697462 16.69238     1     1    19  1.5   NA    NA    0.5\n#&gt; 127 #F8766D 4.688008 11.64583     2     1    19  1.5   NA    NA    0.5\n#&gt; 128 #F8766D 4.661013 19.11923     2     1    19  1.5   NA    NA    0.5\n#&gt; 129 #F8766D 5.709572 18.26909     2     1    19  1.5   NA    NA    0.5\n#&gt; 130 #F8766D 6.112262 14.17454     2     1    19  1.5   NA    NA    0.5\n#&gt; 131 #F8766D 4.035512 14.87325     1     1    19  1.5   NA    NA    0.5\n#&gt; 132 #F8766D 4.213724 18.08884     2     1    19  1.5   NA    NA    0.5\n#&gt; 133 #F8766D 4.373704 18.37230     2     1    19  1.5   NA    NA    0.5\n#&gt; 134 #F8766D 4.562636 14.79030     1     1    19  1.5   NA    NA    0.5\n#&gt; 135 #619CFF 5.425738 16.76789     1     3    19  1.5   NA    NA    0.5\n#&gt; 136 #619CFF 5.397741 16.21305     1     3    19  1.5   NA    NA    0.5\n#&gt; 137 #619CFF 5.397364 18.32279     2     3    19  1.5   NA    NA    0.5\n#&gt; 138 #F8766D 4.003754 17.32114     1     1    19  1.5   NA    NA    0.5\n#&gt; 139 #F8766D 4.006280 19.18473     2     1    19  1.5   NA    NA    0.5\n#&gt; 140 #F8766D 4.600332 18.70711     2     1    19  1.5   NA    NA    0.5\n#&gt; 141 #F8766D 5.004909 17.18179     1     1    19  1.5   NA    NA    0.5\n#&gt; 142 #00BA38 2.380109 28.68962     1     2    19  1.5   NA    NA    0.5\n#&gt; 143 #00BA38 2.361079 26.92399     1     2    19  1.5   NA    NA    0.5\n#&gt; 144 #00BA38 2.464177 30.72788     2     2    19  1.5   NA    NA    0.5\n#&gt; 145 #00BA38 2.467865 32.20935     2     2    19  1.5   NA    NA    0.5\n#&gt; 146 #00BA38 3.520032 27.31879     2     2    19  1.5   NA    NA    0.5\n#&gt; 147 #00BA38 3.506839 25.94509     2     2    19  1.5   NA    NA    0.5\n#&gt; 148 #00BA38 2.961881 26.17307     1     2    19  1.5   NA    NA    0.5\n#&gt; 149 #00BA38 2.970279 25.26556     1     2    19  1.5   NA    NA    0.5\n#&gt; 150 #00BA38 3.515182 24.66823     2     2    19  1.5   NA    NA    0.5\n#&gt; 151 #F8766D 3.294832 17.37844     1     1    19  1.5   NA    NA    0.5\n#&gt; 152 #F8766D 3.287630 16.66878     1     1    19  1.5   NA    NA    0.5\n#&gt; 153 #F8766D 4.025586 19.93104     2     1    19  1.5   NA    NA    0.5\n#&gt; 154 #F8766D 5.575201 18.34750     2     1    19  1.5   NA    NA    0.5\n#&gt; 155 #00BA38 3.100411 26.30478     1     2    19  1.5   NA    NA    0.5\n#&gt; 156 #00BA38 3.809106 25.87914     1     2    19  1.5   NA    NA    0.5\n#&gt; 157 #00BA38 3.836894 27.32127     1     2    19  1.5   NA    NA    0.5\n#&gt; 158 #00BA38 3.816914 27.63282     2     2    19  1.5   NA    NA    0.5\n#&gt; 159 #00BA38 5.281958 25.36105     2     2    19  1.5   NA    NA    0.5\n#&gt; 160 #F8766D 2.479656 25.14643     1     1    19  1.5   NA    NA    0.5\n#&gt; 161 #F8766D 2.517608 23.73414     1     1    19  1.5   NA    NA    0.5\n#&gt; 162 #F8766D 2.476203 27.08829     2     1    19  1.5   NA    NA    0.5\n#&gt; 163 #F8766D 2.488423 25.03779     2     1    19  1.5   NA    NA    0.5\n#&gt; 164 #F8766D 2.467977 25.95023     2     1    19  1.5   NA    NA    0.5\n#&gt; 165 #F8766D 2.484887 23.34113     2     1    19  1.5   NA    NA    0.5\n#&gt; 166 #F8766D 2.194877 25.95766     1     1    19  1.5   NA    NA    0.5\n#&gt; 167 #F8766D 2.195964 26.04226     1     1    19  1.5   NA    NA    0.5\n#&gt; 168 #F8766D 2.494856 25.76958     1     1    19  1.5   NA    NA    0.5\n#&gt; 169 #F8766D 2.460401 26.28052     1     1    19  1.5   NA    NA    0.5\n#&gt; 170 #F8766D 2.534661 24.94254     2     1    19  1.5   NA    NA    0.5\n#&gt; 171 #F8766D 2.518775 27.38090     2     1    19  1.5   NA    NA    0.5\n#&gt; 172 #F8766D 2.460154 25.20343     2     1    19  1.5   NA    NA    0.5\n#&gt; 173 #F8766D 2.499887 27.14608     2     1    19  1.5   NA    NA    0.5\n#&gt; 174 #F8766D 2.678748 19.81460     1     1    19  1.5   NA    NA    0.5\n#&gt; 175 #F8766D 2.729221 20.12069     1     1    19  1.5   NA    NA    0.5\n#&gt; 176 #F8766D 3.410290 18.82957     1     1    19  1.5   NA    NA    0.5\n#&gt; 177 #F8766D 3.424672 16.83292     1     1    19  1.5   NA    NA    0.5\n#&gt; 178 #F8766D 3.990400 20.28926     2     1    19  1.5   NA    NA    0.5\n#&gt; 179 #F8766D 4.678479 16.93172     2     1    19  1.5   NA    NA    0.5\n#&gt; 180 #00BA38 2.213521 28.62611     1     2    19  1.5   NA    NA    0.5\n#&gt; 181 #00BA38 2.169546 27.34342     1     2    19  1.5   NA    NA    0.5\n#&gt; 182 #00BA38 2.407445 30.91564     2     2    19  1.5   NA    NA    0.5\n#&gt; 183 #00BA38 2.428250 31.24281     2     2    19  1.5   NA    NA    0.5\n#&gt; 184 #00BA38 2.991238 25.63111     1     2    19  1.5   NA    NA    0.5\n#&gt; 185 #00BA38 3.005920 26.18163     1     2    19  1.5   NA    NA    0.5\n#&gt; 186 #00BA38 3.509076 28.03780     2     2    19  1.5   NA    NA    0.5\n#&gt; 187 #00BA38 2.191874 26.98147     1     2    19  1.5   NA    NA    0.5\n#&gt; 188 #00BA38 2.233795 28.72760     1     2    19  1.5   NA    NA    0.5\n#&gt; 189 #00BA38 2.415032 31.16068     2     2    19  1.5   NA    NA    0.5\n#&gt; 190 #00BA38 2.423621 31.10122     2     2    19  1.5   NA    NA    0.5\n#&gt; 191 #00BA38 2.998445 26.01762     1     2    19  1.5   NA    NA    0.5\n#&gt; 192 #00BA38 3.036241 25.67349     1     2    19  1.5   NA    NA    0.5\n#&gt; 193 #00BA38 3.294233 27.34421     2     2    19  1.5   NA    NA    0.5\n#&gt; 194 #00BA38 1.819298 30.22380     1     2    19  1.5   NA    NA    0.5\n#&gt; 195 #00BA38 1.775591 32.85051     1     2    19  1.5   NA    NA    0.5\n#&gt; 196 #00BA38 1.768322 34.92110     1     2    19  1.5   NA    NA    0.5\n#&gt; 197 #00BA38 1.771558 37.32308     2     2    19  1.5   NA    NA    0.5\n#&gt; 198 #00BA38 1.831336 35.31736     2     2    19  1.5   NA    NA    0.5\n#&gt; 199 #F8766D 4.711513 15.18389     1     1    19  1.5   NA    NA    0.5\n#&gt; 200 #F8766D 5.735524 17.81366     2     1    19  1.5   NA    NA    0.5\n#&gt; 201 #F8766D 2.687634 19.90851     1     1    19  1.5   NA    NA    0.5\n#&gt; 202 #F8766D 2.722330 19.82888     1     1    19  1.5   NA    NA    0.5\n#&gt; 203 #F8766D 2.705133 21.76738     2     1    19  1.5   NA    NA    0.5\n#&gt; 204 #F8766D 3.394128 16.70186     1     1    19  1.5   NA    NA    0.5\n#&gt; 205 #F8766D 3.392817 19.38064     1     1    19  1.5   NA    NA    0.5\n#&gt; 206 #F8766D 3.964371 17.83500     2     1    19  1.5   NA    NA    0.5\n#&gt; 207 #F8766D 4.006347 19.94960     2     1    19  1.5   NA    NA    0.5\n#&gt; 208 #00BA38 1.991503 29.08912     1     2    19  1.5   NA    NA    0.5\n#&gt; 209 #00BA38 1.960542 25.61566     1     2    19  1.5   NA    NA    0.5\n#&gt; 210 #00BA38 1.988835 28.72385     2     2    19  1.5   NA    NA    0.5\n#&gt; 211 #00BA38 2.037926 29.03832     2     2    19  1.5   NA    NA    0.5\n#&gt; 212 #00BA38 2.808537 24.31205     1     2    19  1.5   NA    NA    0.5\n#&gt; 213 #00BA38 1.919795 44.36579     1     2    19  1.5   NA    NA    0.5\n#&gt; 214 #00BA38 1.983528 28.96789     1     2    19  1.5   NA    NA    0.5\n#&gt; 215 #00BA38 1.987543 26.24385     1     2    19  1.5   NA    NA    0.5\n#&gt; 216 #00BA38 2.017406 29.25582     2     2    19  1.5   NA    NA    0.5\n#&gt; 217 #00BA38 1.995187 28.65331     2     2    19  1.5   NA    NA    0.5\n#&gt; 218 #00BA38 2.525185 28.83494     2     2    19  1.5   NA    NA    0.5\n#&gt; 219 #00BA38 2.502464 29.38374     2     2    19  1.5   NA    NA    0.5\n#&gt; 220 #00BA38 2.775895 23.12603     1     2    19  1.5   NA    NA    0.5\n#&gt; 221 #00BA38 2.783482 24.03764     1     2    19  1.5   NA    NA    0.5\n#&gt; 222 #00BA38 1.883704 44.28538     1     2    19  1.5   NA    NA    0.5\n#&gt; 223 #00BA38 1.898457 41.16524     1     2    19  1.5   NA    NA    0.5\n#&gt; 224 #00BA38 2.012421 29.15648     1     2    19  1.5   NA    NA    0.5\n#&gt; 225 #00BA38 1.970707 26.09071     1     2    19  1.5   NA    NA    0.5\n#&gt; 226 #00BA38 2.462143 28.19584     2     2    19  1.5   NA    NA    0.5\n#&gt; 227 #00BA38 2.472723 29.10053     2     2    19  1.5   NA    NA    0.5\n#&gt; 228 #00BA38 1.783306 28.62686     1     2    19  1.5   NA    NA    0.5\n#&gt; 229 #00BA38 1.782366 29.04936     1     2    19  1.5   NA    NA    0.5\n#&gt; 230 #00BA38 1.992224 28.23076     2     2    19  1.5   NA    NA    0.5\n#&gt; 231 #00BA38 2.001187 28.97703     2     2    19  1.5   NA    NA    0.5\n#&gt; 232 #00BA38 2.805727 26.25083     1     2    19  1.5   NA    NA    0.5\n#&gt; 233 #00BA38 2.806901 25.60939     1     2    19  1.5   NA    NA    0.5\n#&gt; 234 #00BA38 3.583273 25.98308     2     2    19  1.5   NA    NA    0.5\n#&gt; \n#&gt; [[2]]\n#&gt;      colour        x        y     ymin     ymax        se flipped_aes PANEL\n#&gt; 1   #F8766D 1.800000 24.33592 23.07845 25.59339 0.6250675       FALSE     1\n#&gt; 2   #F8766D 1.859494 24.17860 22.94830 25.40890 0.6115600       FALSE     1\n#&gt; 3   #F8766D 1.918987 24.02127 22.81795 25.22460 0.5981528       FALSE     1\n#&gt; 4   #F8766D 1.978481 23.86395 22.68738 25.04052 0.5848527       FALSE     1\n#&gt; 5   #F8766D 2.037975 23.70663 22.55658 24.85668 0.5716673       FALSE     1\n#&gt; 6   #F8766D 2.097468 23.54931 22.42554 24.67307 0.5586045       FALSE     1\n#&gt; 7   #F8766D 2.156962 23.39198 22.29423 24.48974 0.5456732       FALSE     1\n#&gt; 8   #F8766D 2.216456 23.23466 22.16264 24.30668 0.5328831       FALSE     1\n#&gt; 9   #F8766D 2.275949 23.07734 22.03074 24.12394 0.5202445       FALSE     1\n#&gt; 10  #F8766D 2.335443 22.92002 21.89852 23.94152 0.5077687       FALSE     1\n#&gt; 11  #F8766D 2.394937 22.76269 21.76594 23.75945 0.4954680       FALSE     1\n#&gt; 12  #F8766D 2.454430 22.60537 21.63298 23.57776 0.4833558       FALSE     1\n#&gt; 13  #F8766D 2.513924 22.44805 21.49962 23.39648 0.4714467       FALSE     1\n#&gt; 14  #F8766D 2.573418 22.29073 21.36582 23.21564 0.4597563       FALSE     1\n#&gt; 15  #F8766D 2.632911 22.13340 21.23154 23.03527 0.4483019       FALSE     1\n#&gt; 16  #F8766D 2.692405 21.97608 21.09675 22.85542 0.4371019       FALSE     1\n#&gt; 17  #F8766D 2.751899 21.81876 20.96140 22.67611 0.4261765       FALSE     1\n#&gt; 18  #F8766D 2.811392 21.66144 20.82546 22.49741 0.4155472       FALSE     1\n#&gt; 19  #F8766D 2.870886 21.50411 20.68888 22.31935 0.4052375       FALSE     1\n#&gt; 20  #F8766D 2.930380 21.34679 20.55161 22.14198 0.3952722       FALSE     1\n#&gt; 21  #F8766D 2.989873 21.18947 20.41358 21.96535 0.3856781       FALSE     1\n#&gt; 22  #F8766D 3.049367 21.03215 20.27476 21.78953 0.3764836       FALSE     1\n#&gt; 23  #F8766D 3.108861 20.87482 20.13507 21.61458 0.3677187       FALSE     1\n#&gt; 24  #F8766D 3.168354 20.71750 19.99445 21.44055 0.3594147       FALSE     1\n#&gt; 25  #F8766D 3.227848 20.56018 19.85284 21.26751 0.3516043       FALSE     1\n#&gt; 26  #F8766D 3.287342 20.40286 19.71017 21.09554 0.3443212       FALSE     1\n#&gt; 27  #F8766D 3.346835 20.24553 19.56637 20.92470 0.3375995       FALSE     1\n#&gt; 28  #F8766D 3.406329 20.08821 19.42137 20.75505 0.3314732       FALSE     1\n#&gt; 29  #F8766D 3.465823 19.93089 19.27511 20.58667 0.3259761       FALSE     1\n#&gt; 30  #F8766D 3.525316 19.77357 19.12751 20.41962 0.3211403       FALSE     1\n#&gt; 31  #F8766D 3.584810 19.61624 18.97853 20.25396 0.3169962       FALSE     1\n#&gt; 32  #F8766D 3.644304 19.45892 18.82810 20.08974 0.3135712       FALSE     1\n#&gt; 33  #F8766D 3.703797 19.30160 18.67617 19.92703 0.3108890       FALSE     1\n#&gt; 34  #F8766D 3.763291 19.14428 18.52271 19.76584 0.3089691       FALSE     1\n#&gt; 35  #F8766D 3.822785 18.98695 18.36769 19.60622 0.3078256       FALSE     1\n#&gt; 36  #F8766D 3.882278 18.82963 18.21109 19.44817 0.3074672       FALSE     1\n#&gt; 37  #F8766D 3.941772 18.67231 18.05290 19.29172 0.3078967       FALSE     1\n#&gt; 38  #F8766D 4.001266 18.51499 17.89313 19.13684 0.3091108       FALSE     1\n#&gt; 39  #F8766D 4.060759 18.35766 17.73181 18.98352 0.3111002       FALSE     1\n#&gt; 40  #F8766D 4.120253 18.20034 17.56895 18.83173 0.3138504       FALSE     1\n#&gt; 41  #F8766D 4.179747 18.04302 17.40461 18.68143 0.3173414       FALSE     1\n#&gt; 42  #F8766D 4.239241 17.88570 17.23882 18.53257 0.3215491       FALSE     1\n#&gt; 43  #F8766D 4.298734 17.72837 17.07165 18.38510 0.3264459       FALSE     1\n#&gt; 44  #F8766D 4.358228 17.57105 16.90315 18.23895 0.3320012       FALSE     1\n#&gt; 45  #F8766D 4.417722 17.41373 16.73339 18.09406 0.3381826       FALSE     1\n#&gt; 46  #F8766D 4.477215 17.25640 16.56244 17.95037 0.3449565       FALSE     1\n#&gt; 47  #F8766D 4.536709 17.09908 16.39037 17.80780 0.3522886       FALSE     1\n#&gt; 48  #F8766D 4.596203 16.94176 16.21724 17.66628 0.3601449       FALSE     1\n#&gt; 49  #F8766D 4.655696 16.78444 16.04313 17.52575 0.3684918       FALSE     1\n#&gt; 50  #F8766D 4.715190 16.62711 15.86809 17.38614 0.3772968       FALSE     1\n#&gt; 51  #F8766D 4.774684 16.46979 15.69220 17.24739 0.3865286       FALSE     1\n#&gt; 52  #F8766D 4.834177 16.31247 15.51550 17.10944 0.3961574       FALSE     1\n#&gt; 53  #F8766D 4.893671 16.15515 15.33807 16.97223 0.4061548       FALSE     1\n#&gt; 54  #F8766D 4.953165 15.99782 15.15995 16.83570 0.4164945       FALSE     1\n#&gt; 55  #F8766D 5.012658 15.84050 14.98118 16.69982 0.4271514       FALSE     1\n#&gt; 56  #F8766D 5.072152 15.68318 14.80183 16.56453 0.4381025       FALSE     1\n#&gt; 57  #F8766D 5.131646 15.52586 14.62193 16.42978 0.4493262       FALSE     1\n#&gt; 58  #F8766D 5.191139 15.36853 14.44152 16.29555 0.4608027       FALSE     1\n#&gt; 59  #F8766D 5.250633 15.21121 14.26064 16.16179 0.4725135       FALSE     1\n#&gt; 60  #F8766D 5.310127 15.05389 14.07932 16.02846 0.4844416       FALSE     1\n#&gt; 61  #F8766D 5.369620 14.89657 13.89759 15.89554 0.4965714       FALSE     1\n#&gt; 62  #F8766D 5.429114 14.73924 13.71549 15.76300 0.5088884       FALSE     1\n#&gt; 63  #F8766D 5.488608 14.58192 13.53304 15.63080 0.5213794       FALSE     1\n#&gt; 64  #F8766D 5.548101 14.42460 13.35026 15.49893 0.5340322       FALSE     1\n#&gt; 65  #F8766D 5.607595 14.26728 13.16719 15.36737 0.5468355       FALSE     1\n#&gt; 66  #F8766D 5.667089 14.10995 12.98382 15.23608 0.5597790       FALSE     1\n#&gt; 67  #F8766D 5.726582 13.95263 12.80020 15.10506 0.5728532       FALSE     1\n#&gt; 68  #F8766D 5.786076 13.79531 12.61633 14.97429 0.5860494       FALSE     1\n#&gt; 69  #F8766D 5.845570 13.63799 12.43223 14.84374 0.5993594       FALSE     1\n#&gt; 70  #F8766D 5.905063 13.48066 12.24792 14.71341 0.6127760       FALSE     1\n#&gt; 71  #F8766D 5.964557 13.32334 12.06340 14.58328 0.6262922       FALSE     1\n#&gt; 72  #F8766D 6.024051 13.16602 11.87870 14.45333 0.6399017       FALSE     1\n#&gt; 73  #F8766D 6.083544 13.00870 11.69383 14.32357 0.6535987       FALSE     1\n#&gt; 74  #F8766D 6.143038 12.85137 11.50878 14.19396 0.6673778       FALSE     1\n#&gt; 75  #F8766D 6.202532 12.69405 11.32359 14.06452 0.6812340       FALSE     1\n#&gt; 76  #F8766D 6.262025 12.53673 11.13824 13.93522 0.6951627       FALSE     1\n#&gt; 77  #F8766D 6.321519 12.37941 10.95276 13.80605 0.7091597       FALSE     1\n#&gt; 78  #F8766D 6.381013 12.22208 10.76715 13.67702 0.7232209       FALSE     1\n#&gt; 79  #F8766D 6.440506 12.06476 10.58142 13.54810 0.7373428       FALSE     1\n#&gt; 80  #F8766D 6.500000 11.90744 10.39557 13.41931 0.7515218       FALSE     1\n#&gt; 81  #00BA38 1.600000 31.78093 30.16782 33.39404 0.8049250       FALSE     1\n#&gt; 82  #00BA38 1.627848 31.65273 30.07403 33.23143 0.7877576       FALSE     1\n#&gt; 83  #00BA38 1.655696 31.52453 29.97980 33.06925 0.7708055       FALSE     1\n#&gt; 84  #00BA38 1.683544 31.39632 29.88511 32.90754 0.7540832       FALSE     1\n#&gt; 85  #00BA38 1.711392 31.26812 29.78993 32.74632 0.7376065       FALSE     1\n#&gt; 86  #00BA38 1.739241 31.13992 29.69422 32.58562 0.7213920       FALSE     1\n#&gt; 87  #00BA38 1.767089 31.01172 29.59795 32.42549 0.7054579       FALSE     1\n#&gt; 88  #00BA38 1.794937 30.88352 29.50108 32.26595 0.6898237       FALSE     1\n#&gt; 89  #00BA38 1.822785 30.75532 29.40357 32.10706 0.6745101       FALSE     1\n#&gt; 90  #00BA38 1.850633 30.62711 29.30537 31.94886 0.6595396       FALSE     1\n#&gt; 91  #00BA38 1.878481 30.49891 29.20643 31.79139 0.6449359       FALSE     1\n#&gt; 92  #00BA38 1.906329 30.37071 29.10671 31.63471 0.6307246       FALSE     1\n#&gt; 93  #00BA38 1.934177 30.24251 29.00615 31.47887 0.6169329       FALSE     1\n#&gt; 94  #00BA38 1.962025 30.11431 28.90469 31.32393 0.6035894       FALSE     1\n#&gt; 95  #00BA38 1.989873 29.98610 28.80227 31.16994 0.5907245       FALSE     1\n#&gt; 96  #00BA38 2.017722 29.85790 28.69882 31.01698 0.5783702       FALSE     1\n#&gt; 97  #00BA38 2.045570 29.72970 28.59429 30.86511 0.5665599       FALSE     1\n#&gt; 98  #00BA38 2.073418 29.60150 28.48860 30.71440 0.5553282       FALSE     1\n#&gt; 99  #00BA38 2.101266 29.47330 28.38167 30.56492 0.5447111       FALSE     1\n#&gt; 100 #00BA38 2.129114 29.34509 28.27344 30.41675 0.5347450       FALSE     1\n#&gt; 101 #00BA38 2.156962 29.21689 28.16383 30.26995 0.5254670       FALSE     1\n#&gt; 102 #00BA38 2.184810 29.08869 28.05277 30.12461 0.5169143       FALSE     1\n#&gt; 103 #00BA38 2.212658 28.96049 27.94018 29.98080 0.5091233       FALSE     1\n#&gt; 104 #00BA38 2.240506 28.83229 27.82600 29.83858 0.5021295       FALSE     1\n#&gt; 105 #00BA38 2.268354 28.70409 27.71015 29.69802 0.4959666       FALSE     1\n#&gt; 106 #00BA38 2.296203 28.57588 27.59257 29.55920 0.4906659       FALSE     1\n#&gt; 107 #00BA38 2.324051 28.44768 27.47320 29.42216 0.4862556       FALSE     1\n#&gt; 108 #00BA38 2.351899 28.31948 27.35201 29.28695 0.4827602       FALSE     1\n#&gt; 109 #00BA38 2.379747 28.19128 27.22894 29.15362 0.4801996       FALSE     1\n#&gt; 110 #00BA38 2.407595 28.06308 27.10396 29.02219 0.4785888       FALSE     1\n#&gt; 111 #00BA38 2.435443 27.93487 26.97707 28.89268 0.4779375       FALSE     1\n#&gt; 112 #00BA38 2.463291 27.80667 26.84824 28.76511 0.4782494       FALSE     1\n#&gt; 113 #00BA38 2.491139 27.67847 26.71749 28.63946 0.4795229       FALSE     1\n#&gt; 114 #00BA38 2.518987 27.55027 26.58482 28.51572 0.4817501       FALSE     1\n#&gt; 115 #00BA38 2.546835 27.42207 26.45027 28.39386 0.4849181       FALSE     1\n#&gt; 116 #00BA38 2.574684 27.29387 26.31387 28.27386 0.4890084       FALSE     1\n#&gt; 117 #00BA38 2.602532 27.16566 26.17567 28.15566 0.4939983       FALSE     1\n#&gt; 118 #00BA38 2.630380 27.03746 26.03572 28.03920 0.4998607       FALSE     1\n#&gt; 119 #00BA38 2.658228 26.90926 25.89408 27.92444 0.5065654       FALSE     1\n#&gt; 120 #00BA38 2.686076 26.78106 25.75082 27.81130 0.5140794       FALSE     1\n#&gt; 121 #00BA38 2.713924 26.65286 25.60601 27.69970 0.5223678       FALSE     1\n#&gt; 122 #00BA38 2.741772 26.52465 25.45972 27.58959 0.5313943       FALSE     1\n#&gt; 123 #00BA38 2.769620 26.39645 25.31202 27.48089 0.5411221       FALSE     1\n#&gt; 124 #00BA38 2.797468 26.26825 25.16299 27.37351 0.5515140       FALSE     1\n#&gt; 125 #00BA38 2.825316 26.14005 25.01271 27.26739 0.5625332       FALSE     1\n#&gt; 126 #00BA38 2.853165 26.01185 24.86124 27.16246 0.5741435       FALSE     1\n#&gt; 127 #00BA38 2.881013 25.88364 24.70865 27.05864 0.5863100       FALSE     1\n#&gt; 128 #00BA38 2.908861 25.75544 24.55502 26.95586 0.5989986       FALSE     1\n#&gt; 129 #00BA38 2.936709 25.62724 24.40041 26.85407 0.6121770       FALSE     1\n#&gt; 130 #00BA38 2.964557 25.49904 24.24488 26.75320 0.6258141       FALSE     1\n#&gt; 131 #00BA38 2.992405 25.37084 24.08849 26.65319 0.6398807       FALSE     1\n#&gt; 132 #00BA38 3.020253 25.24264 23.93129 26.55398 0.6543490       FALSE     1\n#&gt; 133 #00BA38 3.048101 25.11443 23.77334 26.45553 0.6691931       FALSE     1\n#&gt; 134 #00BA38 3.075949 24.98623 23.61469 26.35778 0.6843884       FALSE     1\n#&gt; 135 #00BA38 3.103797 24.85803 23.45538 26.26069 0.6999120       FALSE     1\n#&gt; 136 #00BA38 3.131646 24.72983 23.29545 26.16421 0.7157427       FALSE     1\n#&gt; 137 #00BA38 3.159494 24.60163 23.13495 26.06831 0.7318605       FALSE     1\n#&gt; 138 #00BA38 3.187342 24.47342 22.97390 25.97294 0.7482468       FALSE     1\n#&gt; 139 #00BA38 3.215190 24.34522 22.81236 25.87809 0.7648843       FALSE     1\n#&gt; 140 #00BA38 3.243038 24.21702 22.65034 25.78370 0.7817572       FALSE     1\n#&gt; 141 #00BA38 3.270886 24.08882 22.48789 25.68975 0.7988503       FALSE     1\n#&gt; 142 #00BA38 3.298734 23.96062 22.32502 25.59622 0.8161499       FALSE     1\n#&gt; 143 #00BA38 3.326582 23.83242 22.16176 25.50307 0.8336432       FALSE     1\n#&gt; 144 #00BA38 3.354430 23.70421 21.99813 25.41029 0.8513181       FALSE     1\n#&gt; 145 #00BA38 3.382278 23.57601 21.83417 25.31785 0.8691637       FALSE     1\n#&gt; 146 #00BA38 3.410127 23.44781 21.66988 25.22574 0.8871695       FALSE     1\n#&gt; 147 #00BA38 3.437975 23.31961 21.50529 25.13392 0.9053261       FALSE     1\n#&gt; 148 #00BA38 3.465823 23.19141 21.34042 25.04239 0.9236246       FALSE     1\n#&gt; 149 #00BA38 3.493671 23.06320 21.17528 24.95113 0.9420567       FALSE     1\n#&gt; 150 #00BA38 3.521519 22.93500 21.00989 24.86012 0.9606146       FALSE     1\n#&gt; 151 #00BA38 3.549367 22.80680 20.84426 24.76934 0.9792914       FALSE     1\n#&gt; 152 #00BA38 3.577215 22.67860 20.67840 24.67880 0.9980801       FALSE     1\n#&gt; 153 #00BA38 3.605063 22.55040 20.51233 24.58846 1.0169748       FALSE     1\n#&gt; 154 #00BA38 3.632911 22.42220 20.34607 24.49832 1.0359695       FALSE     1\n#&gt; 155 #00BA38 3.660759 22.29399 20.17961 24.40838 1.0550589       FALSE     1\n#&gt; 156 #00BA38 3.688608 22.16579 20.01297 24.31861 1.0742380       FALSE     1\n#&gt; 157 #00BA38 3.716456 22.03759 19.84616 24.22902 1.0935019       FALSE     1\n#&gt; 158 #00BA38 3.744304 21.90939 19.67919 24.13958 1.1128463       FALSE     1\n#&gt; 159 #00BA38 3.772152 21.78119 19.51207 24.05030 1.1322671       FALSE     1\n#&gt; 160 #00BA38 3.800000 21.65298 19.34480 23.96116 1.1517604       FALSE     1\n#&gt; 161 #619CFF 3.800000 23.46965 18.42826 28.51104 2.2285773       FALSE     1\n#&gt; 162 #619CFF 3.824051 23.41154 18.44650 28.37658 2.1948252       FALSE     1\n#&gt; 163 #619CFF 3.848101 23.35344 18.46432 28.24255 2.1612617       FALSE     1\n#&gt; 164 #619CFF 3.872152 23.29533 18.48170 28.10897 2.1278958       FALSE     1\n#&gt; 165 #619CFF 3.896203 23.23723 18.49860 27.97585 2.0947368       FALSE     1\n#&gt; 166 #619CFF 3.920253 23.17912 18.51502 27.84322 2.0617947       FALSE     1\n#&gt; 167 #619CFF 3.944304 23.12102 18.53092 27.71111 2.0290802       FALSE     1\n#&gt; 168 #619CFF 3.968354 23.06291 18.54628 27.57954 1.9966044       FALSE     1\n#&gt; 169 #619CFF 3.992405 23.00480 18.56107 27.44854 1.9643791       FALSE     1\n#&gt; 170 #619CFF 4.016456 22.94670 18.57527 27.31813 1.9324168       FALSE     1\n#&gt; 171 #619CFF 4.040506 22.88859 18.58884 27.18834 1.9007309       FALSE     1\n#&gt; 172 #619CFF 4.064557 22.83049 18.60176 27.05922 1.8693354       FALSE     1\n#&gt; 173 #619CFF 4.088608 22.77238 18.61398 26.93078 1.8382452       FALSE     1\n#&gt; 174 #619CFF 4.112658 22.71427 18.62548 26.80307 1.8074760       FALSE     1\n#&gt; 175 #619CFF 4.136709 22.65617 18.63621 26.67612 1.7770445       FALSE     1\n#&gt; 176 #619CFF 4.160759 22.59806 18.64615 26.54998 1.7469684       FALSE     1\n#&gt; 177 #619CFF 4.184810 22.53996 18.65523 26.42468 1.7172662       FALSE     1\n#&gt; 178 #619CFF 4.208861 22.48185 18.66342 26.30028 1.6879578       FALSE     1\n#&gt; 179 #619CFF 4.232911 22.42374 18.67068 26.17681 1.6590641       FALSE     1\n#&gt; 180 #619CFF 4.256962 22.36564 18.67695 26.05433 1.6306070       FALSE     1\n#&gt; 181 #619CFF 4.281013 22.30753 18.68218 25.93289 1.6026099       FALSE     1\n#&gt; 182 #619CFF 4.305063 22.24943 18.68631 25.81254 1.5750972       FALSE     1\n#&gt; 183 #619CFF 4.329114 22.19132 18.68929 25.69335 1.5480948       FALSE     1\n#&gt; 184 #619CFF 4.353165 22.13322 18.69105 25.57538 1.5216299       FALSE     1\n#&gt; 185 #619CFF 4.377215 22.07511 18.69153 25.45869 1.4957310       FALSE     1\n#&gt; 186 #619CFF 4.401266 22.01700 18.69066 25.34334 1.4704279       FALSE     1\n#&gt; 187 #619CFF 4.425316 21.95890 18.68838 25.22942 1.4457521       FALSE     1\n#&gt; 188 #619CFF 4.449367 21.90079 18.68460 25.11698 1.4217360       FALSE     1\n#&gt; 189 #619CFF 4.473418 21.84269 18.67925 25.00612 1.3984138       FALSE     1\n#&gt; 190 #619CFF 4.497468 21.78458 18.67226 24.89690 1.3758208       FALSE     1\n#&gt; 191 #619CFF 4.521519 21.72647 18.66353 24.78942 1.3539933       FALSE     1\n#&gt; 192 #619CFF 4.545570 21.66837 18.65298 24.68375 1.3329691       FALSE     1\n#&gt; 193 #619CFF 4.569620 21.61026 18.64053 24.57999 1.3127867       FALSE     1\n#&gt; 194 #619CFF 4.593671 21.55216 18.62609 24.47822 1.2934855       FALSE     1\n#&gt; 195 #619CFF 4.617722 21.49405 18.60956 24.37854 1.2751055       FALSE     1\n#&gt; 196 #619CFF 4.641772 21.43594 18.59086 24.28103 1.2576872       FALSE     1\n#&gt; 197 #619CFF 4.665823 21.37784 18.56989 24.18579 1.2412710       FALSE     1\n#&gt; 198 #619CFF 4.689873 21.31973 18.54656 24.09291 1.2258972       FALSE     1\n#&gt; 199 #619CFF 4.713924 21.26163 18.52079 24.00247 1.2116055       FALSE     1\n#&gt; 200 #619CFF 4.737975 21.20352 18.49247 23.91457 1.1984345       FALSE     1\n#&gt; 201 #619CFF 4.762025 21.14542 18.46154 23.82929 1.1864216       FALSE     1\n#&gt; 202 #619CFF 4.786076 21.08731 18.42791 23.74671 1.1756023       FALSE     1\n#&gt; 203 #619CFF 4.810127 21.02920 18.39151 23.66690 1.1660099       FALSE     1\n#&gt; 204 #619CFF 4.834177 20.97110 18.35226 23.58994 1.1576747       FALSE     1\n#&gt; 205 #619CFF 4.858228 20.91299 18.31010 23.51588 1.1506242       FALSE     1\n#&gt; 206 #619CFF 4.882278 20.85489 18.26498 23.44479 1.1448821       FALSE     1\n#&gt; 207 #619CFF 4.906329 20.79678 18.21686 23.37670 1.1404681       FALSE     1\n#&gt; 208 #619CFF 4.930380 20.73867 18.16570 23.31165 1.1373978       FALSE     1\n#&gt; 209 #619CFF 4.954430 20.68057 18.11148 23.24966 1.1356819       FALSE     1\n#&gt; 210 #619CFF 4.978481 20.62246 18.05418 23.19075 1.1353267       FALSE     1\n#&gt; 211 #619CFF 5.002532 20.56436 17.99379 23.13492 1.1363334       FALSE     1\n#&gt; 212 #619CFF 5.026582 20.50625 17.93034 23.08217 1.1386984       FALSE     1\n#&gt; 213 #619CFF 5.050633 20.44815 17.86383 23.03246 1.1424133       FALSE     1\n#&gt; 214 #619CFF 5.074684 20.39004 17.79429 22.98579 1.1474649       FALSE     1\n#&gt; 215 #619CFF 5.098734 20.33193 17.72178 22.94209 1.1538358       FALSE     1\n#&gt; 216 #619CFF 5.122785 20.27383 17.64632 22.90133 1.1615041       FALSE     1\n#&gt; 217 #619CFF 5.146835 20.21572 17.56799 22.86345 1.1704445       FALSE     1\n#&gt; 218 #619CFF 5.170886 20.15762 17.48685 22.82838 1.1806279       FALSE     1\n#&gt; 219 #619CFF 5.194937 20.09951 17.40297 22.79605 1.1920226       FALSE     1\n#&gt; 220 #619CFF 5.218987 20.04140 17.31642 22.76639 1.2045942       FALSE     1\n#&gt; 221 #619CFF 5.243038 19.98330 17.22730 22.73930 1.2183062       FALSE     1\n#&gt; 222 #619CFF 5.267089 19.92519 17.13568 22.71470 1.2331205       FALSE     1\n#&gt; 223 #619CFF 5.291139 19.86709 17.04166 22.69252 1.2489981       FALSE     1\n#&gt; 224 #619CFF 5.315190 19.80898 16.94532 22.67264 1.2658988       FALSE     1\n#&gt; 225 #619CFF 5.339241 19.75087 16.84676 22.65499 1.2837823       FALSE     1\n#&gt; 226 #619CFF 5.363291 19.69277 16.74606 22.63947 1.3026080       FALSE     1\n#&gt; 227 #619CFF 5.387342 19.63466 16.64333 22.62599 1.3223358       FALSE     1\n#&gt; 228 #619CFF 5.411392 19.57656 16.53865 22.61447 1.3429259       FALSE     1\n#&gt; 229 #619CFF 5.435443 19.51845 16.43210 22.60480 1.3643392       FALSE     1\n#&gt; 230 #619CFF 5.459494 19.46035 16.32378 22.59691 1.3865376       FALSE     1\n#&gt; 231 #619CFF 5.483544 19.40224 16.21377 22.59071 1.4094840       FALSE     1\n#&gt; 232 #619CFF 5.507595 19.34413 16.10214 22.58613 1.4331425       FALSE     1\n#&gt; 233 #619CFF 5.531646 19.28603 15.98898 22.58307 1.4574784       FALSE     1\n#&gt; 234 #619CFF 5.555696 19.22792 15.87437 22.58148 1.4824584       FALSE     1\n#&gt; 235 #619CFF 5.579747 19.16982 15.75837 22.58126 1.5080503       FALSE     1\n#&gt; 236 #619CFF 5.603797 19.11171 15.64105 22.58237 1.5342237       FALSE     1\n#&gt; 237 #619CFF 5.627848 19.05360 15.52249 22.58472 1.5609493       FALSE     1\n#&gt; 238 #619CFF 5.651899 18.99550 15.40274 22.58825 1.5881991       FALSE     1\n#&gt; 239 #619CFF 5.675949 18.93739 15.28187 22.59292 1.6159468       FALSE     1\n#&gt; 240 #619CFF 5.700000 18.87929 15.15992 22.59865 1.6441669       FALSE     1\n#&gt; 241 #F8766D 2.000000 26.31880 24.82002 27.81758 0.7469075       FALSE     2\n#&gt; 242 #F8766D 2.051899 26.15027 24.68063 27.61991 0.7323869       FALSE     2\n#&gt; 243 #F8766D 2.103797 25.98174 24.54107 27.42240 0.7179459       FALSE     2\n#&gt; 244 #F8766D 2.155696 25.81321 24.40135 27.22506 0.7035895       FALSE     2\n#&gt; 245 #F8766D 2.207595 25.64468 24.26145 27.02791 0.6893229       FALSE     2\n#&gt; 246 #F8766D 2.259494 25.47615 24.12136 26.83094 0.6751519       FALSE     2\n#&gt; 247 #F8766D 2.311392 25.30762 23.98106 26.63418 0.6610825       FALSE     2\n#&gt; 248 #F8766D 2.363291 25.13909 23.84055 26.43764 0.6471215       FALSE     2\n#&gt; 249 #F8766D 2.415190 24.97056 23.69980 26.24132 0.6332759       FALSE     2\n#&gt; 250 #F8766D 2.467089 24.80203 23.55881 26.04526 0.6195535       FALSE     2\n#&gt; 251 #F8766D 2.518987 24.63350 23.41755 25.84946 0.6059628       FALSE     2\n#&gt; 252 #F8766D 2.570886 24.46497 23.27601 25.65394 0.5925126       FALSE     2\n#&gt; 253 #F8766D 2.622785 24.29644 23.13417 25.45872 0.5792130       FALSE     2\n#&gt; 254 #F8766D 2.674684 24.12791 22.99200 25.26383 0.5660743       FALSE     2\n#&gt; 255 #F8766D 2.726582 23.95939 22.84949 25.06928 0.5531082       FALSE     2\n#&gt; 256 #F8766D 2.778481 23.79086 22.70661 24.87510 0.5403270       FALSE     2\n#&gt; 257 #F8766D 2.830380 23.62233 22.56333 24.68132 0.5277442       FALSE     2\n#&gt; 258 #F8766D 2.882278 23.45380 22.41962 24.48797 0.5153743       FALSE     2\n#&gt; 259 #F8766D 2.934177 23.28527 22.27546 24.29508 0.5032330       FALSE     2\n#&gt; 260 #F8766D 2.986076 23.11674 22.13080 24.10268 0.4913373       FALSE     2\n#&gt; 261 #F8766D 3.037975 22.94821 21.98561 23.91081 0.4797053       FALSE     2\n#&gt; 262 #F8766D 3.089873 22.77968 21.83985 23.71951 0.4683569       FALSE     2\n#&gt; 263 #F8766D 3.141772 22.61115 21.69348 23.52882 0.4573131       FALSE     2\n#&gt; 264 #F8766D 3.193671 22.44262 21.54646 23.33878 0.4465964       FALSE     2\n#&gt; 265 #F8766D 3.245570 22.27409 21.39873 23.14945 0.4362310       FALSE     2\n#&gt; 266 #F8766D 3.297468 22.10556 21.25024 22.96088 0.4262426       FALSE     2\n#&gt; 267 #F8766D 3.349367 21.93703 21.10095 22.77312 0.4166582       FALSE     2\n#&gt; 268 #F8766D 3.401266 21.76850 20.95078 22.58622 0.4075063       FALSE     2\n#&gt; 269 #F8766D 3.453165 21.59997 20.79969 22.40026 0.3988167       FALSE     2\n#&gt; 270 #F8766D 3.505063 21.43144 20.64761 22.21528 0.3906204       FALSE     2\n#&gt; 271 #F8766D 3.556962 21.26291 20.49447 22.03136 0.3829488       FALSE     2\n#&gt; 272 #F8766D 3.608861 21.09439 20.34022 21.84855 0.3758343       FALSE     2\n#&gt; 273 #F8766D 3.660759 20.92586 20.18478 21.66693 0.3693089       FALSE     2\n#&gt; 274 #F8766D 3.712658 20.75733 20.02810 21.48655 0.3634045       FALSE     2\n#&gt; 275 #F8766D 3.764557 20.58880 19.87011 21.30748 0.3581517       FALSE     2\n#&gt; 276 #F8766D 3.816456 20.42027 19.71076 21.12978 0.3535795       FALSE     2\n#&gt; 277 #F8766D 3.868354 20.25174 19.54998 20.95349 0.3497147       FALSE     2\n#&gt; 278 #F8766D 3.920253 20.08321 19.38774 20.77867 0.3465809       FALSE     2\n#&gt; 279 #F8766D 3.972152 19.91468 19.22400 20.60536 0.3441982       FALSE     2\n#&gt; 280 #F8766D 4.024051 19.74615 19.05871 20.43359 0.3425821       FALSE     2\n#&gt; 281 #F8766D 4.075949 19.57762 18.89186 20.26338 0.3417436       FALSE     2\n#&gt; 282 #F8766D 4.127848 19.40909 18.72344 20.09474 0.3416883       FALSE     2\n#&gt; 283 #F8766D 4.179747 19.24056 18.55345 19.92767 0.3424167       FALSE     2\n#&gt; 284 #F8766D 4.231646 19.07203 18.38190 19.76217 0.3439237       FALSE     2\n#&gt; 285 #F8766D 4.283544 18.90350 18.20880 19.59820 0.3461993       FALSE     2\n#&gt; 286 #F8766D 4.335443 18.73497 18.03420 19.43575 0.3492283       FALSE     2\n#&gt; 287 #F8766D 4.387342 18.56644 17.85812 19.27477 0.3529915       FALSE     2\n#&gt; 288 #F8766D 4.439241 18.39792 17.68061 19.11522 0.3574655       FALSE     2\n#&gt; 289 #F8766D 4.491139 18.22939 17.50173 18.95704 0.3626241       FALSE     2\n#&gt; 290 #F8766D 4.543038 18.06086 17.32153 18.80018 0.3684386       FALSE     2\n#&gt; 291 #F8766D 4.594937 17.89233 17.14008 18.64458 0.3748783       FALSE     2\n#&gt; 292 #F8766D 4.646835 17.72380 16.95744 18.49016 0.3819118       FALSE     2\n#&gt; 293 #F8766D 4.698734 17.55527 16.77367 18.33687 0.3895068       FALSE     2\n#&gt; 294 #F8766D 4.750633 17.38674 16.58883 18.18464 0.3976311       FALSE     2\n#&gt; 295 #F8766D 4.802532 17.21821 16.40300 18.03342 0.4062531       FALSE     2\n#&gt; 296 #F8766D 4.854430 17.04968 16.21624 17.88312 0.4153416       FALSE     2\n#&gt; 297 #F8766D 4.906329 16.88115 16.02859 17.73371 0.4248668       FALSE     2\n#&gt; 298 #F8766D 4.958228 16.71262 15.84013 17.58511 0.4348000       FALSE     2\n#&gt; 299 #F8766D 5.010127 16.54409 15.65091 17.43728 0.4451139       FALSE     2\n#&gt; 300 #F8766D 5.062025 16.37556 15.46097 17.29016 0.4557825       FALSE     2\n#&gt; 301 #F8766D 5.113924 16.20703 15.27037 17.14370 0.4667817       FALSE     2\n#&gt; 302 #F8766D 5.165823 16.03850 15.07915 16.99786 0.4780885       FALSE     2\n#&gt; 303 #F8766D 5.217722 15.86997 14.88736 16.85259 0.4896817       FALSE     2\n#&gt; 304 #F8766D 5.269620 15.70144 14.69503 16.70786 0.5015414       FALSE     2\n#&gt; 305 #F8766D 5.321519 15.53292 14.50220 16.56363 0.5136491       FALSE     2\n#&gt; 306 #F8766D 5.373418 15.36439 14.30891 16.41986 0.5259878       FALSE     2\n#&gt; 307 #F8766D 5.425316 15.19586 14.11519 16.27652 0.5385415       FALSE     2\n#&gt; 308 #F8766D 5.477215 15.02733 13.92107 16.13358 0.5512955       FALSE     2\n#&gt; 309 #F8766D 5.529114 14.85880 13.72657 15.99102 0.5642364       FALSE     2\n#&gt; 310 #F8766D 5.581013 14.69027 13.53173 15.84881 0.5773514       FALSE     2\n#&gt; 311 #F8766D 5.632911 14.52174 13.33655 15.70692 0.5906291       FALSE     2\n#&gt; 312 #F8766D 5.684810 14.35321 13.14108 15.56534 0.6040586       FALSE     2\n#&gt; 313 #F8766D 5.736709 14.18468 12.94531 15.42405 0.6176301       FALSE     2\n#&gt; 314 #F8766D 5.788608 14.01615 12.74929 15.28302 0.6313345       FALSE     2\n#&gt; 315 #F8766D 5.840506 13.84762 12.55301 15.14224 0.6451632       FALSE     2\n#&gt; 316 #F8766D 5.892405 13.67909 12.35649 15.00169 0.6591084       FALSE     2\n#&gt; 317 #F8766D 5.944304 13.51056 12.15976 14.86136 0.6731629       FALSE     2\n#&gt; 318 #F8766D 5.996203 13.34203 11.96282 14.72124 0.6873200       FALSE     2\n#&gt; 319 #F8766D 6.048101 13.17350 11.76569 14.58131 0.7015734       FALSE     2\n#&gt; 320 #F8766D 6.100000 13.00497 11.56838 14.44157 0.7159175       FALSE     2\n#&gt; 321 #00BA38 1.800000 31.28839 30.00524 32.57153 0.6378289       FALSE     2\n#&gt; 322 #00BA38 1.844304 31.14798 29.90153 32.39443 0.6195883       FALSE     2\n#&gt; 323 #00BA38 1.888608 31.00757 29.79698 32.21815 0.6017611       FALSE     2\n#&gt; 324 #00BA38 1.932911 30.86715 29.69152 32.04279 0.5843854       FALSE     2\n#&gt; 325 #00BA38 1.977215 30.72674 29.58508 31.86841 0.5675024       FALSE     2\n#&gt; 326 #00BA38 2.021519 30.58633 29.47755 31.69512 0.5511576       FALSE     2\n#&gt; 327 #00BA38 2.065823 30.44592 29.36884 31.52301 0.5354002       FALSE     2\n#&gt; 328 #00BA38 2.110127 30.30551 29.25884 31.35219 0.5202836       FALSE     2\n#&gt; 329 #00BA38 2.154430 30.16510 29.14743 31.18277 0.5058652       FALSE     2\n#&gt; 330 #00BA38 2.198734 30.02469 29.03450 31.01488 0.4922064       FALSE     2\n#&gt; 331 #00BA38 2.243038 29.88428 28.91991 30.84865 0.4793722       FALSE     2\n#&gt; 332 #00BA38 2.287342 29.74387 28.80352 30.68422 0.4674304       FALSE     2\n#&gt; 333 #00BA38 2.331646 29.60346 28.68520 30.52172 0.4564511       FALSE     2\n#&gt; 334 #00BA38 2.375949 29.46305 28.56479 30.36130 0.4465054       FALSE     2\n#&gt; 335 #00BA38 2.420253 29.32264 28.44217 30.20310 0.4376636       FALSE     2\n#&gt; 336 #00BA38 2.464557 29.18223 28.31719 30.04726 0.4299939       FALSE     2\n#&gt; 337 #00BA38 2.508861 29.04182 28.18972 29.89391 0.4235600       FALSE     2\n#&gt; 338 #00BA38 2.553165 28.90140 28.05965 29.74316 0.4184189       FALSE     2\n#&gt; 339 #00BA38 2.597468 28.76099 27.92689 29.59510 0.4146186       FALSE     2\n#&gt; 340 #00BA38 2.641772 28.62058 27.79135 29.44982 0.4121963       FALSE     2\n#&gt; 341 #00BA38 2.686076 28.48017 27.65299 29.30735 0.4111763       FALSE     2\n#&gt; 342 #00BA38 2.730380 28.33976 27.51179 29.16773 0.4115690       FALSE     2\n#&gt; 343 #00BA38 2.774684 28.19935 27.36776 29.03095 0.4133705       FALSE     2\n#&gt; 344 #00BA38 2.818987 28.05894 27.22093 28.89696 0.4165624       FALSE     2\n#&gt; 345 #00BA38 2.863291 27.91853 27.07136 28.76570 0.4211131       FALSE     2\n#&gt; 346 #00BA38 2.907595 27.77812 26.91915 28.63709 0.4269791       FALSE     2\n#&gt; 347 #00BA38 2.951899 27.63771 26.76440 28.51102 0.4341073       FALSE     2\n#&gt; 348 #00BA38 2.996203 27.49730 26.60723 28.38737 0.4424365       FALSE     2\n#&gt; 349 #00BA38 3.040506 27.35689 26.44778 28.26599 0.4519003       FALSE     2\n#&gt; 350 #00BA38 3.084810 27.21648 26.28619 28.14676 0.4624291       FALSE     2\n#&gt; 351 #00BA38 3.129114 27.07607 26.12260 28.02953 0.4739520       FALSE     2\n#&gt; 352 #00BA38 3.173418 26.93566 25.95715 27.91416 0.4863982       FALSE     2\n#&gt; 353 #00BA38 3.217722 26.79524 25.78998 27.80051 0.4996989       FALSE     2\n#&gt; 354 #00BA38 3.262025 26.65483 25.62123 27.68844 0.5137875       FALSE     2\n#&gt; 355 #00BA38 3.306329 26.51442 25.45101 27.57783 0.5286012       FALSE     2\n#&gt; 356 #00BA38 3.350633 26.37401 25.27946 27.46856 0.5440808       FALSE     2\n#&gt; 357 #00BA38 3.394937 26.23360 25.10668 27.36052 0.5601709       FALSE     2\n#&gt; 358 #00BA38 3.439241 26.09319 24.93278 27.25360 0.5768206       FALSE     2\n#&gt; 359 #00BA38 3.483544 25.95278 24.75784 27.14772 0.5939827       FALSE     2\n#&gt; 360 #00BA38 3.527848 25.81237 24.58196 27.04278 0.6116142       FALSE     2\n#&gt; 361 #00BA38 3.572152 25.67196 24.40522 26.93870 0.6296756       FALSE     2\n#&gt; 362 #00BA38 3.616456 25.53155 24.22768 26.83542 0.6481309       FALSE     2\n#&gt; 363 #00BA38 3.660759 25.39114 24.04941 26.73286 0.6669476       FALSE     2\n#&gt; 364 #00BA38 3.705063 25.25073 23.87048 26.63097 0.6860957       FALSE     2\n#&gt; 365 #00BA38 3.749367 25.11032 23.69094 26.52970 0.7055485       FALSE     2\n#&gt; 366 #00BA38 3.793671 24.96991 23.51083 26.42898 0.7252812       FALSE     2\n#&gt; 367 #00BA38 3.837975 24.82949 23.33020 26.32879 0.7452718       FALSE     2\n#&gt; 368 #00BA38 3.882278 24.68908 23.14910 26.22907 0.7655000       FALSE     2\n#&gt; 369 #00BA38 3.926582 24.54867 22.96755 26.12980 0.7859474       FALSE     2\n#&gt; 370 #00BA38 3.970886 24.40826 22.78560 26.03093 0.8065974       FALSE     2\n#&gt; 371 #00BA38 4.015190 24.26785 22.60327 25.93244 0.8274349       FALSE     2\n#&gt; 372 #00BA38 4.059494 24.12744 22.42059 25.83429 0.8484459       FALSE     2\n#&gt; 373 #00BA38 4.103797 23.98703 22.23758 25.73648 0.8696180       FALSE     2\n#&gt; 374 #00BA38 4.148101 23.84662 22.05428 25.63896 0.8909396       FALSE     2\n#&gt; 375 #00BA38 4.192405 23.70621 21.87070 25.54172 0.9124003       FALSE     2\n#&gt; 376 #00BA38 4.236709 23.56580 21.68685 25.44474 0.9339905       FALSE     2\n#&gt; 377 #00BA38 4.281013 23.42539 21.50276 25.34801 0.9557013       FALSE     2\n#&gt; 378 #00BA38 4.325316 23.28498 21.31845 25.25150 0.9775248       FALSE     2\n#&gt; 379 #00BA38 4.369620 23.14457 21.13392 25.15521 0.9994536       FALSE     2\n#&gt; 380 #00BA38 4.413924 23.00416 20.94920 25.05911 1.0214809       FALSE     2\n#&gt; 381 #00BA38 4.458228 22.86374 20.76429 24.96320 1.0436005       FALSE     2\n#&gt; 382 #00BA38 4.502532 22.72333 20.57921 24.86746 1.0658065       FALSE     2\n#&gt; 383 #00BA38 4.546835 22.58292 20.39396 24.77189 1.0880938       FALSE     2\n#&gt; 384 #00BA38 4.591139 22.44251 20.20856 24.67647 1.1104574       FALSE     2\n#&gt; 385 #00BA38 4.635443 22.30210 20.02302 24.58119 1.1328929       FALSE     2\n#&gt; 386 #00BA38 4.679747 22.16169 19.83733 24.48605 1.1553959       FALSE     2\n#&gt; 387 #00BA38 4.724051 22.02128 19.65153 24.39104 1.1779627       FALSE     2\n#&gt; 388 #00BA38 4.768354 21.88087 19.46560 24.29614 1.2005897       FALSE     2\n#&gt; 389 #00BA38 4.812658 21.74046 19.27955 24.20137 1.2232735       FALSE     2\n#&gt; 390 #00BA38 4.856962 21.60005 19.09340 24.10670 1.2460110       FALSE     2\n#&gt; 391 #00BA38 4.901266 21.45964 18.90714 24.01213 1.2687993       FALSE     2\n#&gt; 392 #00BA38 4.945570 21.31923 18.72079 23.91766 1.2916358       FALSE     2\n#&gt; 393 #00BA38 4.989873 21.17882 18.53435 23.82329 1.3145179       FALSE     2\n#&gt; 394 #00BA38 5.034177 21.03841 18.34782 23.72899 1.3374432       FALSE     2\n#&gt; 395 #00BA38 5.078481 20.89800 18.16120 23.63479 1.3604097       FALSE     2\n#&gt; 396 #00BA38 5.122785 20.75758 17.97451 23.54066 1.3834152       FALSE     2\n#&gt; 397 #00BA38 5.167089 20.61717 17.78775 23.44660 1.4064579       FALSE     2\n#&gt; 398 #00BA38 5.211392 20.47676 17.60091 23.35262 1.4295359       FALSE     2\n#&gt; 399 #00BA38 5.255696 20.33635 17.41400 23.25870 1.4526475       FALSE     2\n#&gt; 400 #00BA38 5.300000 20.19594 17.22703 23.16485 1.4757912       FALSE     2\n#&gt; 401 #619CFF 4.000000 21.70513 17.63528 25.77498 1.8679207       FALSE     2\n#&gt; 402 #619CFF 4.037975 21.69321 17.70716 25.67925 1.8294576       FALSE     2\n#&gt; 403 #619CFF 4.075949 21.68128 17.77834 25.58422 1.7913135       FALSE     2\n#&gt; 404 #619CFF 4.113924 21.66936 17.84879 25.48993 1.7535091       FALSE     2\n#&gt; 405 #619CFF 4.151899 21.65743 17.91844 25.39642 1.7160670       FALSE     2\n#&gt; 406 #619CFF 4.189873 21.64551 17.98726 25.30376 1.6790114       FALSE     2\n#&gt; 407 #619CFF 4.227848 21.63358 18.05517 25.21200 1.6423684       FALSE     2\n#&gt; 408 #619CFF 4.265823 21.62166 18.12213 25.12120 1.6061662       FALSE     2\n#&gt; 409 #619CFF 4.303797 21.60974 18.18805 25.03142 1.5704354       FALSE     2\n#&gt; 410 #619CFF 4.341772 21.59781 18.25288 24.94275 1.5352089       FALSE     2\n#&gt; 411 #619CFF 4.379747 21.58589 18.31653 24.85525 1.5005221       FALSE     2\n#&gt; 412 #619CFF 4.417722 21.57396 18.37892 24.76900 1.4664135       FALSE     2\n#&gt; 413 #619CFF 4.455696 21.56204 18.43997 24.68411 1.4329242       FALSE     2\n#&gt; 414 #619CFF 4.493671 21.55012 18.49956 24.60067 1.4000987       FALSE     2\n#&gt; 415 #619CFF 4.531646 21.53819 18.55761 24.51878 1.3679849       FALSE     2\n#&gt; 416 #619CFF 4.569620 21.52627 18.61399 24.43854 1.3366339       FALSE     2\n#&gt; 417 #619CFF 4.607595 21.51434 18.66859 24.36009 1.3061008       FALSE     2\n#&gt; 418 #619CFF 4.645570 21.50242 18.72129 24.28355 1.2764442       FALSE     2\n#&gt; 419 #619CFF 4.683544 21.49050 18.77193 24.20906 1.2477266       FALSE     2\n#&gt; 420 #619CFF 4.721519 21.47857 18.82039 24.13675 1.2200143       FALSE     2\n#&gt; 421 #619CFF 4.759494 21.46665 18.86650 24.06679 1.1933775       FALSE     2\n#&gt; 422 #619CFF 4.797468 21.45472 18.91011 23.99934 1.1678896       FALSE     2\n#&gt; 423 #619CFF 4.835443 21.44280 18.95105 23.93455 1.1436274       FALSE     2\n#&gt; 424 #619CFF 4.873418 21.43088 18.98914 23.87261 1.1206707       FALSE     2\n#&gt; 425 #619CFF 4.911392 21.41895 19.02422 23.81369 1.0991012       FALSE     2\n#&gt; 426 #619CFF 4.949367 21.40703 19.05608 23.75797 1.0790020       FALSE     2\n#&gt; 427 #619CFF 4.987342 21.39510 19.08457 23.70564 1.0604569       FALSE     2\n#&gt; 428 #619CFF 5.025316 21.38318 19.10948 23.65688 1.0435486       FALSE     2\n#&gt; 429 #619CFF 5.063291 21.37126 19.13066 23.61185 1.0283579       FALSE     2\n#&gt; 430 #619CFF 5.101266 21.35933 19.14792 23.57074 1.0149619       FALSE     2\n#&gt; 431 #619CFF 5.139241 21.34741 19.16112 23.53370 1.0034326       FALSE     2\n#&gt; 432 #619CFF 5.177215 21.33548 19.17010 23.50086 0.9938348       FALSE     2\n#&gt; 433 #619CFF 5.215190 21.32356 19.17476 23.47236 0.9862250       FALSE     2\n#&gt; 434 #619CFF 5.253165 21.31163 19.17498 23.44829 0.9806494       FALSE     2\n#&gt; 435 #619CFF 5.291139 21.29971 19.17070 23.42872 0.9771429       FALSE     2\n#&gt; 436 #619CFF 5.329114 21.28779 19.16186 23.41371 0.9757277       FALSE     2\n#&gt; 437 #619CFF 5.367089 21.27586 19.14844 23.40328 0.9764131       FALSE     2\n#&gt; 438 #619CFF 5.405063 21.26394 19.13046 23.39742 0.9791944       FALSE     2\n#&gt; 439 #619CFF 5.443038 21.25201 19.10794 23.39608 0.9840541       FALSE     2\n#&gt; 440 #619CFF 5.481013 21.24009 19.08097 23.39921 0.9909615       FALSE     2\n#&gt; 441 #619CFF 5.518987 21.22817 19.04963 23.40671 0.9998741       FALSE     2\n#&gt; 442 #619CFF 5.556962 21.21624 19.01403 23.41845 1.0107390       FALSE     2\n#&gt; 443 #619CFF 5.594937 21.20432 18.97432 23.43432 1.0234939       FALSE     2\n#&gt; 444 #619CFF 5.632911 21.19239 18.93064 23.45415 1.0380692       FALSE     2\n#&gt; 445 #619CFF 5.670886 21.18047 18.88315 23.47779 1.0543895       FALSE     2\n#&gt; 446 #619CFF 5.708861 21.16855 18.83204 23.50505 1.0723749       FALSE     2\n#&gt; 447 #619CFF 5.746835 21.15662 18.77748 23.53576 1.0919433       FALSE     2\n#&gt; 448 #619CFF 5.784810 21.14470 18.71965 23.56974 1.1130112       FALSE     2\n#&gt; 449 #619CFF 5.822785 21.13277 18.65874 23.60681 1.1354951       FALSE     2\n#&gt; 450 #619CFF 5.860759 21.12085 18.59492 23.64677 1.1593126       FALSE     2\n#&gt; 451 #619CFF 5.898734 21.10893 18.52838 23.68948 1.1843833       FALSE     2\n#&gt; 452 #619CFF 5.936709 21.09700 18.45927 23.73474 1.2106292       FALSE     2\n#&gt; 453 #619CFF 5.974684 21.08508 18.38776 23.78240 1.2379758       FALSE     2\n#&gt; 454 #619CFF 6.012658 21.07315 18.31401 23.83230 1.2663516       FALSE     2\n#&gt; 455 #619CFF 6.050633 21.06123 18.23817 23.88429 1.2956891       FALSE     2\n#&gt; 456 #619CFF 6.088608 21.04931 18.16036 23.93825 1.3259244       FALSE     2\n#&gt; 457 #619CFF 6.126582 21.03738 18.08074 23.99402 1.3569975       FALSE     2\n#&gt; 458 #619CFF 6.164557 21.02546 17.99941 24.05151 1.3888521       FALSE     2\n#&gt; 459 #619CFF 6.202532 21.01353 17.91649 24.11058 1.4214358       FALSE     2\n#&gt; 460 #619CFF 6.240506 21.00161 17.83209 24.17113 1.4546996       FALSE     2\n#&gt; 461 #619CFF 6.278481 20.98969 17.74631 24.23306 1.4885977       FALSE     2\n#&gt; 462 #619CFF 6.316456 20.97776 17.65924 24.29628 1.5230880       FALSE     2\n#&gt; 463 #619CFF 6.354430 20.96584 17.57096 24.36071 1.5581311       FALSE     2\n#&gt; 464 #619CFF 6.392405 20.95391 17.48156 24.42627 1.5936904       FALSE     2\n#&gt; 465 #619CFF 6.430380 20.94199 17.39111 24.49287 1.6297323       FALSE     2\n#&gt; 466 #619CFF 6.468354 20.93006 17.29967 24.56046 1.6662254       FALSE     2\n#&gt; 467 #619CFF 6.506329 20.91814 17.20732 24.62897 1.7031407       FALSE     2\n#&gt; 468 #619CFF 6.544304 20.90622 17.11410 24.69833 1.7404513       FALSE     2\n#&gt; 469 #619CFF 6.582278 20.89429 17.02007 24.76851 1.7781323       FALSE     2\n#&gt; 470 #619CFF 6.620253 20.88237 16.92529 24.83944 1.8161608       FALSE     2\n#&gt; 471 #619CFF 6.658228 20.87044 16.82980 24.91109 1.8545153       FALSE     2\n#&gt; 472 #619CFF 6.696203 20.85852 16.73364 24.98340 1.8931760       FALSE     2\n#&gt; 473 #619CFF 6.734177 20.84660 16.63686 25.05633 1.9321245       FALSE     2\n#&gt; 474 #619CFF 6.772152 20.83467 16.53948 25.12986 1.9713437       FALSE     2\n#&gt; 475 #619CFF 6.810127 20.82275 16.44155 25.20394 2.0108179       FALSE     2\n#&gt; 476 #619CFF 6.848101 20.81082 16.34310 25.27855 2.0505323       FALSE     2\n#&gt; 477 #619CFF 6.886076 20.79890 16.24415 25.35365 2.0904732       FALSE     2\n#&gt; 478 #619CFF 6.924051 20.78698 16.14474 25.42922 2.1306279       FALSE     2\n#&gt; 479 #619CFF 6.962025 20.77505 16.04488 25.50522 2.1709845       FALSE     2\n#&gt; 480 #619CFF 7.000000 20.76313 15.94461 25.58164 2.2115319       FALSE     2\n#&gt;     group   fill linewidth linetype weight alpha\n#&gt; 1       1 grey60         1        1      1   0.4\n#&gt; 2       1 grey60         1        1      1   0.4\n#&gt; 3       1 grey60         1        1      1   0.4\n#&gt; 4       1 grey60         1        1      1   0.4\n#&gt; 5       1 grey60         1        1      1   0.4\n#&gt; 6       1 grey60         1        1      1   0.4\n#&gt; 7       1 grey60         1        1      1   0.4\n#&gt; 8       1 grey60         1        1      1   0.4\n#&gt; 9       1 grey60         1        1      1   0.4\n#&gt; 10      1 grey60         1        1      1   0.4\n#&gt; 11      1 grey60         1        1      1   0.4\n#&gt; 12      1 grey60         1        1      1   0.4\n#&gt; 13      1 grey60         1        1      1   0.4\n#&gt; 14      1 grey60         1        1      1   0.4\n#&gt; 15      1 grey60         1        1      1   0.4\n#&gt; 16      1 grey60         1        1      1   0.4\n#&gt; 17      1 grey60         1        1      1   0.4\n#&gt; 18      1 grey60         1        1      1   0.4\n#&gt; 19      1 grey60         1        1      1   0.4\n#&gt; 20      1 grey60         1        1      1   0.4\n#&gt; 21      1 grey60         1        1      1   0.4\n#&gt; 22      1 grey60         1        1      1   0.4\n#&gt; 23      1 grey60         1        1      1   0.4\n#&gt; 24      1 grey60         1        1      1   0.4\n#&gt; 25      1 grey60         1        1      1   0.4\n#&gt; 26      1 grey60         1        1      1   0.4\n#&gt; 27      1 grey60         1        1      1   0.4\n#&gt; 28      1 grey60         1        1      1   0.4\n#&gt; 29      1 grey60         1        1      1   0.4\n#&gt; 30      1 grey60         1        1      1   0.4\n#&gt; 31      1 grey60         1        1      1   0.4\n#&gt; 32      1 grey60         1        1      1   0.4\n#&gt; 33      1 grey60         1        1      1   0.4\n#&gt; 34      1 grey60         1        1      1   0.4\n#&gt; 35      1 grey60         1        1      1   0.4\n#&gt; 36      1 grey60         1        1      1   0.4\n#&gt; 37      1 grey60         1        1      1   0.4\n#&gt; 38      1 grey60         1        1      1   0.4\n#&gt; 39      1 grey60         1        1      1   0.4\n#&gt; 40      1 grey60         1        1      1   0.4\n#&gt; 41      1 grey60         1        1      1   0.4\n#&gt; 42      1 grey60         1        1      1   0.4\n#&gt; 43      1 grey60         1        1      1   0.4\n#&gt; 44      1 grey60         1        1      1   0.4\n#&gt; 45      1 grey60         1        1      1   0.4\n#&gt; 46      1 grey60         1        1      1   0.4\n#&gt; 47      1 grey60         1        1      1   0.4\n#&gt; 48      1 grey60         1        1      1   0.4\n#&gt; 49      1 grey60         1        1      1   0.4\n#&gt; 50      1 grey60         1        1      1   0.4\n#&gt; 51      1 grey60         1        1      1   0.4\n#&gt; 52      1 grey60         1        1      1   0.4\n#&gt; 53      1 grey60         1        1      1   0.4\n#&gt; 54      1 grey60         1        1      1   0.4\n#&gt; 55      1 grey60         1        1      1   0.4\n#&gt; 56      1 grey60         1        1      1   0.4\n#&gt; 57      1 grey60         1        1      1   0.4\n#&gt; 58      1 grey60         1        1      1   0.4\n#&gt; 59      1 grey60         1        1      1   0.4\n#&gt; 60      1 grey60         1        1      1   0.4\n#&gt; 61      1 grey60         1        1      1   0.4\n#&gt; 62      1 grey60         1        1      1   0.4\n#&gt; 63      1 grey60         1        1      1   0.4\n#&gt; 64      1 grey60         1        1      1   0.4\n#&gt; 65      1 grey60         1        1      1   0.4\n#&gt; 66      1 grey60         1        1      1   0.4\n#&gt; 67      1 grey60         1        1      1   0.4\n#&gt; 68      1 grey60         1        1      1   0.4\n#&gt; 69      1 grey60         1        1      1   0.4\n#&gt; 70      1 grey60         1        1      1   0.4\n#&gt; 71      1 grey60         1        1      1   0.4\n#&gt; 72      1 grey60         1        1      1   0.4\n#&gt; 73      1 grey60         1        1      1   0.4\n#&gt; 74      1 grey60         1        1      1   0.4\n#&gt; 75      1 grey60         1        1      1   0.4\n#&gt; 76      1 grey60         1        1      1   0.4\n#&gt; 77      1 grey60         1        1      1   0.4\n#&gt; 78      1 grey60         1        1      1   0.4\n#&gt; 79      1 grey60         1        1      1   0.4\n#&gt; 80      1 grey60         1        1      1   0.4\n#&gt; 81      2 grey60         1        1      1   0.4\n#&gt; 82      2 grey60         1        1      1   0.4\n#&gt; 83      2 grey60         1        1      1   0.4\n#&gt; 84      2 grey60         1        1      1   0.4\n#&gt; 85      2 grey60         1        1      1   0.4\n#&gt; 86      2 grey60         1        1      1   0.4\n#&gt; 87      2 grey60         1        1      1   0.4\n#&gt; 88      2 grey60         1        1      1   0.4\n#&gt; 89      2 grey60         1        1      1   0.4\n#&gt; 90      2 grey60         1        1      1   0.4\n#&gt; 91      2 grey60         1        1      1   0.4\n#&gt; 92      2 grey60         1        1      1   0.4\n#&gt; 93      2 grey60         1        1      1   0.4\n#&gt; 94      2 grey60         1        1      1   0.4\n#&gt; 95      2 grey60         1        1      1   0.4\n#&gt; 96      2 grey60         1        1      1   0.4\n#&gt; 97      2 grey60         1        1      1   0.4\n#&gt; 98      2 grey60         1        1      1   0.4\n#&gt; 99      2 grey60         1        1      1   0.4\n#&gt; 100     2 grey60         1        1      1   0.4\n#&gt; 101     2 grey60         1        1      1   0.4\n#&gt; 102     2 grey60         1        1      1   0.4\n#&gt; 103     2 grey60         1        1      1   0.4\n#&gt; 104     2 grey60         1        1      1   0.4\n#&gt; 105     2 grey60         1        1      1   0.4\n#&gt; 106     2 grey60         1        1      1   0.4\n#&gt; 107     2 grey60         1        1      1   0.4\n#&gt; 108     2 grey60         1        1      1   0.4\n#&gt; 109     2 grey60         1        1      1   0.4\n#&gt; 110     2 grey60         1        1      1   0.4\n#&gt; 111     2 grey60         1        1      1   0.4\n#&gt; 112     2 grey60         1        1      1   0.4\n#&gt; 113     2 grey60         1        1      1   0.4\n#&gt; 114     2 grey60         1        1      1   0.4\n#&gt; 115     2 grey60         1        1      1   0.4\n#&gt; 116     2 grey60         1        1      1   0.4\n#&gt; 117     2 grey60         1        1      1   0.4\n#&gt; 118     2 grey60         1        1      1   0.4\n#&gt; 119     2 grey60         1        1      1   0.4\n#&gt; 120     2 grey60         1        1      1   0.4\n#&gt; 121     2 grey60         1        1      1   0.4\n#&gt; 122     2 grey60         1        1      1   0.4\n#&gt; 123     2 grey60         1        1      1   0.4\n#&gt; 124     2 grey60         1        1      1   0.4\n#&gt; 125     2 grey60         1        1      1   0.4\n#&gt; 126     2 grey60         1        1      1   0.4\n#&gt; 127     2 grey60         1        1      1   0.4\n#&gt; 128     2 grey60         1        1      1   0.4\n#&gt; 129     2 grey60         1        1      1   0.4\n#&gt; 130     2 grey60         1        1      1   0.4\n#&gt; 131     2 grey60         1        1      1   0.4\n#&gt; 132     2 grey60         1        1      1   0.4\n#&gt; 133     2 grey60         1        1      1   0.4\n#&gt; 134     2 grey60         1        1      1   0.4\n#&gt; 135     2 grey60         1        1      1   0.4\n#&gt; 136     2 grey60         1        1      1   0.4\n#&gt; 137     2 grey60         1        1      1   0.4\n#&gt; 138     2 grey60         1        1      1   0.4\n#&gt; 139     2 grey60         1        1      1   0.4\n#&gt; 140     2 grey60         1        1      1   0.4\n#&gt; 141     2 grey60         1        1      1   0.4\n#&gt; 142     2 grey60         1        1      1   0.4\n#&gt; 143     2 grey60         1        1      1   0.4\n#&gt; 144     2 grey60         1        1      1   0.4\n#&gt; 145     2 grey60         1        1      1   0.4\n#&gt; 146     2 grey60         1        1      1   0.4\n#&gt; 147     2 grey60         1        1      1   0.4\n#&gt; 148     2 grey60         1        1      1   0.4\n#&gt; 149     2 grey60         1        1      1   0.4\n#&gt; 150     2 grey60         1        1      1   0.4\n#&gt; 151     2 grey60         1        1      1   0.4\n#&gt; 152     2 grey60         1        1      1   0.4\n#&gt; 153     2 grey60         1        1      1   0.4\n#&gt; 154     2 grey60         1        1      1   0.4\n#&gt; 155     2 grey60         1        1      1   0.4\n#&gt; 156     2 grey60         1        1      1   0.4\n#&gt; 157     2 grey60         1        1      1   0.4\n#&gt; 158     2 grey60         1        1      1   0.4\n#&gt; 159     2 grey60         1        1      1   0.4\n#&gt; 160     2 grey60         1        1      1   0.4\n#&gt; 161     3 grey60         1        1      1   0.4\n#&gt; 162     3 grey60         1        1      1   0.4\n#&gt; 163     3 grey60         1        1      1   0.4\n#&gt; 164     3 grey60         1        1      1   0.4\n#&gt; 165     3 grey60         1        1      1   0.4\n#&gt; 166     3 grey60         1        1      1   0.4\n#&gt; 167     3 grey60         1        1      1   0.4\n#&gt; 168     3 grey60         1        1      1   0.4\n#&gt; 169     3 grey60         1        1      1   0.4\n#&gt; 170     3 grey60         1        1      1   0.4\n#&gt; 171     3 grey60         1        1      1   0.4\n#&gt; 172     3 grey60         1        1      1   0.4\n#&gt; 173     3 grey60         1        1      1   0.4\n#&gt; 174     3 grey60         1        1      1   0.4\n#&gt; 175     3 grey60         1        1      1   0.4\n#&gt; 176     3 grey60         1        1      1   0.4\n#&gt; 177     3 grey60         1        1      1   0.4\n#&gt; 178     3 grey60         1        1      1   0.4\n#&gt; 179     3 grey60         1        1      1   0.4\n#&gt; 180     3 grey60         1        1      1   0.4\n#&gt; 181     3 grey60         1        1      1   0.4\n#&gt; 182     3 grey60         1        1      1   0.4\n#&gt; 183     3 grey60         1        1      1   0.4\n#&gt; 184     3 grey60         1        1      1   0.4\n#&gt; 185     3 grey60         1        1      1   0.4\n#&gt; 186     3 grey60         1        1      1   0.4\n#&gt; 187     3 grey60         1        1      1   0.4\n#&gt; 188     3 grey60         1        1      1   0.4\n#&gt; 189     3 grey60         1        1      1   0.4\n#&gt; 190     3 grey60         1        1      1   0.4\n#&gt; 191     3 grey60         1        1      1   0.4\n#&gt; 192     3 grey60         1        1      1   0.4\n#&gt; 193     3 grey60         1        1      1   0.4\n#&gt; 194     3 grey60         1        1      1   0.4\n#&gt; 195     3 grey60         1        1      1   0.4\n#&gt; 196     3 grey60         1        1      1   0.4\n#&gt; 197     3 grey60         1        1      1   0.4\n#&gt; 198     3 grey60         1        1      1   0.4\n#&gt; 199     3 grey60         1        1      1   0.4\n#&gt; 200     3 grey60         1        1      1   0.4\n#&gt; 201     3 grey60         1        1      1   0.4\n#&gt; 202     3 grey60         1        1      1   0.4\n#&gt; 203     3 grey60         1        1      1   0.4\n#&gt; 204     3 grey60         1        1      1   0.4\n#&gt; 205     3 grey60         1        1      1   0.4\n#&gt; 206     3 grey60         1        1      1   0.4\n#&gt; 207     3 grey60         1        1      1   0.4\n#&gt; 208     3 grey60         1        1      1   0.4\n#&gt; 209     3 grey60         1        1      1   0.4\n#&gt; 210     3 grey60         1        1      1   0.4\n#&gt; 211     3 grey60         1        1      1   0.4\n#&gt; 212     3 grey60         1        1      1   0.4\n#&gt; 213     3 grey60         1        1      1   0.4\n#&gt; 214     3 grey60         1        1      1   0.4\n#&gt; 215     3 grey60         1        1      1   0.4\n#&gt; 216     3 grey60         1        1      1   0.4\n#&gt; 217     3 grey60         1        1      1   0.4\n#&gt; 218     3 grey60         1        1      1   0.4\n#&gt; 219     3 grey60         1        1      1   0.4\n#&gt; 220     3 grey60         1        1      1   0.4\n#&gt; 221     3 grey60         1        1      1   0.4\n#&gt; 222     3 grey60         1        1      1   0.4\n#&gt; 223     3 grey60         1        1      1   0.4\n#&gt; 224     3 grey60         1        1      1   0.4\n#&gt; 225     3 grey60         1        1      1   0.4\n#&gt; 226     3 grey60         1        1      1   0.4\n#&gt; 227     3 grey60         1        1      1   0.4\n#&gt; 228     3 grey60         1        1      1   0.4\n#&gt; 229     3 grey60         1        1      1   0.4\n#&gt; 230     3 grey60         1        1      1   0.4\n#&gt; 231     3 grey60         1        1      1   0.4\n#&gt; 232     3 grey60         1        1      1   0.4\n#&gt; 233     3 grey60         1        1      1   0.4\n#&gt; 234     3 grey60         1        1      1   0.4\n#&gt; 235     3 grey60         1        1      1   0.4\n#&gt; 236     3 grey60         1        1      1   0.4\n#&gt; 237     3 grey60         1        1      1   0.4\n#&gt; 238     3 grey60         1        1      1   0.4\n#&gt; 239     3 grey60         1        1      1   0.4\n#&gt; 240     3 grey60         1        1      1   0.4\n#&gt; 241     1 grey60         1        1      1   0.4\n#&gt; 242     1 grey60         1        1      1   0.4\n#&gt; 243     1 grey60         1        1      1   0.4\n#&gt; 244     1 grey60         1        1      1   0.4\n#&gt; 245     1 grey60         1        1      1   0.4\n#&gt; 246     1 grey60         1        1      1   0.4\n#&gt; 247     1 grey60         1        1      1   0.4\n#&gt; 248     1 grey60         1        1      1   0.4\n#&gt; 249     1 grey60         1        1      1   0.4\n#&gt; 250     1 grey60         1        1      1   0.4\n#&gt; 251     1 grey60         1        1      1   0.4\n#&gt; 252     1 grey60         1        1      1   0.4\n#&gt; 253     1 grey60         1        1      1   0.4\n#&gt; 254     1 grey60         1        1      1   0.4\n#&gt; 255     1 grey60         1        1      1   0.4\n#&gt; 256     1 grey60         1        1      1   0.4\n#&gt; 257     1 grey60         1        1      1   0.4\n#&gt; 258     1 grey60         1        1      1   0.4\n#&gt; 259     1 grey60         1        1      1   0.4\n#&gt; 260     1 grey60         1        1      1   0.4\n#&gt; 261     1 grey60         1        1      1   0.4\n#&gt; 262     1 grey60         1        1      1   0.4\n#&gt; 263     1 grey60         1        1      1   0.4\n#&gt; 264     1 grey60         1        1      1   0.4\n#&gt; 265     1 grey60         1        1      1   0.4\n#&gt; 266     1 grey60         1        1      1   0.4\n#&gt; 267     1 grey60         1        1      1   0.4\n#&gt; 268     1 grey60         1        1      1   0.4\n#&gt; 269     1 grey60         1        1      1   0.4\n#&gt; 270     1 grey60         1        1      1   0.4\n#&gt; 271     1 grey60         1        1      1   0.4\n#&gt; 272     1 grey60         1        1      1   0.4\n#&gt; 273     1 grey60         1        1      1   0.4\n#&gt; 274     1 grey60         1        1      1   0.4\n#&gt; 275     1 grey60         1        1      1   0.4\n#&gt; 276     1 grey60         1        1      1   0.4\n#&gt; 277     1 grey60         1        1      1   0.4\n#&gt; 278     1 grey60         1        1      1   0.4\n#&gt; 279     1 grey60         1        1      1   0.4\n#&gt; 280     1 grey60         1        1      1   0.4\n#&gt; 281     1 grey60         1        1      1   0.4\n#&gt; 282     1 grey60         1        1      1   0.4\n#&gt; 283     1 grey60         1        1      1   0.4\n#&gt; 284     1 grey60         1        1      1   0.4\n#&gt; 285     1 grey60         1        1      1   0.4\n#&gt; 286     1 grey60         1        1      1   0.4\n#&gt; 287     1 grey60         1        1      1   0.4\n#&gt; 288     1 grey60         1        1      1   0.4\n#&gt; 289     1 grey60         1        1      1   0.4\n#&gt; 290     1 grey60         1        1      1   0.4\n#&gt; 291     1 grey60         1        1      1   0.4\n#&gt; 292     1 grey60         1        1      1   0.4\n#&gt; 293     1 grey60         1        1      1   0.4\n#&gt; 294     1 grey60         1        1      1   0.4\n#&gt; 295     1 grey60         1        1      1   0.4\n#&gt; 296     1 grey60         1        1      1   0.4\n#&gt; 297     1 grey60         1        1      1   0.4\n#&gt; 298     1 grey60         1        1      1   0.4\n#&gt; 299     1 grey60         1        1      1   0.4\n#&gt; 300     1 grey60         1        1      1   0.4\n#&gt; 301     1 grey60         1        1      1   0.4\n#&gt; 302     1 grey60         1        1      1   0.4\n#&gt; 303     1 grey60         1        1      1   0.4\n#&gt; 304     1 grey60         1        1      1   0.4\n#&gt; 305     1 grey60         1        1      1   0.4\n#&gt; 306     1 grey60         1        1      1   0.4\n#&gt; 307     1 grey60         1        1      1   0.4\n#&gt; 308     1 grey60         1        1      1   0.4\n#&gt; 309     1 grey60         1        1      1   0.4\n#&gt; 310     1 grey60         1        1      1   0.4\n#&gt; 311     1 grey60         1        1      1   0.4\n#&gt; 312     1 grey60         1        1      1   0.4\n#&gt; 313     1 grey60         1        1      1   0.4\n#&gt; 314     1 grey60         1        1      1   0.4\n#&gt; 315     1 grey60         1        1      1   0.4\n#&gt; 316     1 grey60         1        1      1   0.4\n#&gt; 317     1 grey60         1        1      1   0.4\n#&gt; 318     1 grey60         1        1      1   0.4\n#&gt; 319     1 grey60         1        1      1   0.4\n#&gt; 320     1 grey60         1        1      1   0.4\n#&gt; 321     2 grey60         1        1      1   0.4\n#&gt; 322     2 grey60         1        1      1   0.4\n#&gt; 323     2 grey60         1        1      1   0.4\n#&gt; 324     2 grey60         1        1      1   0.4\n#&gt; 325     2 grey60         1        1      1   0.4\n#&gt; 326     2 grey60         1        1      1   0.4\n#&gt; 327     2 grey60         1        1      1   0.4\n#&gt; 328     2 grey60         1        1      1   0.4\n#&gt; 329     2 grey60         1        1      1   0.4\n#&gt; 330     2 grey60         1        1      1   0.4\n#&gt; 331     2 grey60         1        1      1   0.4\n#&gt; 332     2 grey60         1        1      1   0.4\n#&gt; 333     2 grey60         1        1      1   0.4\n#&gt; 334     2 grey60         1        1      1   0.4\n#&gt; 335     2 grey60         1        1      1   0.4\n#&gt; 336     2 grey60         1        1      1   0.4\n#&gt; 337     2 grey60         1        1      1   0.4\n#&gt; 338     2 grey60         1        1      1   0.4\n#&gt; 339     2 grey60         1        1      1   0.4\n#&gt; 340     2 grey60         1        1      1   0.4\n#&gt; 341     2 grey60         1        1      1   0.4\n#&gt; 342     2 grey60         1        1      1   0.4\n#&gt; 343     2 grey60         1        1      1   0.4\n#&gt; 344     2 grey60         1        1      1   0.4\n#&gt; 345     2 grey60         1        1      1   0.4\n#&gt; 346     2 grey60         1        1      1   0.4\n#&gt; 347     2 grey60         1        1      1   0.4\n#&gt; 348     2 grey60         1        1      1   0.4\n#&gt; 349     2 grey60         1        1      1   0.4\n#&gt; 350     2 grey60         1        1      1   0.4\n#&gt; 351     2 grey60         1        1      1   0.4\n#&gt; 352     2 grey60         1        1      1   0.4\n#&gt; 353     2 grey60         1        1      1   0.4\n#&gt; 354     2 grey60         1        1      1   0.4\n#&gt; 355     2 grey60         1        1      1   0.4\n#&gt; 356     2 grey60         1        1      1   0.4\n#&gt; 357     2 grey60         1        1      1   0.4\n#&gt; 358     2 grey60         1        1      1   0.4\n#&gt; 359     2 grey60         1        1      1   0.4\n#&gt; 360     2 grey60         1        1      1   0.4\n#&gt; 361     2 grey60         1        1      1   0.4\n#&gt; 362     2 grey60         1        1      1   0.4\n#&gt; 363     2 grey60         1        1      1   0.4\n#&gt; 364     2 grey60         1        1      1   0.4\n#&gt; 365     2 grey60         1        1      1   0.4\n#&gt; 366     2 grey60         1        1      1   0.4\n#&gt; 367     2 grey60         1        1      1   0.4\n#&gt; 368     2 grey60         1        1      1   0.4\n#&gt; 369     2 grey60         1        1      1   0.4\n#&gt; 370     2 grey60         1        1      1   0.4\n#&gt; 371     2 grey60         1        1      1   0.4\n#&gt; 372     2 grey60         1        1      1   0.4\n#&gt; 373     2 grey60         1        1      1   0.4\n#&gt; 374     2 grey60         1        1      1   0.4\n#&gt; 375     2 grey60         1        1      1   0.4\n#&gt; 376     2 grey60         1        1      1   0.4\n#&gt; 377     2 grey60         1        1      1   0.4\n#&gt; 378     2 grey60         1        1      1   0.4\n#&gt; 379     2 grey60         1        1      1   0.4\n#&gt; 380     2 grey60         1        1      1   0.4\n#&gt; 381     2 grey60         1        1      1   0.4\n#&gt; 382     2 grey60         1        1      1   0.4\n#&gt; 383     2 grey60         1        1      1   0.4\n#&gt; 384     2 grey60         1        1      1   0.4\n#&gt; 385     2 grey60         1        1      1   0.4\n#&gt; 386     2 grey60         1        1      1   0.4\n#&gt; 387     2 grey60         1        1      1   0.4\n#&gt; 388     2 grey60         1        1      1   0.4\n#&gt; 389     2 grey60         1        1      1   0.4\n#&gt; 390     2 grey60         1        1      1   0.4\n#&gt; 391     2 grey60         1        1      1   0.4\n#&gt; 392     2 grey60         1        1      1   0.4\n#&gt; 393     2 grey60         1        1      1   0.4\n#&gt; 394     2 grey60         1        1      1   0.4\n#&gt; 395     2 grey60         1        1      1   0.4\n#&gt; 396     2 grey60         1        1      1   0.4\n#&gt; 397     2 grey60         1        1      1   0.4\n#&gt; 398     2 grey60         1        1      1   0.4\n#&gt; 399     2 grey60         1        1      1   0.4\n#&gt; 400     2 grey60         1        1      1   0.4\n#&gt; 401     3 grey60         1        1      1   0.4\n#&gt; 402     3 grey60         1        1      1   0.4\n#&gt; 403     3 grey60         1        1      1   0.4\n#&gt; 404     3 grey60         1        1      1   0.4\n#&gt; 405     3 grey60         1        1      1   0.4\n#&gt; 406     3 grey60         1        1      1   0.4\n#&gt; 407     3 grey60         1        1      1   0.4\n#&gt; 408     3 grey60         1        1      1   0.4\n#&gt; 409     3 grey60         1        1      1   0.4\n#&gt; 410     3 grey60         1        1      1   0.4\n#&gt; 411     3 grey60         1        1      1   0.4\n#&gt; 412     3 grey60         1        1      1   0.4\n#&gt; 413     3 grey60         1        1      1   0.4\n#&gt; 414     3 grey60         1        1      1   0.4\n#&gt; 415     3 grey60         1        1      1   0.4\n#&gt; 416     3 grey60         1        1      1   0.4\n#&gt; 417     3 grey60         1        1      1   0.4\n#&gt; 418     3 grey60         1        1      1   0.4\n#&gt; 419     3 grey60         1        1      1   0.4\n#&gt; 420     3 grey60         1        1      1   0.4\n#&gt; 421     3 grey60         1        1      1   0.4\n#&gt; 422     3 grey60         1        1      1   0.4\n#&gt; 423     3 grey60         1        1      1   0.4\n#&gt; 424     3 grey60         1        1      1   0.4\n#&gt; 425     3 grey60         1        1      1   0.4\n#&gt; 426     3 grey60         1        1      1   0.4\n#&gt; 427     3 grey60         1        1      1   0.4\n#&gt; 428     3 grey60         1        1      1   0.4\n#&gt; 429     3 grey60         1        1      1   0.4\n#&gt; 430     3 grey60         1        1      1   0.4\n#&gt; 431     3 grey60         1        1      1   0.4\n#&gt; 432     3 grey60         1        1      1   0.4\n#&gt; 433     3 grey60         1        1      1   0.4\n#&gt; 434     3 grey60         1        1      1   0.4\n#&gt; 435     3 grey60         1        1      1   0.4\n#&gt; 436     3 grey60         1        1      1   0.4\n#&gt; 437     3 grey60         1        1      1   0.4\n#&gt; 438     3 grey60         1        1      1   0.4\n#&gt; 439     3 grey60         1        1      1   0.4\n#&gt; 440     3 grey60         1        1      1   0.4\n#&gt; 441     3 grey60         1        1      1   0.4\n#&gt; 442     3 grey60         1        1      1   0.4\n#&gt; 443     3 grey60         1        1      1   0.4\n#&gt; 444     3 grey60         1        1      1   0.4\n#&gt; 445     3 grey60         1        1      1   0.4\n#&gt; 446     3 grey60         1        1      1   0.4\n#&gt; 447     3 grey60         1        1      1   0.4\n#&gt; 448     3 grey60         1        1      1   0.4\n#&gt; 449     3 grey60         1        1      1   0.4\n#&gt; 450     3 grey60         1        1      1   0.4\n#&gt; 451     3 grey60         1        1      1   0.4\n#&gt; 452     3 grey60         1        1      1   0.4\n#&gt; 453     3 grey60         1        1      1   0.4\n#&gt; 454     3 grey60         1        1      1   0.4\n#&gt; 455     3 grey60         1        1      1   0.4\n#&gt; 456     3 grey60         1        1      1   0.4\n#&gt; 457     3 grey60         1        1      1   0.4\n#&gt; 458     3 grey60         1        1      1   0.4\n#&gt; 459     3 grey60         1        1      1   0.4\n#&gt; 460     3 grey60         1        1      1   0.4\n#&gt; 461     3 grey60         1        1      1   0.4\n#&gt; 462     3 grey60         1        1      1   0.4\n#&gt; 463     3 grey60         1        1      1   0.4\n#&gt; 464     3 grey60         1        1      1   0.4\n#&gt; 465     3 grey60         1        1      1   0.4\n#&gt; 466     3 grey60         1        1      1   0.4\n#&gt; 467     3 grey60         1        1      1   0.4\n#&gt; 468     3 grey60         1        1      1   0.4\n#&gt; 469     3 grey60         1        1      1   0.4\n#&gt; 470     3 grey60         1        1      1   0.4\n#&gt; 471     3 grey60         1        1      1   0.4\n#&gt; 472     3 grey60         1        1      1   0.4\n#&gt; 473     3 grey60         1        1      1   0.4\n#&gt; 474     3 grey60         1        1      1   0.4\n#&gt; 475     3 grey60         1        1      1   0.4\n#&gt; 476     3 grey60         1        1      1   0.4\n#&gt; 477     3 grey60         1        1      1   0.4\n#&gt; 478     3 grey60         1        1      1   0.4\n#&gt; 479     3 grey60         1        1      1   0.4\n#&gt; 480     3 grey60         1        1      1   0.4\np_built $layout\n#&gt; &lt;ggproto object: Class Layout, gg&gt;\n#&gt;     coord: &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n#&gt;         aspect: function\n#&gt;         backtransform_range: function\n#&gt;         clip: on\n#&gt;         default: TRUE\n#&gt;         distance: function\n#&gt;         expand: TRUE\n#&gt;         is_free: function\n#&gt;         is_linear: function\n#&gt;         labels: function\n#&gt;         limits: list\n#&gt;         modify_scales: function\n#&gt;         range: function\n#&gt;         render_axis_h: function\n#&gt;         render_axis_v: function\n#&gt;         render_bg: function\n#&gt;         render_fg: function\n#&gt;         setup_data: function\n#&gt;         setup_layout: function\n#&gt;         setup_panel_guides: function\n#&gt;         setup_panel_params: function\n#&gt;         setup_params: function\n#&gt;         train_panel_guides: function\n#&gt;         transform: function\n#&gt;         super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n#&gt;     coord_params: list\n#&gt;     facet: &lt;ggproto object: Class FacetWrap, Facet, gg&gt;\n#&gt;         compute_layout: function\n#&gt;         draw_back: function\n#&gt;         draw_front: function\n#&gt;         draw_labels: function\n#&gt;         draw_panels: function\n#&gt;         finish_data: function\n#&gt;         init_scales: function\n#&gt;         map_data: function\n#&gt;         params: list\n#&gt;         setup_data: function\n#&gt;         setup_params: function\n#&gt;         shrink: TRUE\n#&gt;         train_scales: function\n#&gt;         vars: function\n#&gt;         super:  &lt;ggproto object: Class FacetWrap, Facet, gg&gt;\n#&gt;     facet_params: list\n#&gt;     finish_data: function\n#&gt;     get_scales: function\n#&gt;     layout: data.frame\n#&gt;     map_position: function\n#&gt;     panel_params: list\n#&gt;     panel_scales_x: list\n#&gt;     panel_scales_y: list\n#&gt;     render: function\n#&gt;     render_labels: function\n#&gt;     reset_scales: function\n#&gt;     resolve_label: function\n#&gt;     setup: function\n#&gt;     setup_panel_guides: function\n#&gt;     setup_panel_params: function\n#&gt;     train_position: function\n#&gt;     super:  &lt;ggproto object: Class Layout, gg&gt;\np_built $plot\n\n\n\n\n\n\nCode\np_gtable &lt;- ggplot_gtable(p_built)\np_gtable\n#&gt; TableGrob (17 x 17) \"layout\": 25 grobs\n#&gt;     z         cells             name\n#&gt; 1   0 ( 1-17, 1-17)       background\n#&gt; 2   1 (10-10, 7- 7)        panel-1-1\n#&gt; 3   1 (10-10,11-11)        panel-2-1\n#&gt; 4   3 ( 8- 8, 7- 7)       axis-t-1-1\n#&gt; 5   3 ( 8- 8,11-11)       axis-t-2-1\n#&gt; 6   3 (11-11, 7- 7)       axis-b-1-1\n#&gt; 7   3 (11-11,11-11)       axis-b-2-1\n#&gt; 8   3 (10-10,10-10)       axis-l-1-2\n#&gt; 9   3 (10-10, 6- 6)       axis-l-1-1\n#&gt; 10  3 (10-10,12-12)       axis-r-1-2\n#&gt; 11  3 (10-10, 8- 8)       axis-r-1-1\n#&gt; 12  2 ( 9- 9, 7- 7)      strip-t-1-1\n#&gt; 13  2 ( 9- 9,11-11)      strip-t-2-1\n#&gt; 14  4 ( 7- 7, 7-11)           xlab-t\n#&gt; 15  5 (12-12, 7-11)           xlab-b\n#&gt; 16  6 (10-10, 5- 5)           ylab-l\n#&gt; 17  7 (10-10,13-13)           ylab-r\n#&gt; 18  8 (10-10,15-15)  guide-box-right\n#&gt; 19  9 (10-10, 3- 3)   guide-box-left\n#&gt; 20 10 (14-14, 7-11) guide-box-bottom\n#&gt; 21 11 ( 5- 5, 7-11)    guide-box-top\n#&gt; 22 12 (10-10, 7-11) guide-box-inside\n#&gt; 23 13 ( 4- 4, 7-11)         subtitle\n#&gt; 24 14 ( 3- 3, 7-11)            title\n#&gt; 25 15 (15-15, 7-11)          caption\n#&gt;                                               grob\n#&gt; 1                rect[plot.background..rect.12937]\n#&gt; 2                       gTree[panel-1.gTree.12817]\n#&gt; 3                       gTree[panel-2.gTree.12832]\n#&gt; 4                                   zeroGrob[NULL]\n#&gt; 5                                   zeroGrob[NULL]\n#&gt; 6            absoluteGrob[GRID.absoluteGrob.12836]\n#&gt; 7            absoluteGrob[GRID.absoluteGrob.12836]\n#&gt; 8                                   zeroGrob[NULL]\n#&gt; 9            absoluteGrob[GRID.absoluteGrob.12844]\n#&gt; 10                                  zeroGrob[NULL]\n#&gt; 11                                  zeroGrob[NULL]\n#&gt; 12                                   gtable[strip]\n#&gt; 13                                   gtable[strip]\n#&gt; 14                                  zeroGrob[NULL]\n#&gt; 15 titleGrob[axis.title.x.bottom..titleGrob.12899]\n#&gt; 16   titleGrob[axis.title.y.left..titleGrob.12902]\n#&gt; 17                                  zeroGrob[NULL]\n#&gt; 18                               gtable[guide-box]\n#&gt; 19                                  zeroGrob[NULL]\n#&gt; 20                                  zeroGrob[NULL]\n#&gt; 21                                  zeroGrob[NULL]\n#&gt; 22                                  zeroGrob[NULL]\n#&gt; 23         zeroGrob[plot.subtitle..zeroGrob.12934]\n#&gt; 24          titleGrob[plot.title..titleGrob.12933]\n#&gt; 25          zeroGrob[plot.caption..zeroGrob.12935]\n\n\n\nCodegrid::grid.newpage()\ngrid::grid.draw(p_gtable)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_graphics.html#ggproto对象",
    "href": "ggplot2_graphics.html#ggproto对象",
    "title": "5  ggplot2 Graphics",
    "section": "\n5.12 ggproto对象\n",
    "text": "5.12 ggproto对象\n\n\nCodeNewObject &lt;- ggproto(\n  `_class` = NULL,     # 类\n  `_inherits` = NULL   # 继承\n)\nNewObject \n#&gt; &lt;ggproto object: Class gg&gt;\n#&gt;     _inherits: NULL\n\n\n创建新类，子类继承",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ggplot2 Graphics</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html",
    "href": "ggplot2_extensions.html",
    "title": "\n6  ggplot2 extensions\n",
    "section": "",
    "text": "6.1 ggsci\nCodelibrary(ggsci)\nlancet\njco\nnejm\ngsea",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#ggpubr",
    "href": "ggplot2_extensions.html#ggpubr",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.2 ggpubr",
    "text": "6.2 ggpubr\nggplot2 with Publication Ready Graphics in R\nhttps://rpkgs.datanovia.com/ggpubr/\nhttps://www.datanovia.com/en/blog/tag/ggpubr/\n\n6.2.1 ggboxplot\n\nCodelibrary(ggpubr)\ndata(\"ToothGrowth\")\ndf &lt;- ToothGrowth\np &lt;- ggboxplot(data = df,\n               x = \"dose\",\n               y = \"len\",\n               color = \"dose\",\n               palette = \"gsea\",\n               \n               add = \"jitter\",\n               shape =\"dose\",\n               bxp.errorbar = TRUE,\n               bxp.errorbar.width = 0.1,\n               )\np\n\n\n\n\n\n\nCodemy_compare &lt;- list(c(\"0.5\",\"1\"),c(\"1\",\"2\"),c(\"0.5\",\"2\"))\np+stat_compare_means(comparisons = my_compare,method = \"t.test\")+\n    stat_compare_means(label.y = 50)  # 总体p值\n\n\n\n\n\n\n\n\n6.2.2 ggviolin\n\nCodeggviolin(data = df,\n               x = \"dose\",\n               y = \"len\",\n               fill = \"dose\",\n               palette = \"gsea\",\n               \n               add = \"boxplot\",\n               add.params = list(fill=\"white\"),\n               )+\n    stat_compare_means(comparisons = my_compare,\n                       label = \"p.signif\",\n                       method = \"t.test\")+\n    stat_compare_means(label.y = 50)  # 总体p值\n\n\n\n\n\n\n\n\n6.2.3 ggbarplot\n\nCodeggbarplot(\n    data = df,\n    x = \"dose\",\n    y = \"len\",\n    fill = \"supp\",\n    color = \"black\",\n\n    palette = \"lancet\",\n    add = c(\"mean_se\"),\n    #  mean_sd, mean_ci\n    \n    error.plot = \"errorbar\",\n    # upper_errorbar,\"lower_errorbar\",pointrange,\"linerange\", \"crossbar\",\n  \n    label = TRUE,\n    lab.pos = \"in\",\n    position = position_dodge(),\n    orientation = \"vertical\",\n    order = c(\"0.5\", \"2\", \"1\"),\n)\n\n\n\n\n\n\n\n\n6.2.4 Grouped bar plots + significance\nhttps://www.datanovia.com/en/blog/how-to-add-p-values-onto-a-grouped-ggplot-using-the-ggpubr-r-package/\n\nCodeToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)\n# Comparisons against reference\nstat.test &lt;- compare_means(\n  len ~ dose, data = ToothGrowth, group.by = \"supp\",\n  method = \"t.test\", ref.group = \"0.5\"\n)\nstat.test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsupp\n.y.\ngroup1\ngroup2\np\np.adj\np.format\np.signif\nmethod\n\n\n\nVC\nlen\n0.5\n1\n7.00e-07\n2.0e-06\n6.8e-07\n****\nT-test\n\n\nVC\nlen\n0.5\n2\n0.00e+00\n2.0e-07\n4.7e-08\n****\nT-test\n\n\nOJ\nlen\n0.5\n1\n8.78e-05\n8.8e-05\n8.8e-05\n****\nT-test\n\n\nOJ\nlen\n0.5\n2\n1.30e-06\n2.6e-06\n1.3e-06\n****\nT-test\n\n\n\n\n\nCodebp &lt;- ggbarplot(ToothGrowth, x = \"supp\", y = \"len\",\n                fill = \"dose\", palette = \"jco\",\n                add = \"mean_sd\", add.params = list(group = \"dose\"),\n                position = position_dodge(0.8))\nbp\n\n\n\n\n\n\nCodebp + stat_pvalue_manual(\n  stat.test, x = \"supp\", y.position = 33,\n  label = \"p={p.format}\",\n  position = position_dodge(0.8)\n)\n\n\n\n\n\n\n\n\n6.2.4.1 分组并列，组内组间显著性p值\n\nCodelibrary(ggpubr)\nlibrary(rstatix)\ndf &lt;- ToothGrowth\ndf$dose &lt;- as.factor(df$dose)\n\n\n\nbp &lt;- ggbarplot(\n    df,\n    x = \"dose\",\n    y = \"len\",\n    add = \"mean_sd\",\n    color = \"supp\",\n    palette = c(\"#00AFBB\", \"#E7B800\"),\n    position = position_dodge(0.8)\n)\n\n\n# 统计检验\nstat.test &lt;- df %&gt;%\n    group_by(dose) %&gt;%\n    t_test(len ~ supp) %&gt;%\n    adjust_pvalue(method = \"bonferroni\") %&gt;%\n    add_significance(\"p.adj\")\nstat.test &lt;- stat.test %&gt;%\n    add_xy_position(fun = \"mean_sd\", x = \"dose\", dodge = 0.8)\n\n\nstat.test2 &lt;- df %&gt;%\n    t_test(len ~ dose, p.adjust.method = \"bonferroni\")\nstat.test2 &lt;- stat.test2 %&gt;%\n    add_xy_position(x = \"dose\")\n\npwc &lt;- df %&gt;%\n    group_by(supp) %&gt;%\n    t_test(len ~ dose, p.adjust.method = \"bonferroni\")\npwc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsupp\n.y.\ngroup1\ngroup2\nn1\nn2\nstatistic\ndf\np\np.adj\np.adj.signif\n\n\n\nOJ\nlen\n0.5\n1\n10\n10\n-5.048635\n17.69835\n8.78e-05\n2.63e-04\n***\n\n\nOJ\nlen\n0.5\n2\n10\n10\n-7.817021\n14.66780\n1.30e-06\n4.00e-06\n****\n\n\nOJ\nlen\n1\n2\n10\n10\n-2.247761\n15.84238\n3.90e-02\n1.18e-01\nns\n\n\nVC\nlen\n0.5\n1\n10\n10\n-7.463430\n17.86244\n7.00e-07\n2.00e-06\n****\n\n\nVC\nlen\n0.5\n2\n10\n10\n-10.387795\n14.32712\n0.00e+00\n1.00e-07\n****\n\n\nVC\nlen\n1\n2\n10\n10\n-5.469814\n13.59996\n9.16e-05\n2.75e-04\n***\n\n\n\n\n\nCodepwc &lt;- pwc %&gt;%\n    add_xy_position(\n        x = \"dose\",\n        fun = \"mean_sd\",\n        group = \"supp\",\n        dodge = 0.8\n    )\n\n# 组间组内复合\n\n\nbp +\n    stat_pvalue_manual(stat.test,  label = \"p.adj.signif\", tip.length = 0.01) +\n    stat_pvalue_manual(\n        stat.test2,\n        label = \"p\",\n        tip.length = 0.02,\n        step.increase = 0.05\n    ) +\n    scale_y_continuous(expand = expansion(mult = c(0.05, 0.1))) +\n    stat_pvalue_manual(\n        pwc,\n        color = \"supp\",\n        step.group.by = \"supp\",\n        tip.length = 0,\n        step.increase = 0.1\n    )\n\n\n\n\n\n\n\n\n6.2.5 ggdotchart Cleveland’s Dot Plots\n\nCode# 滑珠图\nmtcars |&gt; rownames_to_column(var = \"name\") |&gt;\n    mutate(\n        cyl=factor(cyl)\n    ) |&gt; \n    ggdotchart(\n        x = \"name\",\n        y = \"mpg\",\n        color = \"cyl\",\n        palette = \"jco\",\n\n        sorting = \"ascending\",\n        add = \"segments\",\n        ggtheme = theme_pubr()\n    ) |\n#克利夫兰点图\nmtcars |&gt; rownames_to_column(var = \"name\") |&gt;\n    mutate(\n        cyl=factor(cyl)\n    ) |&gt; \n    ggdotchart(\n        x = \"name\",\n        y = \"mpg\",\n        color = \"cyl\",\n        palette = \"jco\",\n\n        sorting = \"descending\",\n        add = \"segments\",\n        \n        rotate = TRUE,\n        group = \"cyl\",\n        dot.size = 6,\n        label = round(mtcars$mpg),\n        font.label = list(color=\"white\",size=9,vjust=0.5),\n        ggtheme = theme_pubr()\n    )\n\n\n\n\n\n\n\n\n6.2.6 ggdotplot",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#ggrepel",
    "href": "ggplot2_extensions.html#ggrepel",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.3 ggrepel",
    "text": "6.3 ggrepel\n\nCodelibrary(ggrepel)\nggplot(data = mtcars, aes(x= wt, y = mpg)) +\n  geom_point(color = \"steelblue\") +\n  geom_hline(yintercept = median(mtcars$mpg),                     \n             linetype = \"dashed\",\n             color = \"steelblue\") +\n  geom_label(x = 5.2, y = 20.5,                                      \n             label = \"median MPG\", \n             color = \"white\", \n             fill = \"steelblue\",\n             size = 3) +\n  geom_text_repel(label = row.names(mtcars), size = 3)\n\n\n\n\n\n\nCode\n# geom_label_repel 带白底外框",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-sec-correlogram",
    "href": "ggplot2_extensions.html#ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-ggplot2_graphics-sec-correlogram",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.4 相关图",
    "text": "6.4 相关图\n\nCodelibrary(ggcorrplot)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#山脊图",
    "href": "ggplot2_extensions.html#山脊图",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.5 山脊图",
    "text": "6.5 山脊图\n\nCodelibrary(ggridges)\nggplot(mpg, aes(x = hwy, y = drv, fill = drv, color = drv)) +\n  geom_density_ridges(alpha = 0.5, show.legend = FALSE)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#交互式-plotly",
    "href": "ggplot2_extensions.html#交互式-plotly",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.6 交互式 plotly",
    "text": "6.6 交互式 plotly\nhttps://github.com/plotly/plotly.R\nhttps://plotly-r.com/\nhttps://plotly.com/ggplot2/\nConverting a ggplot2 graph to an interactive plotly graph\n\nCodelibrary(plotly)\nmtcars$cyl &lt;- factor(mtcars$cyl)\nmtcars$name &lt;- row.names(mtcars)\n\np &lt;- ggplot(mtcars, aes(x = disp, y= mpg, color = cyl)) +\n  geom_point()\nggplotly(p)\n\n\n\n\n\n\nCode# Customizing the plotly tooltip\np &lt;- ggplot(mtcars,\n            aes(x = disp, y=mpg, color=cyl,\n                text = paste(name, \"\\n\",\n                             \"mpg:\", mpg, \"\\n\",\n                             \"disp:\", disp, \"\\n\",\n                             \"cyl:\", cyl, \"\\n\",\n                             \"gear:\", gear))) +\n  geom_point()",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#边际图-marginal-histogram-boxplot",
    "href": "ggplot2_extensions.html#边际图-marginal-histogram-boxplot",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.7 边际图 Marginal Histogram / Boxplot",
    "text": "6.7 边际图 Marginal Histogram / Boxplot\n\nCodelibrary(ggExtra)",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#热图",
    "href": "ggplot2_extensions.html#热图",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.8 热图",
    "text": "6.8 热图",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "ggplot2_extensions.html#森林图",
    "href": "ggplot2_extensions.html#森林图",
    "title": "\n6  ggplot2 extensions\n",
    "section": "\n6.9 森林图",
    "text": "6.9 森林图",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ggplot2 extensions</span>"
    ]
  },
  {
    "objectID": "custom_functions.html",
    "href": "custom_functions.html",
    "title": "\n7  函数式编程\n",
    "section": "",
    "text": "7.1 向量式函数",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>函数式编程</span>"
    ]
  },
  {
    "objectID": "custom_functions.html#数据框式函数",
    "href": "custom_functions.html#数据框式函数",
    "title": "\n7  函数式编程\n",
    "section": "\n7.2 数据框式函数",
    "text": "7.2 数据框式函数\n\nCode\ngrouped_mean &lt;- function(df, group_var, mean_var) {\n    df |&gt; \n        group_by({{ group_var }}) |&gt; #embracing拥抱 {{}}\n        summarize(mean=mean({{ mean_var }}))   \n    #拥抱变量会告诉 dplyr使用存储在参数中的值，而不是将参数作为文本变量名称\n}\ndf &lt;- tibble(\n    mean_var = c(1,2),\n    group_var = c(\"g\",\"h\"),\n    group = c(1,1),\n    x = c(10,100),\n    y = c(100,200)\n)\ndf\n\n\n\n\nmean_var\ngroup_var\ngroup\nx\ny\n\n\n\n1\ng\n1\n10\n100\n\n\n2\nh\n1\n100\n200\n\n\n\n\n\nCodegrouped_mean(df,group, x)\n\n\n\n\ngroup\nmean\n\n\n1\n55\n\n\n\n\n\n\n7.2.1 何时使用{{}}\n\nData-masking: arrange()filter()summarize() compute with variables\nTidy-selection：select()relocate()rename() select variables\n\nCode\n# \nsummary6 &lt;- function(data, var) {\n    data |&gt; summarize(\n        min = min({{ var }}, na.rm = TRUE),\n        mean = mean({{ var }}, na.rm = TRUE),\n        median = median({{ var }}, na.rm = TRUE),\n        max = max({{ var }}, na.rm = TRUE),\n        n = n(),\n        n_miss = sum(is.na({{ var }})),\n        .groups = \"drop\"\n    )\n}\ndiamonds |&gt; \n    group_by(cut) |&gt; \n    summary6(carat)\n\n\n\n\ncut\nmin\nmean\nmedian\nmax\nn\nn_miss\n\n\n\nFair\n0.22\n1.0461366\n1.00\n5.01\n1610\n0\n\n\nGood\n0.23\n0.8491847\n0.82\n3.01\n4906\n0\n\n\nVery Good\n0.20\n0.8063814\n0.71\n4.00\n12082\n0\n\n\nPremium\n0.20\n0.8919549\n0.86\n4.01\n13791\n0\n\n\nIdeal\n0.20\n0.7028370\n0.54\n3.50\n21551\n0\n\n\n\n\n\nCode\n\n# \ncount_prop &lt;- function(df, var, sort = FALSE) {\n    df |&gt;\n        dplyr::count({{ var }}, sort = sort) |&gt;\n        mutate(prop = n / sum(n))\n}\ndiamonds |&gt; count_prop(clarity)\n\n\n\n\nclarity\nn\nprop\n\n\n\nI1\n741\n0.0137375\n\n\nSI2\n9194\n0.1704486\n\n\nSI1\n13065\n0.2422136\n\n\nVS2\n12258\n0.2272525\n\n\nVS1\n8171\n0.1514831\n\n\nVVS2\n5066\n0.0939192\n\n\nVVS1\n3655\n0.0677605\n\n\nIF\n1790\n0.0331850\n\n\n\n\n\nCode\n#\nunique_where &lt;- function(df, condition, var) {\n    df |&gt; \n        dplyr::filter({{ condition }}) |&gt; \n        distinct({{ var }}) |&gt; \n        arrange({{ var }})\n}\nmtcars|&gt; unique_where(cyl==4, mpg)\n\n\n\n\n\nmpg\n\n\n\nVolvo 142E\n21.4\n\n\nToyota Corona\n21.5\n\n\nDatsun 710\n22.8\n\n\nMerc 240D\n24.4\n\n\nPorsche 914-2\n26.0\n\n\nFiat X1-9\n27.3\n\n\nHonda Civic\n30.4\n\n\nFiat 128\n32.4\n\n\nToyota Corolla\n33.9\n\n\n\n\n\nCode\n\n# Data-masking vs. tidy-selection\ncount_missing &lt;- function(df, group_vars, x_var) {\n    df |&gt; \n        group_by({{ group_vars }}) |&gt; #select variables inside a function that uses data-masking\n        summarize(\n            n_miss = sum(is.na({{ x_var }})),\n            .groups = \"drop\"\n        )\n}\nmtcars|&gt; \n    count_missing(c(cyl), mpg)\n\n\n\n\nc(cyl)\nn_miss\n\n\n\n4\n0\n\n\n6\n0\n\n\n8\n0\n\n\n\n\n\nCode\ncount_missing &lt;- function(df, group_vars, x_var) {\n    df |&gt;      #pick()\n        group_by(pick({{ group_vars }})) |&gt; #use tidy-selection inside data-masking functions\n        summarize(                          \n            n_miss = sum(is.na({{ x_var }})),\n            .groups = \"drop\"\n        )\n}\n\nmtcars|&gt; \n    count_missing(c(cyl,am), mpg)\n\n\n\n\ncyl\nam\nn_miss\n\n\n\n4\n0\n0\n\n\n4\n1\n0\n\n\n6\n0\n0\n\n\n6\n1\n0\n\n\n8\n0\n0\n\n\n8\n1\n0",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>函数式编程</span>"
    ]
  },
  {
    "objectID": "custom_functions.html#图形函数",
    "href": "custom_functions.html#图形函数",
    "title": "\n7  函数式编程\n",
    "section": "\n7.3 图形函数",
    "text": "7.3 图形函数\n\nCodehistogram &lt;- function(df, var, binwidth = NULL) {\n    df |&gt; \n        ggplot(aes(x = {{ var }})) + \n        geom_histogram(binwidth = binwidth)\n}\n\ndiamonds |&gt; histogram(carat, 0.1)\n\n\n\n\n\n\nCode\nsorted_bars &lt;- function(df, var) {\n    df |&gt;               # walrus operator   :=\n        mutate({{ var }} := fct_rev(fct_infreq({{ var }})))  |&gt;\n        ggplot(aes(y = {{ var }})) +\n        geom_bar()\n}\n\ndiamonds |&gt; sorted_bars(clarity)\n\n\n\n\n\n\n\n```",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>函数式编程</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html",
    "href": "Dynamic_report_syntax_format.html",
    "title": "\n8  动态报告语法格式\n",
    "section": "",
    "text": "1 基础\n任务列表",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#基础",
    "href": "Dynamic_report_syntax_format.html#基础",
    "title": "\n8  动态报告语法格式\n",
    "section": "",
    "text": "output\nsyntax\n\n\n\ncode\n` code `\n\n\n\n粗体\n**粗体**\n\n\n\n斜体\n*斜体*\n\n\n\n下横线\n[下横线]{.underline}\n\n\n\n删除线\n~~删除线~~\n\n\n\n上标X2\n\nX^2^\n\n\n\n下标 X1\n\nX~1~\n\n\n\nSAMALL small caps\n与小写字母同等高度的大写字母 [small caps]{.smallcaps}\n\n\n\n\nhttps://r4ds.hadley.nz/\n&lt;https://r4ds.hadley.nz/&gt;\n\n\n\nquarto\n[quarto](https://quarto.org)\n\n\n\n\n | \n\n\n\n\n\n\nBlockquote\n\n&gt; Blockquote\n\n\n\n\n\n\nx\n\ny\n\n\n\nz\n\n\nq\n\nw",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#execute-chunk",
    "href": "Dynamic_report_syntax_format.html#execute-chunk",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n2 Execute chunk",
    "text": "2 Execute chunk\n\n\n\n\n\n\n\nOption\nDefault\nEffects\n\n\n\necho\ntrue\n\n\nfalse: hide code in output\\\n\ninclude code cell syntaxfenced\n\n\n\n\neval\ntrue\n\nfalse: don’t run code\n\n\ninclude\ntrue\n\nfalse: don’t include code or results\n\n\noutput\ntrue\n\n\nfalse: don’t include results\\\n\ntreat results as raw markdownasis\n\n\n\n\nwarning\ntrue\n\nfalse: don’t include warnings in output\n\n\nerror\nfalse\n\ntrue: include error in output and continue with render\n\n\n\n\n2.1 图\nCodeplot(1:25,1:25,pch=c(1:25))\nplot(1:25,c(1:25)^2,type=\"b\",pch=c(1:25))\n\n\n\n\n\n\n\n\n\n(a) 点\n\n\n\n\n\n\n\n\n\n(b) 线\n\n\n\n\n\n\n图 1: plot 点-线\n\n\n如左图 图 8.1 (a) 所示，点有25种不同的形状，\n右图 图 8.1 (b) 所示。\n\n2.1.1 流程图\n\n\n\n\n\nsequenceDiagram\n  participant Alice\n  participant Bob\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts &lt;br/&gt;prevail!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!\n\n\n\n\n\n\n\n\n\n\n\nG\nrun\nrunintr\nintrrun--intr\nkernel\nkernelrun--kernel\nrunbl\nrunblintr--runbl\nrunbl--run\nzombie\nzombiekernel--zombie\nsleep\nsleepkernel--sleep\nrunmem\nrunmemkernel--runmem\nsleep--runmem\nswap\nswapsleep--swap\nrunswap\nrunswapswap--runswap\nrunswap--runmem\nnew\nnewrunswap--new\nnew--runmem\n\n\n\n\n图 2: This is a simple graphviz graph.\n\n\n\n\nEDA\n引用章节： Section 8.2.1.1.1 and Section 8.4\n引用图片 图 8.3 shows two histograms displaying the distributions of price and area individually.\n直方图ggplot(mpg, aes(cty)) +\n  geom_histogram() +\n  labs(title = \"Histogram of cty\")\n\nggplot(mpg, aes(x =hwy)) +\n  geom_histogram() +\n  labs(title = \"Histogram of hwy\")\n\n\n\n\n\n\n\n\n\n(a) Histogram of ctys\n\n\n\n\n\n\n\n\n\n(b) Histogram of hwys\n\n\n\n\n\n\n图 3: Histograms of mpg",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#表格",
    "href": "Dynamic_report_syntax_format.html#表格",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n3 表格",
    "text": "3 表格\n表 8.1 displays basic summary statistics for these two variables.\n\nCodempg %&gt;%\n  summarise(\n    mean_displ=mean(displ),\n    mean_hwy=mean(hwy),\n    mean_cty=mean(cty),\n    .by = cyl\n    ) %&gt;%\n  knitr::kable(digits = c(0, 0, 0, 0, 2))\n\n\n表 1: Table Summary statistics\n\n\n\n\ncyl\nmean_displ\nmean_hwy\nmean_cty\n\n\n\n4\n2\n29\n21\n\n\n6\n3\n23\n16\n\n\n8\n5\n18\n13\n\n\n5\n2\n29\n20",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#sec-formula",
    "href": "Dynamic_report_syntax_format.html#sec-formula",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n4 公式",
    "text": "4 公式\nBlack-Scholes (式 8.1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[ \\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2} \\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}   + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =   \\mathrm r \\mathrm C   \\tag{1}\\]\nWe can fit a simple linear regression model of the form shown in 式 8.2.\n\\[\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{2}\\]",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#callouts",
    "href": "Dynamic_report_syntax_format.html#callouts",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n5 callouts",
    "text": "5 callouts\n\nnote\nwarning\nimportant\ntip\ncaution\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a pretty incomplete analysis, but hopefully the document provides a good overview of some of the authoring features of Quarto!\n\n\n\n\n\n\n\n\nTip 1: 交叉引用 a Tip\n\n\n\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 8.1…\n\n\n标注类型\n前缀\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#blockquote",
    "href": "Dynamic_report_syntax_format.html#blockquote",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n6 Blockquote",
    "text": "6 Blockquote\n\nqwert\n\n\n\n\nasfg",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#latex",
    "href": "Dynamic_report_syntax_format.html#latex",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n7 LaTex",
    "text": "7 LaTex\n\n7.1 公式对齐\n\\[\\begin{aligned}\n  f(x) =& \\sum_{k=0}^\\infty \\frac{1}{k!} x^k \\\\\n  =& e^x\n\\end{aligned}\\]\n\n7.2 括号等高\n\\[\\phi(x) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left\\{ \\frac{1}{2} x^2 \\right\\} \\]\n\n7.3 矩阵\n\\[\n\\begin{bmatrix}\nx_{11} & x_{12}&...&x_{1p} \\\\\nx_{21} & x_{22}&...&x_{2p} \\\\\n\\vdots &\\vdots &   &\\vdots\\\\\nx_{n1} & x_{n2}&...&x_{np} \\\\\n\\end{bmatrix}\n\\]\n\n7.4 向量表示\n\\[   \\boldsymbol{v} = (v_1, v_2)^T \\]",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#定理类段落",
    "href": "Dynamic_report_syntax_format.html#定理类段落",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n8 定理类段落",
    "text": "8 定理类段落\n\n术语\n\n定义：三角形的内角和等于180°。\n\n\n或者\n引用Theorem 8.1。\n\nTheorem 1 (勒贝格定理) 一元函数黎曼可积， 当且仅当其不连续点的集合为零测集。\n\n\n\n环境名\n默认显示名\n标签前缀\n\n\n\ntheorem\nTheorem\n#thm-\n\n\nlemma\nLemma\n#lem-\n\n\ncorollary\nCorollary\n#cor-\n\n\nproposition\nProposition\n#prp-\n\n\nconjecture\nConjecture\n#cnj-\n\n\ndefinition\nDefinition\n#def-\n\n\nexample\nExample\n#exm-\n\n\nexercise\nExercise\n#exr-",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "Dynamic_report_syntax_format.html#代码块",
    "href": "Dynamic_report_syntax_format.html#代码块",
    "title": "\n8  动态报告语法格式\n",
    "section": "\n9 代码块",
    "text": "9 代码块\n\n9.1 syntax highlight\n1 + 1\nx = \"abcde\"\n\n9.2 raw content\n\n    \nmarkdown_html  Mr.   \nCenter\n\nDescription List\n\n主题\n\n描述\n\n\nText highlightkeyboard Ctrl+C\n\n\nText\n\n\n9.3 Inline Code\n\nUse computed values directly in text sections. Code is evaluated at render and results appear as text.\n\n9.3.1 Knitr\nValue is .4\n\n9.3.2 Jupyter\nValue is .`{python} 2 + 2`\n\n9.3.3 Output\nValue is 4.",
    "crumbs": [
      "Data Science",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>动态报告语法格式</span>"
    ]
  },
  {
    "objectID": "R-Python.html",
    "href": "R-Python.html",
    "title": "R⬌Python",
    "section": "",
    "text": "对象转换",
    "crumbs": [
      "R <---> Python",
      "R⬌Python"
    ]
  },
  {
    "objectID": "R-Python.html#对象转换",
    "href": "R-Python.html#对象转换",
    "title": "R⬌Python",
    "section": "",
    "text": "Type conversions\n\n\n\n\n\n\nR\nPython\n例\n\n\n\n单元素向量\n标量Scalar\n\n1、 1L、TRUE、\"foo\"\n\n\n\n未命名列表或多元素向量\nList\n\nc(1.0, 2.0, 3.0), c(1L, 2L, 3L)\n\n\n\n命名列表\nDict\n\nlist(a = 1L, b = 2.0), dict(x = x_data)\n\n\n\nMatrix/Array\nNumPy ndarray\nmatrix(c(1,2,3,4), nrow = 2, ncol = 2)\n\n\nData Frame\nPandas DataFrame\ndata.frame(x = c(1,2,3), y = c(\"a\", \"b\", \"c\"))\n\n\nFunction\nPython function\nfunction(x) x + 1\n\n\nNULL, TRUE, FALSE\nNone, True, False\n\nNULL, TRUE, ALSE\n\n\n\n\nreticulate::\n\nCodelibrary(reticulate)\n#devtools::install_version( \"ggmap\",  version = \"3.5.2\")\nif(!require(\"tidyverse\")) {\n    utils::install.packages(\"tidyverse\")\n    library(tidyverse)\n}\n\n\nR 安装 python 模块\nreticulate：安装Python module\n\nCodelibrary(reticulate)\npy_config()\npy_module_available('pip')\n\n#  Anaconda 激活环境   pip install scanpy -i https://pypi.tuna.tsinghua.edu.cn/simple/  ，依赖包含 numpy pandas\npy_module_available('numpy')\npy_module_available('pandas')\npy_module_available('scanpy')\nreticulate::repl_python()\n\n\nR 调用 Python 模块\n\nCode# 调用os模块(module)的listdir()函数\nos &lt;- reticulate::import(\"os\")\nos$listdir(\"./\")\n#&gt;  [1] \".Rproj.user\"                        \"control_structure.qmd\"             \n#&gt;  [3] \"_quarto.yml\"                        \"index.qmd\"                         \n#&gt;  [5] \"ggplot2_extensions.qmd\"             \"docs\"                              \n#&gt;  [7] \"pheatmap.qmd\"                       \"environments.qmd\"                  \n#&gt;  [9] \"ggplot2_extensions_cache\"           \"functions.qmd\"                     \n#&gt; [11] \".quarto\"                            \".git\"                              \n#&gt; [13] \"README.md\"                          \".gitattributes\"                    \n#&gt; [15] \"ggplot2_extensions_files\"           \"control_structure_cache\"           \n#&gt; [17] \"environments_cache\"                 \"functionals.qmd\"                   \n#&gt; [19] \"object_oriented_programming.qmd\"    \"custom_functions.qmd\"              \n#&gt; [21] \"exception_handling.qmd\"             \"R-Python.qmd\"                      \n#&gt; [23] \"type_class_cache\"                   \"Dynamic_report_syntax_format.qmd\"  \n#&gt; [25] \"exception_handling_cache\"           \"R-Python_cache\"                    \n#&gt; [27] \"Dynamic_report_syntax_format_cache\" \"R-Python.rmarkdown\"                \n#&gt; [29] \"custom_functions_cache\"             \"custom_functions_files\"            \n#&gt; [31] \"Dynamic_report_syntax_format_files\" \"functionals_cache\"                 \n#&gt; [33] \"data\"                               \"function\"                          \n#&gt; [35] \"images\"                             \"I-O.qmd\"                           \n#&gt; [37] \"useful_function.qmd\"                \"type_class.qmd\"                    \n#&gt; [39] \"object_oriented_programming_cache\"  \"index_cache\"                       \n#&gt; [41] \"intro_cache\"                        \".gitignore\"                        \n#&gt; [43] \"_tidyverse\"                         \"I-O_cache\"                         \n#&gt; [45] \"useful_function_cache\"              \"useful_function_files\"             \n#&gt; [47] \"ggplot2_graphics.qmd\"               \"base_graphics.qmd\"                 \n#&gt; [49] \"base_graphics_files\"                \"base_graphics_cache\"               \n#&gt; [51] \"ggplot2_graphics_cache\"             \"ggplot2_graphics_files\"            \n#&gt; [53] \"functions_cache\"                    \"R_notes.Rproj\"                     \n#&gt; [55] \"efficient.qmd\"                      \"efficient_cache\"                   \n#&gt; [57] \"efficient_files\"\n\n# 调用seaborn模块的load_dataset()函数\n# 需要seaborn模块已安装\nsns &lt;- import(\"seaborn\")\ntips &lt;- sns$load_dataset(\"tips\")\nprint(head(tips))\n#&gt;   total_bill  tip    sex smoker day   time size\n#&gt; 1      16.99 1.01 Female     No Sun Dinner    2\n#&gt; 2      10.34 1.66   Male     No Sun Dinner    3\n#&gt; 3      21.01 3.50   Male     No Sun Dinner    3\n#&gt; 4      23.68 3.31   Male     No Sun Dinner    2\n#&gt; 5      24.59 3.61 Female     No Sun Dinner    4\n#&gt; 6      25.29 4.71   Male     No Sun Dinner    4\n\n\n\nR → Python\n\nCodeA &lt;- 1\nB &lt;- c(1, 2, 3)\nC &lt;- c(a = 1, b = 2, c = 3)\nD &lt;- matrix(1:4, nrow = 2)\nE &lt;- data.frame(a = c(1, 2), b = c(3, 4))\nG &lt;- list(1, 2, 3)\nH &lt;- list(c(1, 2), c(3, 4))\nI &lt;- list(a = c(1, 2), b = c(3, 4))\nJ &lt;- function(a, b) {\n  return(a + b)\n  }\nK1 &lt;- NULL\nK2 &lt;- T\nK3 &lt;- F\n\n\n\nCode### float\nr.A\n#&gt; 1.0\ntype(r.A)\n#&gt; &lt;class 'float'&gt;\n\n### list\nr.B\n#&gt; [1.0, 2.0, 3.0]\ntype(r.B)\n#&gt; &lt;class 'list'&gt;\n\nr.C\n#&gt; [1.0, 2.0, 3.0]\ntype(r.C)\n#&gt; &lt;class 'list'&gt;\n\n### numpy.ndarray\nr.D\n#&gt; array([[1, 3],\n#&gt;        [2, 4]])\ntype(r.D)\n#&gt; &lt;class 'numpy.ndarray'&gt;\n\n### pandas.core.frame.DataFrame\nr.E\n#&gt; {'a': [1.0, 2.0], 'b': [3.0, 4.0]}\ntype(r.E)\n#&gt; &lt;class 'dict'&gt;\n\n### list\nr.G\n#&gt; [1.0, 2.0, 3.0]\ntype(r.G)\n#&gt; &lt;class 'list'&gt;\n\nr.H\n#&gt; [[1.0, 2.0], [3.0, 4.0]]\ntype(r.H)\n#&gt; &lt;class 'list'&gt;\n\n### dict\nr.I\n#&gt; {'a': [1.0, 2.0], 'b': [3.0, 4.0]}\ntype(r.I)\n#&gt; &lt;class 'dict'&gt;\n\n### function\nr.J\n#&gt; &lt;function make_python_function.&lt;locals&gt;.python_function at 0x000001EE1D2BF160&gt;\ntype(r.J)\n#&gt; &lt;class 'function'&gt;\nr.J(2, 3)\n#&gt; 5\n\n\n### NoneType\nr.K1\ntype(r.K1)\n#&gt; &lt;class 'NoneType'&gt;\n\n\n### bool\nr.K2\n#&gt; True\ntype(r.K2)\n#&gt; &lt;class 'bool'&gt;\nr.K3\n#&gt; False\ntype(r.K3)\n#&gt; &lt;class 'bool'&gt;\n\n\n\nPython → R\n\nCodeimport pandas as pd\nm = [1, 2, 3]\nn = pd.DataFrame([[1, 2], [3, 4]], columns=[\"a\", \"b\"])\n\nA = 1\nB = [1, 2, 3]\nC = [[1, 2], [3, 4]]\nD1 = [[1], 2, 3]\nD2 = [[1, 2], 2, 3]\n\nE = (1, 2, 3)\n\nFF = ((1, 2), (3, 4))\n\nG = ((1, 2), 3, 4)\n\nH = {\"a\": [1, 2, 3],  \"b\": [2, 3, 4]}\n     \nI = {\"a\": 1,\"b\": [2, 3, 4]}\n     \ndef J(a, b):\n  return a + b\n\n\n\nCodepy$m\n#&gt; [1] 1 2 3\npy$n\n\n\n\n\na\nb\n\n\n\n1\n2\n\n\n3\n4\n\n\n\n\n\nCode\n### integer\npy$A\n#&gt; [1] 1\nclass(py$A)\n#&gt; [1] \"integer\"\n\npy$B\n#&gt; [1] 1 2 3\nclass(py$B)\n#&gt; [1] \"integer\"\n\n### list\npy$C\n#&gt; [[1]]\n#&gt; [1] 1 2\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 3 4\nclass(py$C)\n#&gt; [1] \"list\"\n\npy$D1\n#&gt; [[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 2\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 3\nclass(py$D1)\n#&gt; [1] \"list\"\n\npy$D2\n#&gt; [[1]]\n#&gt; [1] 1 2\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 2\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 3\nclass(py$D2)\n#&gt; [1] \"list\"\n\npy$E\n#&gt; [[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 2\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 3\nclass(py$E)\n#&gt; [1] \"list\"\n\npy$FF\n#&gt; [[1]]\n#&gt; [[1]][[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; [[1]][[2]]\n#&gt; [1] 2\n#&gt; \n#&gt; \n#&gt; [[2]]\n#&gt; [[2]][[1]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[2]][[2]]\n#&gt; [1] 4\nclass(py$FF)\n#&gt; [1] \"list\"\n\npy$G\n#&gt; [[1]]\n#&gt; [[1]][[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; [[1]][[2]]\n#&gt; [1] 2\n#&gt; \n#&gt; \n#&gt; [[2]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 4\nclass(py$G)\n#&gt; [1] \"list\"\n\npy$H\n#&gt; $a\n#&gt; [1] 1 2 3\n#&gt; \n#&gt; $b\n#&gt; [1] 2 3 4\nclass(py$H)\n#&gt; [1] \"list\"\n\npy$I\n#&gt; $a\n#&gt; [1] 1\n#&gt; \n#&gt; $b\n#&gt; [1] 2 3 4\nclass(py$I)\n#&gt; [1] \"list\"\n\n### function\npy$J\n#&gt; &lt;function J at 0x000001F1B6CE3D30&gt;\n#&gt;  signature: (a, b)\nclass(py$J)\n#&gt; [1] \"python.builtin.function\" \"python.builtin.object\"\npy$J(2, 3)\n#&gt; [1] 5",
    "crumbs": [
      "R <---> Python",
      "R⬌Python"
    ]
  },
  {
    "objectID": "R-Python.html#编写-python-时-rpy2-拥有的互操作性",
    "href": "R-Python.html#编写-python-时-rpy2-拥有的互操作性",
    "title": "R⬌Python",
    "section": "编写 Python 时 rpy2 拥有的互操作性",
    "text": "编写 Python 时 rpy2 拥有的互操作性\n\nCodepy_module_available(\"rpy2\")\n#&gt; [1] FALSE\n\n\n……",
    "crumbs": [
      "R <---> Python",
      "R⬌Python"
    ]
  },
  {
    "objectID": "control_structure.html",
    "href": "control_structure.html",
    "title": "\n9  控制结构\n",
    "section": "",
    "text": "9.1 顺序结构",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#分支结构",
    "href": "control_structure.html#分支结构",
    "title": "\n9  控制结构\n",
    "section": "\n9.2 分支结构",
    "text": "9.2 分支结构\n\n9.2.1 if() 和 else\n\nCodex &lt;- 10\n\nif(x %%3 ==0) {\n    message(\"能被3整除\")\n} else {\n    message(\"不能被3整除\")\n}\n\n\n\n9.2.2 ifelse()\n\nCodex &lt;- c(10,9)\nifelse(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\nif_else(x %%3 ==0,\"能被3整除\",\"不能被3整除\")\n#&gt; [1] \"不能被3整除\" \"能被3整除\"\n\n\n\n9.2.3 case_when()\n\nCodex &lt;- 1:10\ndplyr::case_when(\n  x %% 35 == 0 ~ \"fizz buzz\",\n  x %% 5 == 0 ~ \"fizz\",\n  x %% 7 == 0 ~ \"buzz\",\n  is.na(x) ~ \"???\",\n  TRUE ~ as.character(x)\n)\n#&gt;  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"fizz\" \"6\"    \"buzz\" \"8\"    \"9\"    \"fizz\"\n\n\n\n9.2.4 switch()\n\nCode# 如果多个输入具有相同的输出，则可以将右侧留空，输入将“掉入”到下一个值。这模仿了 C 语句的行为\nnlegs &lt;- function(x) {\n  switch(x,\n    cow = ,\n    horse = ,\n    dog = 4,\n    human = ,\n    chicken = 2,\n    plant = 0,\n    stop(\"Unknown input\")  #最后应该始终抛出错误，否则不匹配的输入将返回 NULL\n  )\n}\nnlegs(\"cow\")\n#&gt; [1] 4\n\nnlegs(\"do6\")\n#&gt; Error in nlegs(\"do6\"): Unknown input",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "control_structure.html#循环结构",
    "href": "control_structure.html#循环结构",
    "title": "\n9  控制结构\n",
    "section": "\n9.3 循环结构",
    "text": "9.3 循环结构\n\n9.3.1 for\n\nCodefor(i in 1:5){\n    print(1:i)\n}\n#&gt; [1] 1\n#&gt; [1] 1 2\n#&gt; [1] 1 2 3\n#&gt; [1] 1 2 3 4\n#&gt; [1] 1 2 3 4 5\n\n\n\nCodefor (i in 1:10) {\n  if (i &lt; 3) \n    next  # 退出当前迭代,后面不执行了\n\n  print(i)\n  \n  if (i &gt;= 5)\n    break # 退出整个循环\n}\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\n9.3.2 while()\n\nCodei &lt;- 0\nwhile(i&lt;=10){\n    print(i)\n    i=i+1\n}\n#&gt; [1] 0\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\nCodeflag &lt;- TRUE\nx &lt;- 0\ni &lt;- 0\nwhile(flag){\n    x &lt;- x+1\n    if(x%%3==0) {\n        i &lt;- i+1\n        print(x)\n    }\n    if(i==25) flag &lt;- FALSE\n}\n#&gt; [1] 3\n#&gt; [1] 6\n#&gt; [1] 9\n#&gt; [1] 12\n#&gt; [1] 15\n#&gt; [1] 18\n#&gt; [1] 21\n#&gt; [1] 24\n#&gt; [1] 27\n#&gt; [1] 30\n#&gt; [1] 33\n#&gt; [1] 36\n#&gt; [1] 39\n#&gt; [1] 42\n#&gt; [1] 45\n#&gt; [1] 48\n#&gt; [1] 51\n#&gt; [1] 54\n#&gt; [1] 57\n#&gt; [1] 60\n#&gt; [1] 63\n#&gt; [1] 66\n#&gt; [1] 69\n#&gt; [1] 72\n#&gt; [1] 75\n\n\n\n9.3.3 repeat()\n\nCodei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 100) break  # 跳出当前的循环\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 4\n#&gt; [1] 8\n#&gt; [1] 16\n#&gt; [1] 32\n#&gt; [1] 64\n\n\n\nCodei &lt;- 1\n\nrepeat{\n  print(i)\n  i &lt;- i*2\n  if (i &gt; 200) break()\n  if (i &gt; 100) next()  #跳过后续代码的运行进入下一次循环\n  print(\"Can you see me?\")\n}\n#&gt; [1] 1\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 2\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 4\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 8\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 16\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 32\n#&gt; [1] \"Can you see me?\"\n#&gt; [1] 64\n#&gt; [1] 128",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>控制结构</span>"
    ]
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "\n10  函数\n",
    "section": "",
    "text": "10.1 函数组件\nCodef02 &lt;- function(x, y) {\n  # 注释\n  x + y\n}\n\nformals(f02)\n#&gt; $x\n#&gt; \n#&gt; \n#&gt; $y\nbody(f02)\n#&gt; {\n#&gt;     x + y\n#&gt; }\nenvironment(f02)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n属性 srcref（source reference ），指向函数的源代码\nCodeattributes(f02)\n#&gt; $srcref\n#&gt; function(x, y) {\n#&gt;   # 注释\n#&gt;   x + y\n#&gt; }",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数组件",
    "href": "functions.html#函数组件",
    "title": "\n10  函数\n",
    "section": "",
    "text": "formals() 控制如何调用函数的参数列表\n\nbody() 函数内部的代码，包括异常处理、执行程序\n\nenvironment() 确定函数如何查找与名称相关联的值的数据结构，俗称环境",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#sec-Primitive_functions",
    "href": "functions.html#sec-Primitive_functions",
    "title": "\n10  函数\n",
    "section": "\n10.2 Primitive functions",
    "text": "10.2 Primitive functions\n但在R中，primitive functions 不具备上述三个组件。\n\nCodeformals(sum)\n#&gt; NULL\nbody(sum)\n#&gt; NULL\nenvironment(sum)\n#&gt; NULL\nattributes(sum)\n#&gt; NULL\n\n\n原语函数（primitive functions）是R语言的核心组成部分，它们具有以下特点：\n\n内置优化：原语函数通常是用C语言编写的，这意味着它们执行起来非常快，因为不需要R解释器的额外开销。\n直接调用：原语函数可以直接调用C语言代码，这使得它们在执行时不需要通过R的函数调用机制。\n性能：由于直接调用C语言编写的底层代码，原语函数的性能通常比普通的R函数要好。\n\nsum() 函数就是一个典型的原语函数，它用于计算向量元素的总和。当你在R中调用 sum() 函数时，实际上是在调用一个高效的C语言实现的函数，而不是一个R语言层面的函数。\n原语函数有内置函数（builtin） 和 特殊函数（special ）两种类型。\n\nCodesum\n#&gt; function (..., na.rm = FALSE)  .Primitive(\"sum\")\ntypeof(sum)\n#&gt; [1] \"builtin\"\n\n`[`\n#&gt; .Primitive(\"[\")\ntypeof(`[`)\n#&gt; [1] \"special\"\n\n\n这些函数主要存在于 C 中，而不是 R 中。Primitive functions仅存在于 base package。\n\nCodeformals(sum)\n#&gt; NULL\nbody(sum)\n#&gt; NULL\nenvironment(sum)\n#&gt; NULL",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#first-class-functions",
    "href": "functions.html#first-class-functions",
    "title": "\n10  函数\n",
    "section": "\n10.3 First-class functions",
    "text": "10.3 First-class functions\n在编程语言中，“First-class functions”（一级函数或函数作为一等公民）是函数式编程的一个核心概念，它意味着函数可以像任何其他类型的数据（如数字、字符串和对象）一样被传递和操作。具体来说，一级函数具有以下几个关键特性：\n\n可赋值：可以给函数分配一个变量。\n可传递：可以作为参数传递给其他函数。\n可返回：可以从其他函数中作为返回值。\n可创建：可以在运行时创建新函数。\n\n这些特性使得一级函数非常灵活，并且允许编程者以声明式的方式构建复杂的逻辑。\nR语言是一种支持函数式编程的语言，它自然地支持一级函数。以下是R语言中一级函数的一些应用示例：\n\n\n将函数赋值给变量：\n\nCodef01 &lt;- function(x) {\n  x^2\n}\n\n\n\n\n将函数作为参数传递：\n\nCodeapply_func &lt;- function(x, f) {\n  f(x)\n}\nresult &lt;- apply_func(10, f01) # 将函数f01()作为参数传递\n\n\n\n\n从函数中返回函数：\n\nCodecreate_multiplier &lt;- function(n) {\n  function(x) {\n    x * n\n  }\n}\n\ndouble &lt;- create_multiplier(2)\nresult &lt;- double(10) # 返回20\n\n\n\n\n匿名函数 anonymous function：\n\nCodesapply(c(1,2,3,4,5), function(x) x*2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\nLambda函数：在较新版本的R中，可以使用~来定义Lambda函数，是一种简洁的匿名函数定义方式。\n\nCodemap_dbl(1:5, ~.x * 2)\n#&gt; [1]  2  4  6  8 10\n\n\n\n\n函数的高阶特性：\n\nCodemap_values &lt;- function(x, f) {\n  vapply(x, f, FUN.VALUE = double(x))\n}\n\nresult &lt;- map_values(c(1,2,3,4,5), function(x) x ^ 2)\n#&gt; Error in vapply(x, f, FUN.VALUE = double(x)): values must be length 5,\n#&gt;  but FUN(X[[1]]) result is length 1\n\n\n在R中，vapply、sapply、lapply、mapply 等函数都是高阶函数的例子，它们可以接受另一个函数作为参数，并对数据集执行操作。\n\n\n\n10.3.1 一级函数的优势：\n\n代码复用：通过将函数作为参数，可以编写更通用、更可重用的代码。\n模块化：一级函数有助于将程序分解为更小、更易于管理的部分。\n抽象：它们允许开发者创建更高级别的抽象，简化复杂逻辑的表达。\n灵活性：一级函数提供了编写灵活和动态代码的能力。\n\n函数式编程和一级函数是现代编程范式的重要组成部分，它们在数据处理和统计计算中尤其有用，这也是R语言作为统计计算语言的一个强大特性。\n\n10.3.2 函数列表\n\nCodefuns &lt;- list(\n  half = function(x) x / 2,\n  double = function(x) x * 2\n)\nfuns$double(10)\n#&gt; [1] 20\n\n\n\n10.3.3 函数闭包\n在 R 中，你经常会看到称为 闭包（closure） 的函数。\n函数是对象，使用创建函数闭包（function closure）时的即存在的状态值进行封装的函数。\n\nCodetypeof(ggplot)\n#&gt; [1] \"closure\"",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数调用",
    "href": "functions.html#函数调用",
    "title": "\n10  函数\n",
    "section": "\n10.4 函数调用",
    "text": "10.4 函数调用\n\nCodeargs &lt;- list(1:10, na.rm = TRUE)  # 参数列表\ndo.call(mean, args)\n#&gt; [1] 5.5",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#词法作用域",
    "href": "functions.html#词法作用域",
    "title": "\n10  函数\n",
    "section": "\n10.5 词法作用域",
    "text": "10.5 词法作用域\n函数的作用域（scope）在R中称为环境。当一个函数被创建后，R 中存在一个让这个函数发挥作用的环境。\n在启动 R 之后，我们就进去了一个全局环境之中（Global Environment），我们创建的各自变量、函数都会处于其中。\n对象可以通过参数传递到函数中，但不会被函数改变。传递的是对象的副本而不是对象本身。除非使用 &lt;&lt;- 特殊赋值符。\n\nCodex &lt;- 2\ny &lt;- 3\nz &lt;- 4\nf &lt;- function(w){\n    z &lt;- 2\n    x &lt;- w*y*z\n    return(x)\n}\nf(x)\n#&gt; [1] 12\nx\n#&gt; [1] 2\ny\n#&gt; [1] 3\nz\n#&gt; [1] 4\n\n\nLexical scoping:\n\nName masking\nFunctions versus variables\nA fresh start\nDynamic lookup\n\n\n10.5.1 Name masking\n在函数内部定义的名称会掩盖在函数外部定义的名称。\n\nCodex &lt;- 10\ny &lt;- 20\ng02 &lt;- function() {\n  x &lt;- 1\n  y &lt;- 2\n  c(x, y)\n}\ng02()\n#&gt; [1] 1 2\n\n\n如果未在函数中定义名称，则 R 将向上查找。\n\nCodex &lt;- 2\ng03 &lt;- function() {\n  y &lt;- 1\n  c(x, y)\n}\ng03()\n#&gt; [1] 2 1\n\ny\n#&gt; [1] 20",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#惰性求值",
    "href": "functions.html#惰性求值",
    "title": "\n10  函数\n",
    "section": "\n10.6 惰性求值",
    "text": "10.6 惰性求值\nLazy evaluation 是一种将操作延迟到真正需要它的结果时才执行的优化技术。\n惰性求值由称为 promise 或thunk 的数据结构提供支持。\n\n10.6.1 promise\n一个表达式，调用函数的环境，一个值\n\nCodedouble &lt;- function(x) { \n  message(\"Calculating...\")\n  x * 2\n}\n\nh03 &lt;- function(x) {\n  c(x, x)\n}\n\nh03(double(20))\n#&gt; Calculating...\n#&gt; [1] 40 40",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#传递参数",
    "href": "functions.html#传递参数",
    "title": "\n10  函数\n",
    "section": "\n10.7 传递参数",
    "text": "10.7 传递参数\n关键字传参，位置传参\n\n10.7.1 默认参数\n\nCodeh04 &lt;- function(x = 1, y = x * 2, z = a + b) {\n  a &lt;- 10\n  b &lt;- 100\n  \n  c(x, y, z)\n}\nh04()\n#&gt; [1]   1   2 110\n\n# 查看参数的名称和默认值\nargs(h04)\n#&gt; function (x = 1, y = x * 2, z = a + b) \n#&gt; NULL\n\n\n\n10.7.2 缺失参数\n\nCodeh06 &lt;- function(x = 10) {\n  list(missing(x), x)\n}\nstr(h06())\n#&gt; List of 2\n#&gt;  $ : logi TRUE\n#&gt;  $ : num 10\n\nstr(h06(10))\n#&gt; List of 2\n#&gt;  $ : logi FALSE\n#&gt;  $ : num 10",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#特殊参数...",
    "href": "functions.html#特殊参数...",
    "title": "\n10  函数\n",
    "section": "\n10.8 特殊参数...\n",
    "text": "10.8 特殊参数...\n\nvariable arguments，有了它，函数可以接受任意数量的附加参数。还可以将附加参数传递给另一个函数\n\nCodeaddAll &lt;- function(x, ...) {\n  args &lt;- list(...)\n  for (a in args) {\n    x &lt;- x + a\n  }\n  return(x)\n}\naddAll(3, 4, 5, 6, 7, 8)\n#&gt; [1] 33\n\n\n使用list() 将传入的 ... 转换为列表，然后再进行处理\n\nCodei01 &lt;- function(y, z) {\n  list(y = y, z = z)\n}\n\ni02 &lt;- function(x, ...) {\n  i01(...)\n}\nstr(i02(x = 1, y = 2, z = 3))\n#&gt; List of 2\n#&gt;  $ y: num 2\n#&gt;  $ z: num 3\ni02(x = 1, y = 2, z = 3)\n#&gt; $y\n#&gt; [1] 2\n#&gt; \n#&gt; $z\n#&gt; [1] 3\n\n\n特殊形式 ..N，按位置引用参数，使用 ..1、..2 等直接引用 … 对象中的第 1 个元素、第 2 个元素。\n\nCodei03 &lt;- function(...) {\n  list(first = ..1, third = ..3)\n}\nstr(i03(1, 2, 3))\n#&gt; List of 2\n#&gt;  $ first: num 1\n#&gt;  $ third: num 3\n\n\nlist(...)计算参数并将它们存储在列表中\n\nCodei04 &lt;- function(...) {\n  list(...)\n}\nstr(i04(a = 1, b = 2))\n#&gt; List of 2\n#&gt;  $ a: num 1\n#&gt;  $ b: num 2",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#退出函数",
    "href": "functions.html#退出函数",
    "title": "\n10  函数\n",
    "section": "\n10.9 退出函数",
    "text": "10.9 退出函数\n返回一个对象，或者，错误\n\n10.9.1 隐式返回值\n最后计算的表达式是返回值\n\nCodej01 &lt;- function(x) {\n  if (x &lt; 10) {\n    0\n  } else {\n    10\n  }\n}\nj01(5)\n#&gt; [1] 0\n\nj01(15)\n#&gt; [1] 10\n\n\n\n10.9.2 显示返回值\n调用return()\n\nCodej02 &lt;- function(x) {\n  if (x &lt; 10) {\n    return(0)\n  } else {\n    return(10)\n  }\n}\n\n\n\n10.9.3 不可见值\n大多数函数都以可见方式返回：在交互式上下文中调用函数会自动打印结果\n\nCodej03 &lt;- function() 1\nj03()\n#&gt; [1] 1\n\n\n通过应用invisible()于最后一个值来阻止自动打印：\n\nCodej04 &lt;- function() invisible(1)\nj04()\n\n\n若要验证此值是否确实存在，可以显式打印它或将其括在括号中,或者使用返回值和可见性标志：withVisible()\n\nCodeprint(j04())\n#&gt; [1] 1\n\n\n(j04())\n#&gt; [1] 1\n\nwithVisible(j04())\n#&gt; $value\n#&gt; [1] 1\n#&gt; \n#&gt; $visible\n#&gt; [1] FALSE\n\n\n不可见返回的最常见函数是：&lt;-\n\nCodea &lt;- 2\n(a &lt;- 2)\n#&gt; [1] 2\n\na &lt;- b &lt;- c &lt;- d &lt;- 2\n\n\n\n10.9.4 Errors\n如果函数无法完成其分配的任务，则应抛出错误，并立即终止函数的执行。\n\nCodej05 &lt;- function() {\n  stop(\"I'm an error\")\n  return(10)\n}\nj05()\n#&gt; Error in j05(): I'm an error\n\n\n\n10.9.5 退出处理程序\n\nCodej06 &lt;- function(x) {\n  cat(\"Hello\\n\")\n  on.exit(cat(\"Goodbye!\\n\"), add = TRUE) # 使用  add = TRUE 时始终设置\n  \n  if (x) {\n    return(10)\n  } else {\n    stop(\"Error\")\n  }\n}\n\nj06(TRUE)\n#&gt; Hello\n#&gt; Goodbye!\n#&gt; [1] 10\n\n\nj06(FALSE)\n#&gt; Hello\n#&gt; Error in j06(FALSE): Error\n#&gt; Goodbye!",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "functions.html#函数形式",
    "href": "functions.html#函数形式",
    "title": "\n10  函数\n",
    "section": "\n10.10 函数形式",
    "text": "10.10 函数形式\n\nprefix： foofy(a, b, c)\n\ninfix： x + y\n\nreplacement：names(df) &lt;- c(\"a\", \"b\", \"c\")\n\nspecial：[[, if ,for\n\n\n\nCodex + y\n#&gt; [1] 22\n`+`(x, y)\n#&gt; [1] 22\n\nnames(df) &lt;- c(\"x\", \"y\", \"z\")\n#&gt; Error in names(df) &lt;- c(\"x\", \"y\", \"z\"): names() applied to a non-vector\n`names&lt;-`(df, c(\"x\", \"y\", \"z\"))\n#&gt; Error in eval(expr, envir, enclos): names() applied to a non-vector\n\nfor(i in 1:10) print(i)\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n`for`(i, 1:10, print(i))\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n#&gt; [1] 6\n#&gt; [1] 7\n#&gt; [1] 8\n#&gt; [1] 9\n#&gt; [1] 10\n\n\n\n10.10.1 前缀形式\n是 R 代码中最常见的形式，参数按确切名称匹配，然后与唯一前缀匹配，最后按位置匹配。\n\nCodek01 &lt;- function(abcdef, bcde1, bcde2) {\n  list(a = abcdef, b1 = bcde1, b2 = bcde2)\n}\nstr(k01(2, 3, abcdef = 1))\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\nstr(k01(2, 3, a = 1))  # 部分匹配\n#&gt; List of 3\n#&gt;  $ a : num 1\n#&gt;  $ b1: num 2\n#&gt;  $ b2: num 3\noptions(warnPartialMatchArgs = TRUE)\nx &lt;- k01(a = 1, 2, 3)\n#&gt; Warning in k01(a = 1, 2, 3): partial argument match of 'a' to 'abcdef'\n\n\n\n10.10.2 中缀形式\n\nCode`%+%` &lt;- function(a, b) paste0(a, b)\n\"new \" %+% \"string\"\n#&gt; [1] \"new string\"\n\n\n\n10.10.3 替换形式\n\nCode`second&lt;-` &lt;- function(x, value) {\n  x[2] &lt;- value\n  x\n}\nx &lt;- 1:10\nsecond(x) &lt;- 5L\nx\n#&gt;  [1]  1  5  3  4  5  6  7  8  9 10\n\n\n\n10.10.4 特殊形式\n所有特殊形式都作为Primitive functions Section 10.2 实现（即在 C 中），这意味着打印这些函数没有信息。\n\nCode`for`\n#&gt; .Primitive(\"for\")\nformals(`for`)\n#&gt; NULL",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>函数</span>"
    ]
  },
  {
    "objectID": "environments.html",
    "href": "environments.html",
    "title": "\n11  环境\n",
    "section": "",
    "text": "11.1 基础知识",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#基础知识",
    "href": "environments.html#基础知识",
    "title": "\n11  环境\n",
    "section": "",
    "text": "每个环境名称都必须是唯一的。\n环境中的名称不按顺序排列。\n环境有其父级。\n修改时不会复制环境。\n\n\n11.1.1 创建环境\n环境的工作是将一组名称关联或绑定（bind）到一组值。\n\nCodelibrary(rlang)\n\n# name-value pairs\ne1 &lt;- rlang::env(\n  a = FALSE,\n  b = \"a\",\n  c = 2.3,\n  d = 1:3,\n)\n\n\n# 绑定自身\ne1$d &lt;- e1\n\n# 只显示内存地址\ne1 \n#&gt; &lt;environment: 0x00000191c9b659b0&gt;\n\n# \nenv_print(e1)\n#&gt; &lt;environment: 0x00000191c9b659b0&gt;\n#&gt; Parent: &lt;environment: global&gt;\n#&gt; Bindings:\n#&gt; • a: &lt;lgl&gt;\n#&gt; • b: &lt;chr&gt;\n#&gt; • c: &lt;dbl&gt;\n#&gt; • d: &lt;env&gt;\nenv_names(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\nnames(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\n\n\nnew.env() 也可用于创建新环境。 hash size\n\nCodemy_env &lt;- base::new.env(parent = emptyenv())\nmy_env$a &lt;- 1\n\n\n\n11.1.2 current_env() global_env()\n\n\nCodeidentical(global_env(), current_env())\n#&gt; [1] TRUE\n\n# 环境不是向量\nglobal_env() == current_env() \n#&gt; Error in global_env() == current_env(): comparison (==) is possible only for atomic and list types\n\n\n\nCode# 访问全局环境\nglobalenv()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n# 访问当前环境\nenvironment()\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n\n11.1.3 父环境\n每个环境都有一个父环境（parent）。父级是用于实现词法作用域的：如果在环境中找不到名称，则 R 将在其父级中查找（依此类推）。可以通过向 env() 提供未命名的参数来设置父环境。如果不提供它，它将默认为当前环境。\n\nCodee2a &lt;- env(d = 4, e = 5)\ne2b &lt;- env(e2a, a = 1, b = 2, c = 3)\n\n\n\n\n\n\ne2a 是 e2b 的父级。\n\nCode# 查看父级\ne2a\n#&gt; &lt;environment: 0x00000191ca5ac458&gt;\nenv_parent(e2b)\n#&gt; &lt;environment: 0x00000191ca5ac458&gt;\nenv_parent(e2a)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n只有一个环境没有父环境：空( empty)环境。\n\nCodee2c &lt;- env(empty_env(), d = 4, e = 5)\ne2d &lt;- env(e2c, a = 1, b = 2, c = 3)\n\n\n\n\n\n\n每个环境的父级最终都会随着空环境而终止。\n\nCode# 查看所有父级\nenv_parents(e2d)\n#&gt; [[1]]   &lt;env: 0x00000191c716bbc8&gt;\n#&gt; [[2]] $ &lt;env: empty&gt;\ne2c\n#&gt; &lt;environment: 0x00000191c716bbc8&gt;\nenv_parents(e2c)\n#&gt; [[1]] $ &lt;env: empty&gt;\n\n\n默认情况下，当到达全局环境时停止。如果覆盖默认行为，则可以看到全局环境的父级包括每个加载的包。\n\nCodee2a\n#&gt; &lt;environment: 0x00000191ca5ac458&gt;\nenv_parents(e2b)\n#&gt; [[1]]   &lt;env: 0x00000191ca5ac458&gt;\n#&gt; [[2]] $ &lt;env: global&gt;\nenv_parents(e2b, last = empty_env())\n#&gt;  [[1]]   &lt;env: 0x00000191ca5ac458&gt;\n#&gt;  [[2]] $ &lt;env: global&gt;\n#&gt;  [[3]] $ &lt;env: .conflicts&gt;\n#&gt;  [[4]] $ &lt;env: package:rlang&gt;\n#&gt;  [[5]] $ &lt;env: package:writexl&gt;\n#&gt;  [[6]] $ &lt;env: package:readxl&gt;\n#&gt;  [[7]] $ &lt;env: package:patchwork&gt;\n#&gt;  [[8]] $ &lt;env: package:stats&gt;\n#&gt;  [[9]] $ &lt;env: package:graphics&gt;\n#&gt; [[10]] $ &lt;env: package:grDevices&gt;\n#&gt; [[11]] $ &lt;env: package:utils&gt;\n#&gt; [[12]] $ &lt;env: package:datasets&gt;\n#&gt; [[13]] $ &lt;env: package:BiocManager&gt;\n#&gt; [[14]] $ &lt;env: package:lubridate&gt;\n#&gt; [[15]] $ &lt;env: package:forcats&gt;\n#&gt; [[16]] $ &lt;env: package:stringr&gt;\n#&gt; [[17]] $ &lt;env: package:dplyr&gt;\n#&gt; [[18]] $ &lt;env: package:purrr&gt;\n#&gt; [[19]] $ &lt;env: package:readr&gt;\n#&gt; [[20]] $ &lt;env: package:tidyr&gt;\n#&gt; ... and 8 more environments\n\n\n\n11.1.4 超级赋值 &lt;&lt;-\n\n常规赋值 &lt;- 始终在当前环境中创建绑定一个变量\n超级赋值 &lt;&lt;- ，重新绑定当前环境的父级中的现有名称\n\nCodex &lt;- 0\nf &lt;- function() {\n  x &lt;&lt;- 1\n}\nf()\nx\n#&gt; [1] 1\n\n\n\n11.1.5 访问对象\n\nCode# \nnames(e1)\n#&gt; [1] \"a\" \"b\" \"c\" \"d\"\ne1$a\n#&gt; [1] FALSE\ne1[[\"a\"]]\n#&gt; [1] FALSE\n\n# error  无顺序，不能用数字索引\ne1[[1]]\n#&gt; Error in e1[[1]]: wrong arguments for subsetting an environment\n\ne1$zxc  # NULL\n#&gt; NULL\n\nenv_get(e1, \"zxc\")\n#&gt; Error in `env_get()`:\n#&gt; ! Can't find `zxc` in environment.\nenv_get(e1, \"zxc\", default = NA)\n#&gt; [1] NA\n\n\n\n11.1.6 绑定对象\n\nCode\n# 单个\nenv_poke(e1, \"e\", 100)\ne1$e\n#&gt; [1] 100\n\n# 多个\nenv_bind(e1, x = 10, y = 20)\nenv_names(e1)\n#&gt; [1] \"x\" \"y\" \"a\" \"b\" \"c\" \"d\" \"e\"\n\n\n\n11.1.7 解绑定对象\n\nCodee1$x &lt;- NULL  # 不能删除\nenv_has(e1, \"x\")\n#&gt;    x \n#&gt; TRUE\nenv_unbind(e1, \"x\") # 解绑定\nenv_has(e1, \"x\")\n#&gt;     x \n#&gt; FALSE\n\n\n\n11.1.8 高级绑定\ndelayed bindings autoload()允许 R 包提供行为类似于加载内存中的数据集\n\nCode# 延迟绑定会创建 promise\nenv_bind_lazy(current_env(), b = {Sys.sleep(1); 1})\nsystem.time(print(b))\n#&gt; [1] 1\n#&gt;    user  system elapsed \n#&gt;    0.00    0.00    1.02\n\nsystem.time(print(b))\n#&gt; [1] 1\n#&gt;    user  system elapsed \n#&gt;       0       0       0\n\n\nactive bindings 每次访问它们时都会重新计算，主要用于实现 R6 的活动字段\n\nCodeenv_bind_active(current_env(), z1 = function(val) runif(1))\nz1\n#&gt; [1] 0.04254753\nz1\n#&gt; [1] 0.4636537",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#在环境中递归recurse",
    "href": "environments.html#在环境中递归recurse",
    "title": "\n11  环境\n",
    "section": "\n11.2 在环境中递归（recurse）",
    "text": "11.2 在环境中递归（recurse）\n\n11.2.1 递归\n\nCodef_recur &lt;- function(..., env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # base case\n  } else if (success) {\n    # success case\n  } else {\n    # recursive case\n    f(..., env = env_parent(env))\n  }\n}\n\n\n\nCodewhere &lt;- function(name, env = caller_env()) {\n  if (identical(env, empty_env())) {\n    # Base case\n    stop(\"Can't find \", name, call. = FALSE)\n  } else if (env_has(env, name)) {\n    # Success case\n    env\n  } else {\n    # Recursive case\n    where(name, env_parent(env))\n  }\n}\n\n\n\nCodee3a &lt;- env(empty_env(), a = 1, b = 2)\ne3b &lt;- env(e3a, x = 10, a = 11)\n\n\n\n\n\n\n\nCodewhere(\"a\", e3b)\n#&gt; &lt;environment: 0x00000191c9bbec88&gt;\n\nwhere(\"b\", e3b)\n#&gt; &lt;environment: 0x00000191c9c69420&gt;\ne3a\n#&gt; &lt;environment: 0x00000191c9c69420&gt;\n\nwhere(\"c\", e3b)\n#&gt; Error: Can't find c\n\n\n\n11.2.2 迭代iteration\n\nCodef_iter &lt;- function(..., env = caller_env()) {\n  while (!identical(env, empty_env())) {\n    if (success) {\n      # success case\n      return()\n    }\n    # inspect parent\n    env &lt;- env_parent(env)\n  }\n\n  # base case\n}",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#特殊环境",
    "href": "environments.html#特殊环境",
    "title": "\n11  环境\n",
    "section": "\n11.3 特殊环境",
    "text": "11.3 特殊环境\n大多数环境是由 R 创建的\n\n11.3.1 软件包环境和搜索路径\n\n\n\n\n搜索路径：R_EmptyEnv→pkgs→R_GlobalENV\n\nCodebase::search()\n#&gt;  [1] \".GlobalEnv\"          \".conflicts\"          \"package:rlang\"      \n#&gt;  [4] \"package:writexl\"     \"package:readxl\"      \"package:patchwork\"  \n#&gt;  [7] \"package:stats\"       \"package:graphics\"    \"package:grDevices\"  \n#&gt; [10] \"package:utils\"       \"package:datasets\"    \"package:BiocManager\"\n#&gt; [13] \"package:lubridate\"   \"package:forcats\"     \"package:stringr\"    \n#&gt; [16] \"package:dplyr\"       \"package:purrr\"       \"package:readr\"      \n#&gt; [19] \"package:tidyr\"       \"package:tibble\"      \"package:ggplot2\"    \n#&gt; [22] \"package:tidyverse\"   \"package:conflicted\"  \"package:methods\"    \n#&gt; [25] \"Autoloads\"           \"package:base\"\nrlang::search_envs()\n#&gt;  [[1]] $ &lt;env: global&gt;\n#&gt;  [[2]] $ &lt;env: .conflicts&gt;\n#&gt;  [[3]] $ &lt;env: package:rlang&gt;\n#&gt;  [[4]] $ &lt;env: package:writexl&gt;\n#&gt;  [[5]] $ &lt;env: package:readxl&gt;\n#&gt;  [[6]] $ &lt;env: package:patchwork&gt;\n#&gt;  [[7]] $ &lt;env: package:stats&gt;\n#&gt;  [[8]] $ &lt;env: package:graphics&gt;\n#&gt;  [[9]] $ &lt;env: package:grDevices&gt;\n#&gt; [[10]] $ &lt;env: package:utils&gt;\n#&gt; [[11]] $ &lt;env: package:datasets&gt;\n#&gt; [[12]] $ &lt;env: package:BiocManager&gt;\n#&gt; [[13]] $ &lt;env: package:lubridate&gt;\n#&gt; [[14]] $ &lt;env: package:forcats&gt;\n#&gt; [[15]] $ &lt;env: package:stringr&gt;\n#&gt; [[16]] $ &lt;env: package:dplyr&gt;\n#&gt; [[17]] $ &lt;env: package:purrr&gt;\n#&gt; [[18]] $ &lt;env: package:readr&gt;\n#&gt; [[19]] $ &lt;env: package:tidyr&gt;\n#&gt; [[20]] $ &lt;env: package:tibble&gt;\n#&gt; ... and 6 more environments\n\n\n搜索路径上的最后两个环境始终相同：\n\n环境Autoloads使用延迟绑定来节省内存，仅通过需要时加载包对象（如大型数据集）节省内存 。\n基本环境package:base，是 base package 的环，它能够引导所有其他包的加载。访问base_env()\n\n请注意，当您附加另一个包时，全局环境的父环境会发生变化：\n\n\n\n\n\n11.3.2 函数环境\n函数在创建时绑定当前环境，称为函数环境，用于词法作用域。在计算机语言中，捕获（或封闭）其环境的函数被称为闭包 closures 。\n访问函数环境\n\nCodey &lt;- 1\nf &lt;- function(x) x + y\nfn_env(f)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\n\n\n\n\n\n\nCodee &lt;- env()  # 绑定当前环境为父级\nenv_parent(e)\n#&gt; &lt;environment: R_GlobalEnv&gt;\n\ne$g &lt;- function() 1  # g绑定在e中\n\n\n\n11.3.3 命名空间\n命名空间 （namespaces） 的目标是确保以不同的顺序加载包，包将找到相同的功能，并且无论用户附加什么包，每个包的工作方式都相同。\n\nCodesd\n#&gt; function (x, na.rm = FALSE) \n#&gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), \n#&gt;     na.rm = na.rm))\n#&gt; &lt;bytecode: 0x00000191d043cca8&gt;\n#&gt; &lt;environment: namespace:stats&gt;\n\n\n包中的每个函数都与一对环境相关联：前面的包环境和命名空间环境。\n\n包环境是包的外部接口。\n命名空间环境是包的内部接口。\n\n包环境控制我们如何找到函数;命名空间控制函数查找其变量的方式。\n包环境中的每个绑定也可以在命名空间环境中找到。\n每个命名空间都有一个import环境，import环境的父级是base namespace，基本命名空间的父级是全局环境。\n\n\n\n\n\n11.3.4 执行环境\n执行环境是函数环境的子级，由函数的创建位置决定。\n\nCodeg &lt;- function(x) {\n  if (!env_has(current_env(), \"a\")) {\n    message(\"Defining a\")\n    a &lt;- 1\n  } else {\n    a &lt;- a + 1\n  }\n  a\n}\n\n\n\nCode# A fresh start principle\ng(10)\n#&gt; [1] 1\ng(10)\n#&gt; [1] 1\n\n\n每次调用函数时，都会创建一个新环境来托管执行。这称为执行环境（execution environment），其父级是函数环境 Figure 11.1 。\n\nCodeh &lt;- function(x) {\n  # 1.\n  a &lt;- 2 # 2.\n  x + a\n}\ny &lt;- h(1) # 3.\n\n\n\n\n\n\n\nFigure 11.1\n\n\n执行环境通常是短暂的;函数完成后，环境将被垃圾回收（garbage collected）。",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "environments.html#call-stacks",
    "href": "environments.html#call-stacks",
    "title": "\n11  环境\n",
    "section": "\n11.4 Call stacks",
    "text": "11.4 Call stacks\ncaller environment\nrlang::caller_env() 提供了调用函数的环境。\n调用栈（call stacks）由 frames 组成。调用栈是由调用函数的位置创建的。\n\nCodef &lt;- function(x) {\n  g(x = 2)\n}\ng &lt;- function(x) {\n  h(x = 3)\n}\nh &lt;- function(x) {\n  stop()\n}\n\n\n在 R 中最常查看调用栈的方式是查看错误发生后的情况：traceback()\n\nCodef(x = 1)\n#&gt; Error in h(x = 3):\ntraceback()\n#&gt; No traceback available\n\n\n使用 lobstr::cst()从头开始 来理解调用栈, call stack tree Figure 11.2\n\nCodeh &lt;- function(x) {\n  lobstr::cst()\n}\nf(x = 1)\n#&gt;     ▆\n#&gt;  1. └─global f(x = 1)\n#&gt;  2.   └─global g(x = 2)\n#&gt;  3.     └─global h(x = 3)\n#&gt;  4.       └─lobstr::cst()\n\n\n\n11.4.1 frames\n调用栈的每个元素都是一个frame，也称为 evaluation context。Frames 是一个极其重要的内部数据结构，R 代码只能访问它的一小部分，因为篡改它会破坏 R。\nframe 有三个关键组件：\n\n给出函数调用的表达式（标有expr ）\n环境（标记为env ）\n父级，调用栈中的上一个调用（由灰色箭头显示）\n\n\n\n\n\n\nFigure 11.2\n\n\n\n11.4.2 Dynamic scope\n在调用栈中而不是在封闭环境中查找变量称为dynamic scoping 。",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>环境</span>"
    ]
  },
  {
    "objectID": "exception_handling.html",
    "href": "exception_handling.html",
    "title": "\n12  异常处理\n",
    "section": "",
    "text": "12.1 error\n停止执行并返回到顶部\nCodeh &lt;- function() stop(\"This is an error!\")\nh()\n#&gt; Error in h(): This is an error!\n\n# 不包含调用信息\nh &lt;- function() stop(\"This is an error!\", call. = FALSE)\nh()\n#&gt; Error: This is an error!\n\nh &lt;- function() rlang::abort(\"This is an error!\")\nh()\n#&gt; Error in `h()`:\n#&gt; ! This is an error!",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#warning",
    "href": "exception_handling.html#warning",
    "title": "\n12  异常处理\n",
    "section": "\n12.2 warning",
    "text": "12.2 warning\n捕获警告并聚合显示\n\n要使警告立即显示，请设置 options(warn = 1)\n要将警告转换为错误，请设置 options(warn = 2)。这通常是 调试警告的最简单方法，因为一旦出现错误，就可以 使用工具，例如查找源头traceback()\n使用 options(warn = 0)恢复默认行为。\n\n\nCodefw &lt;- function() {\n  cat(\"1\\n\")\n  warning(\"W1\")\n  cat(\"2\\n\")\n  warning(\"W2\")\n  cat(\"3\\n\")\n  warning(\"W3\",call. = FALSE)\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3\n\nfw &lt;- function() {\n  cat(\"1\\n\")\n  rlang::warn(\"W1\")\n  cat(\"2\\n\")\n  rlang::warn(\"W2\")\n  cat(\"3\\n\")\n  rlang::warn(\"W3\")\n}\nfw()\n#&gt; 1\n#&gt; 2\n#&gt; 3",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#message",
    "href": "exception_handling.html#message",
    "title": "\n12  异常处理\n",
    "section": "\n12.3 message",
    "text": "12.3 message\n消息立即显示\n参数quiet = TRUE 抑制所有消息suppressMessages()\n\nCode# 无 call. 参数\nfm &lt;- function() {\n  cat(\"1\\n\")\n  message(\"M1\")\n  cat(\"2\\n\")\n  message(\"M2\")\n  cat(\"3\\n\")\n  message(\"M3\")\n}\n\nfm()\n#&gt; 1\n#&gt; 2\n#&gt; 3",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#忽略信息",
    "href": "exception_handling.html#忽略信息",
    "title": "\n12  异常处理\n",
    "section": "\n12.4 忽略信息",
    "text": "12.4 忽略信息\n\n\n忽略错误：try()，最好是使用tryCatch()\n\nCodedefault &lt;- NULL\ntry(default=read.csv(\"possibly-bad-input.csv\"), silent = FALSE)\n#&gt; Error in try(default = read.csv(\"possibly-bad-input.csv\"), silent = FALSE): unused argument (default = read.csv(\"possibly-bad-input.csv\"))\n\n\n\n\n忽略警告。suppressWarnings()\n\nCodesuppressWarnings({\n    warning(\"Uhoh!\")\n    warning(\"Another warning\")\n    1\n})\n#&gt; [1] 1\n\n\n\n\n忽略消息。suppressMessages()\n\nCodesuppressMessages({\n    message(\"Hello there\")\n    \"ABC\"\n})\n#&gt; [1] \"ABC\"",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#条件处理程序",
    "href": "exception_handling.html#条件处理程序",
    "title": "\n12  异常处理\n",
    "section": "\n12.5 条件处理程序",
    "text": "12.5 条件处理程序\n\n12.5.1 条件对象\n\nCodecnd &lt;- rlang::catch_cnd(stop(\"An error\"))\nstr(cnd)\n#&gt; List of 2\n#&gt;  $ message: chr \"An error\"\n#&gt;  $ call   : language force(expr)\n#&gt;  - attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n\nconditionMessage(cnd)\n#&gt; [1] \"An error\"\nconditionCall(cnd)\n#&gt; force(expr)\n\n\n\n12.5.2 退出处理程序\ntryCatch()定义exitinghandlers，，通常用于处理错误情况。它允许您覆盖默认的错误行为。\n\nCodetryCatch(\n  error = function(cnd) {\n    # code to run when error is thrown\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nCodef3 &lt;- function(x) {\n  tryCatch(\n    error = function(cnd) NA,\n    log(x)\n  )\n}\n\nf3(\"x\")\n#&gt; [1] NA\n\n\n在发出条件信号后，控制权将传递给处理程序，并且永远不会返回到原始代码，这实际上意味着代码退出\n\nCodetryCatch(\n  message = function(cnd) \"There\",\n  {\n    message(\"Here\")\n    stop(\"This code is never run!\")\n  }\n)\n#&gt; [1] \"There\"\n\n\n类似Python的\ntry: \n    {}\nfinally:\n    {}\n\nCodetryCatch(\n  {\n    write.table(\"Hi!\", \"data/异常处理.csv\")\n  },\n  finally = {\n    # always run\n    x &lt;- read.table(\"data/异常处理.csv\")\n    print(\"你好\")\n  }\n)\n#&gt; [1] \"你好\"\n\n\n\n12.5.3 调用处理程序\nwithCallingHandlers()定义callinghandlers，适合处理非错误条件，一旦处理程序返回，代码执行将正常继续\n\nCodewithCallingHandlers(\n  warning = function(cnd) {\n    # code to run when warning is signalled\n  },\n  message = function(cnd) {\n    # code to run when message is signalled\n  },\n  code_to_run_while_handlers_are_active\n)\n\n\n\nCodetryCatch(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n\n\nwithCallingHandlers(\n  message = function(cnd) cat(\"Caught a message!\\n\"), \n  {\n    message(\"Someone there?\")\n    message(\"Why, yes!\")\n  }\n)\n#&gt; Caught a message!\n#&gt; Caught a message!",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "exception_handling.html#自定义条件",
    "href": "exception_handling.html#自定义条件",
    "title": "\n12  异常处理\n",
    "section": "\n12.6 自定义条件",
    "text": "12.6 自定义条件\n\nCodelibrary(rlang)\n\nmy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort(paste0(\n      \"`x` must be a numeric vector; not \", typeof(x), \".\"\n    ))\n  }\n  if (!is.numeric(base)) {\n    abort(paste0(\n      \"`base` must be a numeric vector; not \", typeof(base), \".\"\n    ))\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nCodemy_log(letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `x` must be a numeric vector; not character.\nmy_log(1:10, base = letters)\n#&gt; Error in `my_log()`:\n#&gt; ! `base` must be a numeric vector; not character.\n\n\n\nCodeabort_bad_argument &lt;- function(arg, must, not = NULL) {\n  msg &lt;- glue::glue(\"`{arg}` must {must}\")\n  if (!is.null(not)) {\n    not &lt;- typeof(not)\n    msg &lt;- glue::glue(\"{msg}; not {not}.\")\n  }\n  \n  abort(\"error_bad_argument\", \n    message = msg, \n    arg = arg, \n    must = must, \n    not = not\n  )\n}\n\nstop_custom &lt;- function(.subclass, message, call = NULL, ...) {\n  err &lt;- structure(\n    list(\n      message = message,\n      call = call,\n      ...\n    ),\n    class = c(.subclass, \"error\", \"condition\")\n  )\n  stop(err)\n}\n\nerr &lt;- catch_cnd(\n  stop_custom(\"error_new\", \"This is a custom error\", x = 10)\n)\nclass(err)\n#&gt; [1] \"error_new\" \"error\"     \"condition\"\nerr$x\n#&gt; [1] 10\n\n\n重写my_log\n\nCodemy_log &lt;- function(x, base = exp(1)) {\n  if (!is.numeric(x)) {\n    abort_bad_argument(\"x\", must = \"be numeric\", not = x)\n  }\n  if (!is.numeric(base)) {\n    abort_bad_argument(\"base\", must = \"be numeric\", not = base)\n  }\n\n  base::log(x, base = base)\n}\n\n\n\nCodemy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.\nmy_log(letters)\n#&gt; Error in `abort_bad_argument()`:\n#&gt; ! `x` must be numeric; not character.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>异常处理</span>"
    ]
  },
  {
    "objectID": "efficient.html",
    "href": "efficient.html",
    "title": "\n13  高效\n",
    "section": "",
    "text": "13.1 向量化编程",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#data.table",
    "href": "efficient.html#data.table",
    "title": "\n13  高效\n",
    "section": "\n13.2 data.table",
    "text": "13.2 data.table\n\ndata.table",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#arrow",
    "href": "efficient.html#arrow",
    "title": "\n13  高效\n",
    "section": "\n13.3 arrow",
    "text": "13.3 arrow\n\narrow.apache.R",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#稀疏矩阵",
    "href": "efficient.html#稀疏矩阵",
    "title": "\n13  高效\n",
    "section": "\n13.4 稀疏矩阵",
    "text": "13.4 稀疏矩阵\n稀疏矩阵(Sparse matrices)对象仅存储非零元素，更节省内存\n\nCodelibrary(\"Matrix\")\nN = 100\n\nm = diag(1, N, N)\nsp = sparseMatrix(1:N, 1:N, x = 1)\n \nobject.size(m)\n#&gt; 80216 bytes\nobject.size(sp)\n#&gt; 3104 bytes",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#硬件",
    "href": "efficient.html#硬件",
    "title": "\n13  高效\n",
    "section": "\n13.5 硬件",
    "text": "13.5 硬件\n\nCodelibrary(\"benchmarkme\")\n\n\n1字节（byte）= 8位（bit） 二进制数 = 1个 ASCII 字符。\nInternational System of Units (SI)\n1 kilobyte (kB) =(2^{10}) bytes\n1 megabyte (MB) = (2{10}) kilobytes= (2{20}) bytes\n\nCode# 随机存取存储器 Random access memory,RAM\nbenchmarkme::get_ram()\n#&gt; 6.32 GB\n\n\nstandard hard disk drives (HDDs)\nSolid state drives (SSDs)\n\nCode# 操作系统 2^8\n.Machine$sizeof.pointer\n#&gt; [1] 8\n\n\n\nCode# CPU\nres = benchmark_std() \nplot(res)\n\n\n\n\n\n\n#&gt; Press return to get next plot\n\n\n\n\n\n\n#&gt; Press return to get next plot",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#并行化",
    "href": "efficient.html#并行化",
    "title": "\n13  高效\n",
    "section": "\n13.6 并行化",
    "text": "13.6 并行化\nparallelization\nParallel computing\n\nCodelibrary(\"parallel\")\nno_of_cores = detectCores()\nno_of_cores\n#&gt; [1] 8\n\n\nparLapply（cl， x， FUN， ...）\nparApply（cl = NULL， X， MARGIN， FUN， ...）\nparSapply（cl = NULL， X， FUN， ...， simplify = TRUE， USE.NAMES = TRUE)\nmakeCluster()此函数指定要使用的处理器数量\n\nCodelibrary(\"parallel\")\n\n\nN = 10^4\nsapply(1:N, sd)\n\ncl = makeCluster(4)\nparSapply(cl, 1:N, sd)\nstopCluster(cl)",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#rcpp",
    "href": "efficient.html#rcpp",
    "title": "\n13  高效\n",
    "section": "\n13.7 Rcpp",
    "text": "13.7 Rcpp\nRcpp\nRcpp sugar\nNumericVector IntegerVector CharacterVector LogicalVector\nNumericMatrix IntegerMatrix CharacterMatrix LogicalMatrix\n\nCodelibrary(Rcpp)\nsourceCpp(\"function/add_cpp.cpp\")\n#&gt; \n#&gt; &gt; add_cpp(1, 2)\n#&gt; [1] 3\n\nadd_cpp(2,34.5)\n#&gt; [1] 36.5\n\nsourceCpp(\"function/mean_cpp.cpp\")\n#&gt; \n#&gt; &gt; x = c(1, 2, 3, 4, 5)\n#&gt; \n#&gt; &gt; mean_cpp(x)\n#&gt; [1] 3",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "efficient.html#rcpp-sugar",
    "href": "efficient.html#rcpp-sugar",
    "title": "\n13  高效\n",
    "section": "\n13.8 Rcpp sugar",
    "text": "13.8 Rcpp sugar",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>高效</span>"
    ]
  },
  {
    "objectID": "functionals.html",
    "href": "functionals.html",
    "title": "\n14  泛函\n",
    "section": "",
    "text": "14.1 map 变体\nmap 的基本构造如下，实际上是用 C 语言编写的，以节省性能，保留名称，并支持一些快捷方式。\nCodesimple_map &lt;- function(x, f, ...) {\n  out &lt;- vector(\"list\", length(x)) # 分配一个与输入长度相同的列表\n  for (i in seq_along(x)) {        # 用 for 循环填充列表\n    out[[i]] &lt;- f(x[[i]], ...)\n  }\n  out\n}",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "functionals.html#map-变体",
    "href": "functionals.html#map-变体",
    "title": "\n14  泛函\n",
    "section": "",
    "text": "参数 \\ 返回\n列表\n原子\n同类型\n无\n\n\n\n一个参数\nmap()\n\nmap_lgl(), …\nmodify()\nwalk()\n\n\n两个参数\nmap2()\n\nmap2_lgl(), …\nmodify2()\nwalk2()\n\n\n一个参数 + 索引\nimap()\n\nimap_lgl(), …\nimodify()\niwalk()\n\n\nN 个参数\npmap()\n\npmap_lgl(), …\n—\npwalk()\n\n\n\n\n\n\n14.1.1 返回列表\npurrr::map(1:3,f) 接受一个向量和一个函数，为向量的每个元素调用一次函数，并在列表中返回结果，等价于list(f(1), f(2), f(3))\n\nCodetriple &lt;- function(x) x * 3\nmap(1:3, triple)\n#&gt; [[1]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 6\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 9\n\n\n\n14.1.2 返回原子向量\nmap_lgl()、map_int()、map_dbl()、map_chr() 每个都返回一个指定类型的原子向量\n\nCodemap_chr(mtcars, typeof) \n#&gt;      mpg      cyl     disp       hp     drat       wt     qsec       vs \n#&gt; \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" \n#&gt;       am     gear     carb \n#&gt; \"double\" \"double\" \"double\"\nmap_lgl(mtcars, is.double)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt; TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nn_unique &lt;- function(x)length(unique(x)) \nmap_int(mtcars, n_unique)  \n#&gt;  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb \n#&gt;   25    3   27   22   22   29   30    2    2    3    6\n\nmap_dbl(mtcars, mean)\n#&gt;        mpg        cyl       disp         hp       drat         wt       qsec \n#&gt;  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n#&gt;         vs         am       gear       carb \n#&gt;   0.437500   0.406250   3.687500   2.812500\n\n\n\nCodeby_cyl &lt;- split(mtcars, mtcars$cyl)\nby_cyl %&gt;% \n  map(~ lm(mpg ~ wt, data = .x)) %&gt;% \n  map(coef) %&gt;% \n  map_dbl(2)\n#&gt;         4         6         8 \n#&gt; -5.647025 -2.780106 -2.192438\n\n\n\n14.1.3 返回与输入类型相同的输出：modify()\n\n\nCodedf &lt;- data.frame(\n  x = 1:3,\n  y = 6:4\n)\n\n# 返回列表\nmap(df, ~ .x * 2)\n#&gt; $x\n#&gt; [1] 2 4 6\n#&gt; \n#&gt; $y\n#&gt; [1] 12 10  8\n\n# 返回数据框\nmodify(df, ~ .x * 2)\n\n\n\n\nx\ny\n\n\n\n2\n12\n\n\n4\n10\n\n\n6\n8\n\n\n\n\n\n\n\n14.1.4 无返回\n某些函数主要是为了它们的副作用（如cat()、write_csv()、ggsave()）而被调用，并且捕获和存储它们的结果是没有意义的。\n\nCodewelcome &lt;- function(x) {\n  cat(\"Welcome \", x, \"!\\n\", sep = \"\")\n}\nnames &lt;- c(\"Hadley\", \"Jenny\")\nmap(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n#&gt; [[1]]\n#&gt; NULL\n#&gt; \n#&gt; [[2]]\n#&gt; NULL\n\n\n\nCodewalk(names, welcome)\n#&gt; Welcome Hadley!\n#&gt; Welcome Jenny!\n\n\n\nCodecyls &lt;- split(mtcars, mtcars$cyl)\npaths &lt;- paste0(\"data/cyl-\", names(cyls), \".csv\")\nwalk2(cyls, paths, write.csv)\n\n\n等价于write.csv(cyls[[1]]paths[[1]])、write.csv(cyls[[2]],paths[[2]])\nwrite.csv(cyls[[3]], paths[[3]])\n\n14.1.5 两个输入\n\nCodeset.seed(10)\nxs &lt;- map(1:8, ~ runif(10))\n\n\n# 权重\nset.seed(100)\nws &lt;- map(1:8, ~ rpois(10, 5) + 1)\n\nxs[[1]][[1]] &lt;- NA\nxs\n#&gt; [[1]]\n#&gt;  [1]         NA 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n#&gt;  [7] 0.27453052 0.27230507 0.61582931 0.42967153\n#&gt; \n#&gt; [[2]]\n#&gt;  [1] 0.65165567 0.56773775 0.11350898 0.59592531 0.35804998 0.42880942\n#&gt;  [7] 0.05190332 0.26417767 0.39879073 0.83613414\n#&gt; \n#&gt; [[3]]\n#&gt;  [1] 0.8647212 0.6153524 0.7751099 0.3555687 0.4058500 0.7066469 0.8382877\n#&gt;  [8] 0.2395891 0.7707715 0.3558977\n#&gt; \n#&gt; [[4]]\n#&gt;  [1] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n#&gt;  [7] 0.82265258 0.95465365 0.68544451 0.50050323\n#&gt; \n#&gt; [[5]]\n#&gt;  [1] 0.27548386 0.22890394 0.01443391 0.72896456 0.24988047 0.16118328\n#&gt;  [7] 0.01704265 0.48610035 0.10290017 0.80154700\n#&gt; \n#&gt; [[6]]\n#&gt;  [1] 0.3543281 0.9364325 0.2458664 0.4731415 0.1915609 0.5832220 0.4594732\n#&gt;  [8] 0.4674340 0.3998326 0.5052856\n#&gt; \n#&gt; [[7]]\n#&gt;  [1] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n#&gt;  [7] 0.57335645 0.44750805 0.08380201 0.21913855\n#&gt; \n#&gt; [[8]]\n#&gt;  [1] 0.07557029 0.53442678 0.64135658 0.52573932 0.03928139 0.54585984\n#&gt;  [7] 0.37276310 0.96130241 0.25734157 0.20795168\n\n# 未加权均值\nmap_dbl(xs, mean)\n#&gt; [1]        NA 0.4266693 0.5927795 0.5831959 0.3066440 0.4616577 0.3930824\n#&gt; [8] 0.4161593\n# 加权均值  weighted.mean()\nmap2_dbl(xs, ws, weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\nmap2_dbl(xs, ws, weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\n14.1.6 遍历值和索引\n\nimap(x, f)等价于map2(x, names(x), f)、map2(x, seq_along(x), f)\nimap()通常可用于构建标签：\n\nCodeimap_chr(iris, ~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\nmap2_chr(iris,names(iris),~ paste0(\"The first value of \", .y, \" is \", .x[[1]]))\n#&gt;                             Sepal.Length \n#&gt; \"The first value of Sepal.Length is 5.1\" \n#&gt;                              Sepal.Width \n#&gt;  \"The first value of Sepal.Width is 3.5\" \n#&gt;                             Petal.Length \n#&gt; \"The first value of Petal.Length is 1.4\" \n#&gt;                              Petal.Width \n#&gt;  \"The first value of Petal.Width is 0.2\" \n#&gt;                                  Species \n#&gt;   \"The first value of Species is setosa\"\n\n\n如果向量未命名，则第二个参数将是索引：\n\nCodex &lt;- map(1:6, ~ sample(1000, 10))\nimap_chr(x, ~ paste0(\"The maximum value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The maximum value of 1 is 965\" \"The maximum value of 2 is 978\"\n#&gt; [3] \"The maximum value of 3 is 949\" \"The maximum value of 4 is 871\"\n#&gt; [5] \"The maximum value of 5 is 843\" \"The maximum value of 6 is 848\"\nmap2_chr(x,seq_along(x), ~ paste0(\"The highest value of \", .y, \" is \", max(.x)))\n#&gt; [1] \"The highest value of 1 is 965\" \"The highest value of 2 is 978\"\n#&gt; [3] \"The highest value of 3 is 949\" \"The highest value of 4 is 871\"\n#&gt; [5] \"The highest value of 5 is 843\" \"The highest value of 6 is 848\"\n\n\n\n14.1.7 任意数量的输入\n\nmap2(x, y, f ) 等价于 pmap(list(x, y), f)\n\nCodepmap_dbl(list(xs, ws), weighted.mean)\n#&gt; [1]        NA 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\npmap_dbl(list(xs, ws), weighted.mean, na.rm = TRUE)\n#&gt; [1] 0.3479728 0.4590300 0.5834602 0.5998278 0.3067582 0.4448242 0.3947274\n#&gt; [8] 0.4418898\n\n\n\nCode# 命名列表 调用函数\nparams &lt;- tibble::tribble(\n  ~ n, ~ min, ~ max,\n   1L,     0,     1,\n   2L,    10,   100,\n   3L,   100,  1000\n)\ntypeof(params)\n#&gt; [1] \"list\"\npmap(params, runif)\n#&gt; [[1]]\n#&gt; [1] 0.08703467\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 22.92254 91.76306\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 210.2793 755.9765 955.3395",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "functionals.html#reduce-家族",
    "href": "functionals.html#reduce-家族",
    "title": "\n14  泛函\n",
    "section": "\n14.2 reduce 家族",
    "text": "14.2 reduce 家族\n通过迭代应用两个输入的函数（a binary function）将列表简化为单个值。\n\n14.2.1 reduce()\n\nreduce()获取长度为 n 的向量，并通过一次调用具有一对值的函数来生成长度为 1 的向量\n\n\n\n\nreduce(1:4, f)等价于f(f(f(1, 2), 3), 4)\n\nCodel &lt;- map(1:4, ~ sample(1:10, 15, replace = T))\n\n# 交集\nreduce(l, intersect)\n#&gt; [1] 10  5  7  4\n\n# 并集\nreduce(l, union)\n#&gt;  [1] 10  5  7  8  1  6  3  4  2  9\n\n\n\nCodesimple_reduce &lt;- function(x, f) {\n  out &lt;- x[[1]]\n  for (i in seq(2, length(x))) {\n    out &lt;- f(out, x[[i]])\n  }\n  out\n}\n\n\n\n14.2.2 accumulate()\n\n第一个变体 ，不仅返回最终结果，还返回所有中间结果\n\nCodeaccumulate(l, intersect)\n#&gt; [[1]]\n#&gt;  [1] 10  5  7  8  1  8  6 10  3  6 10  6  8  3  4\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 10  5  7  1  4\n#&gt; \n#&gt; [[4]]\n#&gt; [1] 10  5  7  4\n\n\n\nCodex &lt;- c(4, 3, 10)\nreduce(x, `+`)\n#&gt; [1] 17\n\naccumulate(x, `+`)\n#&gt; [1]  4  7 17\n\n\n\n14.2.3 reduce2(x,y,f,.init)",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "functionals.html#谓词泛函",
    "href": "functionals.html#谓词泛函",
    "title": "\n14  泛函\n",
    "section": "\n14.3 谓词泛函",
    "text": "14.3 谓词泛函\n在编程和数学中，“谓词”（Predicate）是一个表达式，它返回一个布尔值（真或假）。谓词通常用于逻辑和函数式编程中，作为判断或决策的基础。\n谓词泛函（Predicate Functionals）是谓词的一个特例，它是一个接受一个或多个参数，并返回一个布尔值的函数。谓词泛函在很多编程语言中都很常见，尤其是在支持函数式编程的语言中。\n谓词泛函的一些关键特点包括：\n\n返回布尔值：谓词泛函的输出是一个布尔值，即真（true）或假（false）。\n接受参数：谓词泛函可以接收一个或多个参数，这些参数的值会影响函数的返回结果。\n无副作用：在函数式编程中，谓词泛函通常是纯函数，即它们不会产生副作用，也不会修改外部状态。\n逻辑判断：谓词泛函常用于逻辑判断，如条件语句（if）、循环（while、for）等。\n\n\n\nsome(.x, .p)如果存在元素匹配，则返回TRUE;every(.x, .p)如果所有元素都匹配，则返回TRUE;none(.x, .p)如果没有元素匹配，则返回TRUE\n当它看到第一个时返回，当它们看到第一个或时返回。\n\ndetect(.x, .p)返回第一个匹配项的值;detect_index(.x, .p) 返回第一个匹配项的位置。\nkeep(.x, .p) 保留所有匹配的元素; discard(.x, .p)删除所有匹配的元素。\n\n\nCodedf &lt;- data.frame(\n  num1 = c(0, 10, 20),\n  num2 = c(5, 6, 7),\n  chr1 = c(\"a\", \"b\", \"c\")\n)\ndetect(df, is.factor)\n#&gt; NULL\ndetect_index(df, is.factor)\n#&gt; [1] 0\nstr(keep(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  0 variables\nstr(discard(df, is.factor))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  0 10 20\n#&gt;  $ num2: num  5 6 7\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\n\n\nmap变体也有谓词泛函\n\nCodestr(map_if(df, is.numeric, mean))\n#&gt; List of 3\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6\n#&gt;  $ chr1: chr [1:3] \"a\" \"b\" \"c\"\nstr(modify_if(df, is.numeric, mean))\n#&gt; 'data.frame':    3 obs. of  3 variables:\n#&gt;  $ num1: num  10 10 10\n#&gt;  $ num2: num  6 6 6\n#&gt;  $ chr1: chr  \"a\" \"b\" \"c\"\nstr(map(keep(df, is.numeric), mean))\n#&gt; List of 2\n#&gt;  $ num1: num 10\n#&gt;  $ num2: num 6",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "functionals.html#base-包泛函",
    "href": "functionals.html#base-包泛函",
    "title": "\n14  泛函\n",
    "section": "\n14.4 base 包泛函",
    "text": "14.4 base 包泛函\n\n14.4.1 apply()\n\nbase::apply()\n\nX，要汇总的矩阵或数组。\nMARGIN，一个整数向量，给出要汇总的维度， 1 = 行，2 = 列，以此类推（参数名称来自思考 联合分布的边距）。\nFUN，一个汇总函数。\n\n\nCodea3d &lt;- array(1:24, c(4, 3, 2))\na3d\n#&gt; , , 1\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    1    5    9\n#&gt; [2,]    2    6   10\n#&gt; [3,]    3    7   11\n#&gt; [4,]    4    8   12\n#&gt; \n#&gt; , , 2\n#&gt; \n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]   13   17   21\n#&gt; [2,]   14   18   22\n#&gt; [3,]   15   19   23\n#&gt; [4,]   16   20   24\napply(a3d, c(1, 2), mean)\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]    7   11   15\n#&gt; [2,]    8   12   16\n#&gt; [3,]    9   13   17\n#&gt; [4,]   10   14   18\n\n\nlapply()、sapply() 和 vapply() 针对的都是列表结构的数据，sapply()是简化（simplified）版本的 lapply()，而 vapply() 则在 sapply() 的基础上加了结果验证，以保证可靠性。\n\nCodeset.seed(10)\n\ntemp &lt;- list(\n  35 + rnorm(10, mean = 1, sd = 10),\n  20 + rnorm(5, mean = 1, sd = 3),\n  25 + rnorm(22, mean = 2, sd = 6),\n  33 + rnorm(14, mean = 4, sd = 20)\n)\nbasic &lt;- function(x) {\n  c(min = min(x), mean = mean(x), median = median(x), max = max(x))\n}\n\n\n\nCodelapply(temp, basic)\n#&gt; [[1]]\n#&gt;      min     mean   median      max \n#&gt; 19.73327 31.09343 32.89923 39.89794 \n#&gt; \n#&gt; [[2]]\n#&gt;      min     mean   median      max \n#&gt; 20.28530 23.00890 23.26734 24.30534 \n#&gt; \n#&gt; [[3]]\n#&gt;      min     mean   median      max \n#&gt; 13.88828 23.72360 24.09008 32.81140 \n#&gt; \n#&gt; [[4]]\n#&gt;       min      mean    median       max \n#&gt;  1.818265 31.437784 29.748184 58.731028\nsapply(temp, basic)\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\n\nCodevapply(temp, basic, numeric(4))\n#&gt;            [,1]     [,2]     [,3]      [,4]\n#&gt; min    19.73327 20.28530 13.88828  1.818265\n#&gt; mean   31.09343 23.00890 23.72360 31.437784\n#&gt; median 32.89923 23.26734 24.09008 29.748184\n#&gt; max    39.89794 24.30534 32.81140 58.731028\n\n\nvapply() 第 3 个参数传入对每一个子集调用函数后结果的预期，上述设定为包含 4 个元素的数值型向量。\n\n14.4.2 数学泛函",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "functionals.html#函数式编程",
    "href": "functionals.html#函数式编程",
    "title": "\n14  泛函\n",
    "section": "\n14.5 函数式编程",
    "text": "14.5 函数式编程\n\nCodef &lt;- function(x, fun) {\n  fun(x)\n}\n\nf(1:10, sum)\n#&gt; [1] 55\nf(1:10, quantile)\n#&gt;    0%   25%   50%   75%  100% \n#&gt;  1.00  3.25  5.50  7.75 10.00\n\n\n在我们创建的函数 f() 中，我们可以理解为对传入函数的 mean()、sum() 等函数重命名成 fun() 并进行调用。\n\nCodef2 &lt;- function(type) {\n  switch(type,\n         mean = mean,\n         sum = sum,\n         quantile = quantile)\n}\nmean\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x0000019bea629530&gt;\n#&gt; &lt;environment: namespace:base&gt;\nf2(\"mean\")\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x0000019bea629530&gt;\n#&gt; &lt;environment: namespace:base&gt;\n\nf2(\"mean\")(1:10)\n#&gt; [1] 5.5",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>泛函</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html",
    "href": "object_oriented_programming.html",
    "title": "\n15  面向对象编程\n",
    "section": "",
    "text": "15.1 R 中的对象\nR中存在的一切都是一个对象，包括 base objects 和 OO objects 。",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r-中的对象",
    "href": "object_oriented_programming.html#r-中的对象",
    "title": "\n15  面向对象编程\n",
    "section": "",
    "text": "15.1.1 base objects\n基本对象来自 S\n\nCode# A base object:\nsloop::otype(1:10)\n#&gt; [1] \"base\"\nis.object(1:10)\n#&gt; [1] FALSE\n\n# An OO object\nis.object(mtcars)\n#&gt; [1] TRUE\nsloop::otype(mtcars)\n#&gt; [1] \"S3\"\n\n\n基本对象和 OO 对象之间的区别在于 OO 对象具有“类”属性\n\nCodeattr(1:10, \"class\")\n#&gt; NULL\nattr(mtcars, \"class\")\n#&gt; [1] \"data.frame\"\n\n\n虽然只有 OO 对象具有类”class”属性，但每个对象都具有基本类型（base type）：\n\nCodetypeof(1:10)\n#&gt; [1] \"integer\"\ntypeof(mtcars)\n#&gt; [1] \"list\"\ntypeof(NULL)\n#&gt; [1] \"NULL\"\ntypeof(mean)\n#&gt; [1] \"closure\"\ntypeof(`[`)\n#&gt; [1] \"special\"\ntypeof(sum) \n#&gt; [1] \"builtin\"\ntypeof(globalenv())\n#&gt; [1] \"environment\"\nmle_obj &lt;- stats4::mle(function(x = 1) (x - 2) ^ 2)\ntypeof(mle_obj)\n#&gt; [1] \"S4\"\n\n\n基本类型包括数据的基本类型（数值，字符，逻辑，复数等），函数类型（闭包、内置、特殊），环境，类，…… 等等。\n\n15.1.2 OO objects\n\nS3：是 R 的第一个 OOP 系统，Statistical Models in S\nS4：是对 S3 的正式和严格的重写，Programming with Data，S4 在默认安装(options()$defaultPackages) methods 包中实现。Bioconductor 项目使用的就是S4类。\nR6：构建在环境之上的封装OOP，具有引用语义，modified in-place 而非“修改时复制（copy-on-modify）”，在 R6 包中实现。\nprototype（原型）：模糊类和类（对象）的实例之间的区别，通常指的是一个对象的初始实例，它定义了一组属性和方法，其他对象可以基于这个原型进行创建。例如ggplot2 包的ggproto类",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s3类",
    "href": "object_oriented_programming.html#s3类",
    "title": "\n15  面向对象编程\n",
    "section": "\n15.2 S3类",
    "text": "15.2 S3类\nS3 对象是至少具有一个属性（其他属性可用于存储其他数据）的base type( 有mode属性)。\n\nCodef &lt;- factor(c(\"a\", \"b\", \"c\"))\n\n# 基本类型\ntypeof(f)\n#&gt; [1] \"integer\"\n\n# 其他属性\nattributes(f)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\" \"c\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\n\n\n剥离类属性，保留其他属性\n\nCodeunclass(f)\n#&gt; [1] 1 2 3\n#&gt; attr(,\"levels\")\n#&gt; [1] \"a\" \"b\" \"c\"\n\n\n查看方法调度，generic.class()\n\nCodelibrary(sloop)\ns3_dispatch(print(f))\n#&gt; =&gt; print.factor\n#&gt;  * print.default\n\n\n\n15.2.1 类的实例\n要使对象成为类的实例，您只需设置类属性即可。\n\nCodex &lt;- structure(list(), class = \"custom_class\")\n\n# 或者\nx &lt;- list()\nclass(x) &lt;- \"custom_class\"\n\n\n\nCodeclass(x)\n#&gt; [1] \"custom_class\"\n\ninherits(x, \"custom_class\")\n#&gt; [1] TRUE\n\n\n构造S3类的三原则\n\n命名 new_myclass()\nbase object有一个参数，每个属性有一个参数。\n检查base object的类型和每个属性的类型\n\n例如 Date 类\n\nCodenew_Date &lt;- function(x = double()) {\n  stopifnot(is.double(x))\n  structure(x, class = \"Date\")\n}\nnew_Date(c(-1, 0, 1))\n#&gt; [1] \"1969-12-31\" \"1970-01-01\" \"1970-01-02\"\n\n\ndifftime 类\n\nCodenew_difftime &lt;- function(x = double(), units = \"secs\") {\n  stopifnot(is.double(x))\n  units &lt;- match.arg(units, c(\"secs\", \"mins\", \"hours\", \"days\", \"weeks\"))\n\n  structure(x,\n    class = \"difftime\",\n    units = units\n  )\n}\nnew_difftime(52, \"weeks\")\n#&gt; Time difference of 52 weeks\n\n\n有效性验证\n\nCodenew_factor &lt;- function(x = integer(), levels = character()) {\n  stopifnot(is.integer(x))\n  stopifnot(is.character(levels))\n\n  structure(\n    x,\n    levels = levels,\n    class = \"factor\"\n  )\n}\n\nnew_factor(1:5, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\nnew_factor(0:1, \"a\")\n#&gt; Error in as.character.factor(x): malformed factor\n\n\n\nCodevalidate_factor &lt;- function(x) {\n  values &lt;- unclass(x)\n  levels &lt;- attr(x, \"levels\")\n\n  if (!all(!is.na(values) & values &gt; 0)) {\n    stop(\n      \"All `x` values must be non-missing and greater than zero\",\n      call. = FALSE\n    )\n  }\n\n  if (length(levels) &lt; max(values)) {\n    stop(\n      \"There must be at least as many `levels` as possible values in `x`\",\n      call. = FALSE\n    )\n  }\n\n  x\n}\nvalidate_factor(new_factor(1:5, \"a\"))\n#&gt; Error: There must be at least as many `levels` as possible values in `x`\nvalidate_factor(new_factor(0:1, \"a\"))\n#&gt; Error: All `x` values must be non-missing and greater than zero\n\n\n如果希望用户从类中构造对象，还应该提供一个帮助程序方法\n\n强制类型转换\n\n\nCodedifftime &lt;- function(x = double(), units = \"secs\") {\n  x &lt;- as.double(x)\n  new_difftime(x, units = units)\n}\n\ndifftime(1:10)\n#&gt; Time differences in secs\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\n复杂对象字符串表示\n\n\nCodefactor &lt;- function(x = character(), levels = unique(x)) {\n  ind &lt;- match(x, levels)\n  validate_factor(new_factor(ind, levels))\n}\n\nfactor(c(\"a\", \"a\", \"b\"))\n#&gt; [1] a a b\n#&gt; Levels: a b\n\n\n\n复杂对象由多个简单组件指定\n\n\nCodePOSIXct &lt;- function(year = integer(), \n                    month = integer(), \n                    day = integer(), \n                    hour = 0L, \n                    minute = 0L, \n                    sec = 0, \n                    tzone = \"\") {\n  ISOdatetime(year, month, day, hour, minute, sec, tz = tzone)\n}\n\nPOSIXct(2020, 1, 1, tzone = \"Asia/Shanghai\")\n#&gt; [1] \"2020-01-01 CST\"\n\n\n\n15.2.2 泛型函数和方法调度\n泛型函数（generic function）\n\nCodemy_new_generic &lt;- function(x) {\n  UseMethod(\"my_new_generic\")\n}\n\n\n\nCodelibrary(\"sloop\")\nx &lt;- matrix(1:10, nrow = 2)\ns3_dispatch(mean(x))\n#&gt;    mean.matrix\n#&gt;    mean.integer\n#&gt;    mean.numeric\n#&gt; =&gt; mean.default\n\n\n=&gt;指示调用的方法\n*指示此处已定义但未调用的方法，“default”类是一个特殊的伪类。这不是一个真正的类，但包含它是为了可以定义一个标准回退，每当特定于类的方法不可用时，就会找到该回退。\n\nCodemean\n#&gt; function (x, ...) \n#&gt; UseMethod(\"mean\")\n#&gt; &lt;bytecode: 0x000001a9fbc2a768&gt;\n#&gt; &lt;environment: namespace:base&gt;\ns3_methods_generic(\"mean\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nmean\nDate\nTRUE\nbase\n\n\nmean\ndefault\nTRUE\nbase\n\n\nmean\ndifftime\nTRUE\nbase\n\n\nmean\nPOSIXct\nTRUE\nbase\n\n\nmean\nPOSIXlt\nTRUE\nbase\n\n\nmean\nquosure\nFALSE\nregistered S3method\n\n\nmean\nvctrs_vctr\nFALSE\nregistered S3method\n\n\n\n\n\nCodes3_methods_class(\"ordered\")\n\n\n\n\ngeneric\nclass\nvisible\nsource\n\n\n\nas.data.frame\nordered\nTRUE\nbase\n\n\nOps\nordered\nTRUE\nbase\n\n\nrelevel\nordered\nFALSE\nregistered S3method\n\n\nscale_type\nordered\nFALSE\nregistered S3method\n\n\nSummary\nordered\nTRUE\nbase\n\n\ntype_sum\nordered\nFALSE\nregistered S3method",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#r6-类",
    "href": "object_oriented_programming.html#r6-类",
    "title": "\n15  面向对象编程\n",
    "section": "\n15.3 R6 类",
    "text": "15.3 R6 类\nR6::R6Class(classname = NULL，public = list)\nUpperCamelCase，snake_case\n\nCodelibrary(R6)\n\n\n\nCodeAccumulator &lt;- R6Class(\"Accumulator\", list(\n    # 字段，与python中的初始化属性类似\n    sum = 0,\n    \n    # 方法，与python中的方法相同\n    add = function(x = 1) {\n        self$sum &lt;- self$sum + x\n        invisible(self)\n    }\n))\nAccumulator\n#&gt; &lt;Accumulator&gt; object generator\n#&gt;   Public:\n#&gt;     sum: 0\n#&gt;     add: function (x = 1) \n#&gt;     clone: function (deep = FALSE) \n#&gt;   Parent env: &lt;environment: R_GlobalEnv&gt;\n#&gt;   Locked objects: TRUE\n#&gt;   Locked class: FALSE\n#&gt;   Portable: TRUE\n\n# 从类构造一个新对象\nx &lt;- Accumulator$new()\n\n# 方法和字段\nx$add(4)\nx$sum\n#&gt; [1] 4\n\n# 方法链\nx$\n  add(10)$\n  add(10)$\n  sum\n#&gt; [1] 24\n\n\n\n15.3.1 方法\nself$ 方法访问当前对象的方法和字段\n$initialize()覆盖新对象的默认行为\n$print()覆盖默认打印行为\nprivate=list()创建从类内部访问的的私有字段和方法\nprivate$访问私有字段和方法\nactive=list()定义动态字段\n\nCodePerson &lt;- R6Class(\n    \"Person\",\n    public = list(\n        name = NULL,\n        age = NA,\n        initialize = function(name, age = NA,height=NA,weight=NA) {\n            self$name &lt;- name\n            self$age &lt;- age\n            private$height &lt;- height\n            private$weight &lt;- weight\n        },\n        print = function(...) {\n            cat(\"Person: \\n\")\n            cat(\"  Name: \", self$name, \"\\n\", sep = \"\")\n            cat(\"  Age:  \", self$age, \"\\n\", sep = \"\")\n            cat(\"  Height: \", private$height, \"\\n\", sep = \"\")\n            cat(\"  Weight:  \", private$weight, \"\\n\", sep = \"\")\n            cat(\"  BMI:  \", private$BMI(), \"\\n\", sep = \"\")\n            invisible(self)\n        }\n    ),\n    \n    private = list(\n        height = NA,\n        weight = NA,\n        BMI = function() {\n            private$weight / private$height ^ 2\n        }\n    ),\n    \n    active = list(\n        random_index = function(value) {\n            if (missing(value)) {\n                ceiling(runif(1,0,100))\n            } else {\n                stop(\"Can't set `$random_index`\", call. = FALSE)\n            }\n        }\n    ), \n)\n\np1 &lt;- Person$new(name = \"Bob\",age = 13,height = 1.50,weight = 45)\n# 打印\np1\n#&gt; Person: \n#&gt;   Name: Bob\n#&gt;   Age:  13\n#&gt;   Height: 1.5\n#&gt;   Weight:  45\n#&gt;   BMI:  20\np1$print()\n#&gt; Person: \n#&gt;   Name: Bob\n#&gt;   Age:  13\n#&gt;   Height: 1.5\n#&gt;   Weight:  45\n#&gt;   BMI:  20\n\n# 类和公有方法\nclass(p1)\n#&gt; [1] \"Person\" \"R6\"\nnames(p1)\n#&gt; [1] \".__enclos_env__\" \"random_index\"    \"age\"             \"name\"           \n#&gt; [5] \"clone\"           \"print\"           \"initialize\"\np1$random_index\n#&gt; [1] 75\np1$random_index &lt;- 33\n#&gt; Error: Can't set `$random_index`\n\n\n创建类后再追加公有方法和字段\n\nCodeAccumulator2 &lt;- R6Class(\"Accumulator\")\nAccumulator2$set(\"public\", \"sum\", 0)\nAccumulator2$set(\"public\", \"add\", function(x = 1) {\n  self$sum &lt;- self$sum + x \n  invisible(self)\n})\nAccumulator2\n#&gt; &lt;Accumulator&gt; object generator\n#&gt;   Public:\n#&gt;     sum: 0\n#&gt;     clone: function (deep = FALSE) \n#&gt;     add: function (x = 1) \n#&gt;   Parent env: &lt;environment: R_GlobalEnv&gt;\n#&gt;   Locked objects: TRUE\n#&gt;   Locked class: FALSE\n#&gt;   Portable: TRUE\n\n\n\n15.3.2 继承\n\nCodeAccumulatorChatty &lt;- R6Class(\"AccumulatorChatty\", \n  inherit = Accumulator,\n  public = list(\n    add = function(x = 1) {\n      cat(\"Adding \", x, \"\\n\", sep = \"\")\n      super$add(x = x)\n    }\n  )\n)\n\nx2 &lt;- AccumulatorChatty$new()\nx2$add(10)$add(1)$sum\n#&gt; Adding 10\n#&gt; Adding 1\n#&gt; [1] 11\n\n\n\n15.3.3 引用语义\n引用语义的主要结果是对象在修改时不会被复制：\n\nCodey1 &lt;- Accumulator$new() \ny2 &lt;- y1\n\ny1$add(10)\nc(y1 = y1$sum, y2 = y2$sum)\n#&gt; y1 y2 \n#&gt; 10 10\n\n\n如果想要副本，则需要显式显示对象：$clone()\n\nCodey1 &lt;- Accumulator$new() \ny2 &lt;- y1$clone()\n\ny1$add(10)\nc(y1 = y1$sum, y2 = y2$sum)\n#&gt; y1 y2 \n#&gt; 10  0",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#s4类",
    "href": "object_oriented_programming.html#s4类",
    "title": "\n15  面向对象编程\n",
    "section": "\n15.4 S4类",
    "text": "15.4 S4类\n创建类 setClass() ，创建泛型函数 setGeneric() ，创建方法 setMethod()\n此外，S4 提供多重继承（即一个类可以有多个父级）和多重调度（即方法调度可以使用多个参数的类）\nS4 的一个重要新组件是 slot，它是对象的命名组件，使用专用子集运算符 @（发音为 at）进行访问。\naccessor functions @\nbioconductor S4类和方法\n\nCodelibrary(methods)\n\n\n\n15.4.1 创建类、泛型和方法\n\nCodesetClass(\n    #类名\n    \"Person\",\n    \n    # 名称和类的命名字符向量\n    slots = c(name = \"character\", age = \"numeric\"),\n    \n    # 默认值列表\n    prototype = list(name = NA_character_, age = NA_real_)\n)\n\nx &lt;- new(\"Person\", name = \"XXX\",age=24)\n\nstr(x)\n#&gt; Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   ..@ name: chr \"XXX\"\n#&gt;   ..@ age : num 24\n\nx@name\n#&gt; [1] \"XXX\"\nslot(x,\"age\")\n#&gt; [1] 24\n\n\n# 泛型\n\nsetGeneric(\"age\", function(x) standardGeneric(\"age\"))\n#&gt; [1] \"age\"\nsetGeneric(\"age&lt;-\", function(x, value) standardGeneric(\"age&lt;-\"))\n#&gt; [1] \"age&lt;-\"\n\n# 方法\n\nsetMethod(\"age\", \"Person\", function(x) x@age)\nsetMethod(\"age&lt;-\", \"Person\", function(x, value) {\n  x@age &lt;- value\n  x\n})\nage(x)\n#&gt; [1] 24\nage(x) &lt;- 13\nage(x)\n#&gt; [1] 13\n\nsetMethod(\"show\", \"Person\", function(object) {\n  cat(is(object)[[1]], \"\\n\",\n      \"  Name: \", object@name, \"\\n\",\n      \"  Age:  \", object@age, \"\\n\",\n      sep = \"\"\n  )\n})\nsloop::otype(x)\n#&gt; [1] \"S4\"\nsloop::ftype(age)\n#&gt; [1] \"S4\"      \"generic\"\n\nx\n#&gt; Person\n#&gt;   Name: XXX\n#&gt;   Age:  13\n\nsetGeneric(\"name\", function(x) standardGeneric(\"name\"))\n#&gt; [1] \"name\"\nsetMethod(\"name\", \"Person\", function(x) x@name)\n\nname(x)\n#&gt; [1] \"XXX\"\nsetGeneric(\"name&lt;-\", function(x, value) standardGeneric(\"name&lt;-\"))\n#&gt; [1] \"name&lt;-\"\nsetMethod(\"name&lt;-\", \"Person\", function(x, value) {\n  x@name &lt;- value\n  validObject(x)\n  x\n})\n\nname(x) &lt;- \"Lily\"\nname(x)\n#&gt; [1] \"Lily\"\n\n\n\n15.4.2 继承\n\nCodesetClass(\"Employee\", \n  contains = \"Person\", \n  slots = c(\n    boss = \"Person\"\n  ),\n  prototype = list(\n    boss = new(\"Person\")\n  )\n)\n\nstr(new(\"Employee\"))\n#&gt; Formal class 'Employee' [package \".GlobalEnv\"] with 3 slots\n#&gt;   ..@ boss:Formal class 'Person' [package \".GlobalEnv\"] with 2 slots\n#&gt;   .. .. ..@ name: chr NA\n#&gt;   .. .. ..@ age : num NA\n#&gt;   ..@ name: chr NA\n#&gt;   ..@ age : num NA\n\n\n\nCodeis(x, \"Person\")\n#&gt; [1] TRUE\nis(new(\"Person\"))\n#&gt; [1] \"Person\"\nis(new(\"Employee\"))\n#&gt; [1] \"Employee\" \"Person\"\n\n\n\n15.4.3 多重继承和多重调度\n。。。",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  },
  {
    "objectID": "object_oriented_programming.html#ggproto-类",
    "href": "object_oriented_programming.html#ggproto-类",
    "title": "\n15  面向对象编程\n",
    "section": "\n15.5 ggproto 类",
    "text": "15.5 ggproto 类\n参考 ggplot2-book.org/internals#sec-ggproto\n\nCodeNewObject &lt;- ggproto(\n  `_class` = NULL, \n  `_inherits` = NULL\n)\nNewObject \n#&gt; &lt;ggproto object: Class gg&gt;\n#&gt;     _inherits: NULL\n\n\n\nCode# 新类\nNewClass &lt;- ggproto(\"NewClass\", NULL,\n                    # fields     默认值 \n                    geom=NA,\n                    # methods\n                    \n                    )\nNewClass\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: NA\n\n\n\nCode# 实例\ninstance &lt;- ggproto(NULL, NewClass,\n                    # 字段赋值\n                    geom=\"point\"\n                    )\ninstance\n#&gt; &lt;ggproto object: Class NewClass, gg&gt;\n#&gt;     geom: point\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;\n\n\n\nCode# 继承\nNewSubClass &lt;- ggproto(\"NewSubClass\", NewClass)\nNewSubClass\n#&gt; &lt;ggproto object: Class NewSubClass, NewClass, gg&gt;\n#&gt;     geom: NA\n#&gt;     super:  &lt;ggproto object: Class NewClass, gg&gt;",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>面向对象编程</span>"
    ]
  }
]