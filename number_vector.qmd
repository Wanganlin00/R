# 数字向量

## `parse_number()`

```{r}
x <- c("1.2", "5.6", "1e3")
parse_double(x)
parse_number(x)
```

## `count()`

```{r}

# 计数

mpg |> 
    count(manufacturer,sort = T)


mpg |> 
    group_by(manufacturer) |> 
    summarise(
        n=n()
    ) |> 
    arrange(desc(n))


mpg |> 
    group_by(manufacturer) |> 
    summarise(
        n=n_distinct(class)
    ) |> 
    arrange(desc(n))


# 加权求和


mpg |> 
    count(manufacturer,wt = hwy,sort = T)

mpg |> 
    group_by(manufacturer) |> 
    summarise(
        hwy_sum=sum(hwy)
    ) |> 
    arrange(desc(hwy_sum))
```

## `pmax()`  `pmin()`

```{r}
df <- tribble(
  ~x, ~y,
  1,  3,
  5,  2,
  7, NA,
)
# 行最大值，行最小值
df |> 
  mutate(
    min = pmin(x, y, na.rm = TRUE),
    max = pmax(x, y, na.rm = TRUE)
  )
```

## 模运算

```{r}
# 整除
1:10 %/% 3

# 余数
1:10 %% 3
```

## 四舍五入

```{r}
x <- 123.456
round(x, 2)  # two digits

round(x, 1)  # one digit

round(x, -1) # round to nearest ten

round(x, -2) # round to nearest hundred

# Round to nearest multiple of 4
round(x / 4) * 4
```

```{r}
# 一半到舍入最近的偶数
round(c(1.5, 2.5,3.5,4.5))
```

```{r}
floor(x)
ceiling(x)

# Round up to nearest two digits
ceiling(x / 0.01) * 0.01
```

## `cut()`

```{r}
x <- c(1, 2, 5, 10, 15, 20)


cut( x = x, breaks =3)                

cut(x, breaks = c(0, 5, 10, 15, 20))
cut(x, 
  breaks = c(0, 5, 10, 15, 20), 
  labels = c("sm", "md", "lg", "xl")  # 注意要少1个
)


cut( x = x, breaks = c(0, 5, 10, 15, 20),include.lowest = TRUE) 

```

## 累计

```{r}
x <- 1:10
cumsum(x)
cumprod(x)
cummin(x)
cummax(x)
cummean(x)
```


## Offsets

```{r}
x <- c(2, 5, 11, 11, 19, 35)
dplyr::lag(x,n=1)
dplyr::lead(x,n=2)
```

