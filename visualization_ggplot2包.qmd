---
editor_options: 
  markdown: 
    wrap: 72
---

#图形的分层语法####

```
ggplot( data = <DATA>) + 
    <GEOM_FUNCTION>( mapping = aes(<MAPPINGS>), stat= <STAT>, position = <POSITION> ) +
    <COORDINATE_FUNCTION> +
    scale_y_continuous( breaks = c(0,10,20,30), 
                        labels = c("a","b","c","d") )+
    xlim(1,10)+
    ylim(1,10)+    
    labs( x="aaa", y="bbb",title="ccc",subtitle= ,caption= , )+
    <FACET_FUNCTION>+
    
    theme_bw()+ 
    theme(plot.title = element_text( size =10,  face = "bold", colour = "red"                 ,family = "RMN", hjust = 0.5),
          plot.subtitle = element_text(size =10,face = "bold", hjust =0.5), 
          axis.title.y = element_text(size = 10,face = "bold",hjust = 0.5), 
          axis.title.x = element_text(size = 10, face ="bold", hjust = 0.5), 
          axis.text.x = element_text(size = 10,angle = 0, hjust = 0.5), 
          axis.text.y = element_text(size = 10,angle = 0, vjust = 0.5),
          axis.ticks =element_blank(), 
          legend.position = "right", 
          legend.text = element_text(size = 10),
          legend.title =element_text(size = 10),
          legend.key.size = unit(10, "pt"))
```

```{r}
#可视化分布####
#分类变量
library(palmerpenguins)
ggplot(penguins, aes(x = species,fill=species)) +
  geom_bar()
ggplot(penguins, aes(x = fct_infreq(species))) +  #条形图
  geom_bar()
#数值变量
ggplot(penguins, aes(x = body_mass_g)) +
  geom_histogram(binwidth = 200)                   #直方图
ggplot(penguins, aes(x = body_mass_g)) +
  geom_density()                                  #密度图

#可视化关系####
#数值变量和分类变量
ggplot(penguins, aes(x = species, y = body_mass_g)) +
  geom_boxplot()                                      
ggplot(penguins, aes(x = body_mass_g, color = species,fill=species)) +
  geom_density(linewidth = 0.75,alpha=.5)
#两个分类变量
ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar()
ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(position = "fill")+
  labs(y="frequency")
#两个数值变量
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point()
#三个或更多变量
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(aes(color = species, shape = species)) +
  facet_wrap(~island)



#Aesthetic mappings  美学映射####
mpg
mpg %>% 
  distinct(class)  # 7种汽车类型

ggplot(mpg, aes(x = displ, y = hwy, color = class)) +#颜色 名义型变量
  geom_point()

ggplot(mpg, aes(x = displ, y = hwy, shape = class)) + #形状最多可以映射6个
  geom_point()
ggplot(mpg, aes(x = displ, y = hwy, size = class)) +#大小 有序型变量
  geom_point()
ggplot(mpg, aes(x = displ, y = hwy, alpha = class)) +#透明度 有序型变量
  geom_point(color="red") #更改外观
ggplot(mpg, aes(x = displ, y = hwy, linetype = drv)) + #线条类型
  geom_smooth()

# Geometric objects 几何对象####
ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_smooth()  #method = 'loess' and formula = 'y ~ x'

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) + 
  geom_point() +
  geom_smooth(aes(linetype = drv))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(group = drv))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(color = drv), show.legend = FALSE)

ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  geom_point(
    data = mpg |> dplyr::filter(class == "2seater"), 
    color = "red"
  ) +
  geom_point(
    data = mpg |> dplyr::filter(class == "2seater"), 
    shape = "circle open", size = 3, color = "red"
  )

# Left
ggplot(mpg, aes(x = hwy)) +
  geom_histogram(binwidth = 2)

# Middle
ggplot(mpg, aes(x = hwy)) +
  geom_density()

# Right
ggplot(mpg, aes(x = hwy)) +
  geom_boxplot()

library(ggridges)
ggplot(mpg, aes(x = hwy, y = drv, fill = drv, color = drv)) +
  geom_density_ridges(alpha = 0.5, show.legend = FALSE)


#Facet 分面####
mpg %>% 
  distinct(drv,cyl)
ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  facet_wrap(~cyl)      #一个分类变量

#facet_grid(rows ~ cols)
ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  facet_grid(drv ~ cyl) #两个分类变量
ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  facet_grid(drv ~ cyl, scales = "free_y")

ggplot(mpg) + 
  geom_point(aes(x = displ, y = hwy)) +
  facet_grid(drv ~ .)
ggplot(mpg)+
  geom_point(aes(displ,hwy))+
  facet_wrap(~drv,nrow = 3)

ggplot(mpg) + 
  geom_point(aes(x = displ, y = hwy)) +
  facet_grid(. ~ cyl)


#Statistical transformations 统计变换####
diamonds
ggplot(diamonds, aes(x = cut)) + 
  geom_bar()

diamonds |>
  count(cut) |>
  ggplot(aes(x = cut, y = n)) +
  geom_bar(stat = "identity")  # stat 从 count（默认值）更改为 identity

ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) + 
  geom_bar()

ggplot(diamonds) + 
  stat_summary(
    aes(x = cut, y = depth),
    fun.min = min,
    fun.max = max,
    fun = median
  )
#位置调整Position adjustments####
# Left
ggplot(mpg, aes(x = drv, color = drv)) + 
  geom_bar()

# Right
ggplot(mpg, aes(x = drv, fill = drv)) + 
  geom_bar()

ggplot(mpg, aes(x = drv, fill = class)) + 
  geom_bar()

# Left
ggplot(mpg, aes(x = drv, fill = class)) + 
  geom_bar(alpha = 1/5, position = "identity")

# Right
ggplot(mpg, aes(x = drv, color = class)) + 
  geom_bar(fill = NA, position = "identity")

# Left
ggplot(mpg, aes(x = drv, fill = class)) + 
  geom_bar(position = "fill")

# Right
ggplot(mpg, aes(x = drv, fill = class)) + 
  geom_bar(position = "dodge")

ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point(position = "jitter")

#Coordinate systems坐标系####
#默认坐标系是笛卡尔坐标系
library(maps)
world <- map_data("world")

ggplot(world, aes(x = long, y = lat, group = group)) +
  geom_polygon(fill = "white", color = "black")

ggplot(world, aes(x = long, y = lat, group = group)) +
  geom_polygon(fill = "white", color = "black") +
  coord_quickmap()#正确设置地理地图的纵横比

bar <- ggplot(data = diamonds) + 
  geom_bar(
    mapping = aes(x = clarity, fill = clarity), 
    show.legend = FALSE,
    width = 1
  ) + 
  theme(aspect.ratio = 1)
bar
bar + coord_flip() #水平条形图
bar + coord_polar()#极坐标
# Labels ####
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  labs(
    x = "Engine displacement (L)",
    y = "Highway fuel economy (mpg)",
    color = "Car type",
    title = "Fuel efficiency generally decreases with engine size",
    subtitle = "Two seaters (sports cars) are an 
    exception because of their light weight",
    caption = "Data from fueleconomy.gov"
  )

tibble(
  x = 1:10,
  y = cumsum(x^2)) %>% 
  ggplot(aes(x, y)) +
  geom_point() +
  labs(
    x = quote(x[i]),
    y = quote(sum(x[i] ^ 2, i == 1, n)) #数学方程式
  )
#Annotations 注释  ####

label_info <- mpg |>
  group_by(drv) |>
  arrange(desc(displ)) |>
  slice_head(n = 1)|>
  mutate(
    drive_type = case_when(       # vectorise multiple if_else () statements 
      drv == "f" ~ "front-wheel drive",
      drv == "r" ~ "rear-wheel drive",
      drv == "4" ~ "4-wheel drive"
    )
  )|>
  select(displ, hwy, drv, drive_type)
label_info
?case_when

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(alpha = 0.3) +
  geom_smooth(se = FALSE) +
  geom_text(                      #添加注释  geom_label 标签加背景框
    data = label_info, 
    aes(x = displ, y = hwy, label = drive_type),#label映射
    fontface = "bold", size = 5, nudge_y = 2
  ) +
  theme(legend.position = "none")
?geom_text
library(ggrepel)
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(alpha = 0.3) +
  geom_smooth(se = FALSE) +
  geom_label_repel(                   #无重叠遮挡
    data = label_info, 
    aes(x = displ, y = hwy, label = drive_type),
    fontface = "bold", size = 5, nudge_y = 2
  ) +
  theme(legend.position = "none")
potential_outliers <- mpg |>
  filter(hwy > 40 | (hwy > 20 & displ > 5))

potential_outliers<- mpg %>% 
  dplyr::filter(hwy>40)
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_text_repel(data = potential_outliers, aes(label = model)) +
  geom_point(data = potential_outliers, color = "red") +
  geom_point(
    data = potential_outliers,
    color = "red", size = 3, shape = "circle open"
  )
#geom_hline()geom_vline()  参考线
#geom_segment() 箭头
#annotate()

trend_text <- "Larger engine sizes tend to have lower fuel economy." |>
  str_wrap(width = 30)
trend_text
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = trend_text,
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "red",
    arrow = arrow(type = "closed")
  )
#Scales 标度 ####
#scale_[AES]_[连续、离散、日期时间或日期\...]
Axis ticks and legend keys
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  scale_y_continuous(breaks = seq(15, 40, by = 5)) +
  scale_color_discrete(labels = c("4" = "4-wheel", "f" = "front", "r" = "rear"))

# Left
ggplot(diamonds, aes(x = price, y = cut)) +
  geom_boxplot(alpha = 0.05) +
  scale_x_continuous(labels = label_dollar())

# Right
ggplot(diamonds, aes(x = price, y = cut)) +
  geom_boxplot(alpha = 0.05) +
  scale_x_continuous(
    labels = label_dollar(scale = 1/1000, suffix = "K"), 
    breaks = seq(1000, 19000, by = 6000)
  )
ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar(position = "fill") +
  scale_y_continuous(name = "Percentage", labels = label_percent())
presidential |>
  mutate(id = 33 + row_number()) |>
  ggplot(aes(x = start, y = id)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_x_date(name = NULL, breaks = presidential$start, date_labels = "'%y")
#Legend layout 图例布局  ####
base <- ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class))

base + theme(legend.position = "right") # the default
base + theme(legend.position = "left")
base + 
  theme(legend.position = "top") +
  guides(color = guide_legend(nrow = 3))
base + 
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nrow = 2, override.aes = list(size = 4)))

#Replacing a scale####
# Left
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_bin2d()

# Right

ggplot(diamonds, aes(x = carat, y = price)) +
  geom_bin2d()

ggplot(diamonds, aes(x = log10(carat), y = log10(price))) + #log10变换
  geom_bin2d()
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv))
#color，fill
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  scale_color_brewer(palette = "Set1")     #scale_color_brewer
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv, shape = drv)) +
  scale_color_brewer(palette = "Set1")
library( RColorBrewer)
RColorBrewer::display.brewer.all()

presidential |>
  mutate(id = 33 + row_number()) |>
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_color_manual(
    values = c(Republican = "#E81B23", #scale_color_manual 自定义
               Democratic = "#00AEF3"))
scale_color_gradient()scale_fill_gradient()scale_color_gradient2()  #渐变色
df <- tibble(
  x = rnorm(10000),
  y = rnorm(10000)
)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  labs(title = "Default, continuous", x = NULL, y = NULL)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  scale_fill_viridis_c() +
  labs(title = "Viridis, continuous", x = NULL, y = NULL)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  scale_fill_viridis_b() +
  labs(title = "Viridis, binned", x = NULL, y = NULL)
#Zooming放大
调整绘制的数据
在每个刻度中设置限制
设置coord_cartesian(xlim= ,ylim= )
# origin
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth()

# filter
mpg |>
  dplyr::filter(displ >= 5 & displ <= 6 & hwy >= 10 & hwy <= 25) |>
  ggplot(aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth()
# limits
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth() +
  scale_x_continuous(limits = c(5, 6)) +    #取子集
  scale_y_continuous(limits = c(10, 25))      

# zooming
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth() +
  coord_cartesian(xlim = c(5, 6), ylim = c(10, 25))   #放大局部

#share
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
col_scale <- scale_color_discrete(limits = unique(mpg$drv))
ggplot(suv, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  x_scale +
  y_scale +
  col_scale
ggplot(compact, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  x_scale +
  y_scale +
  col_scale

#Themes主题   ####
base<-ggplot(mpg,aes(x = displ, y = hwy))

base+theme_gray()                                 #the default
base+theme_bw()                   #白色背景
base+theme_classic()              #白色背景+无网格线

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  labs(
    title = "Larger engine sizes tend to have lower fuel economy",
    caption = "Source: https://fueleconomy.gov."
  ) +
  theme(
    legend.position = c(0.8, 0.9),
    legend.direction = "horizontal",
    legend.box.background = element_rect(color = "blue"),
    plot.title = element_text(face = "bold",hjust = 0.5),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    plot.caption = element_text(hjust = 1)
  )


#Plot  Layout 图形布局 ####
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = drv, y = hwy)) + 
  geom_boxplot() + 
  labs(title = "Plot 2")
p1 + p2
p3 <- ggplot(mpg, aes(x = cty, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 3")
(p1 | p3) / p2

p1 <- ggplot(mpg, aes(x = drv, y = cty, color = drv)) + 
  geom_boxplot(show.legend = FALSE) + 
  labs(title = "Plot 1")

p2 <- ggplot(mpg, aes(x = drv, y = hwy, color = drv)) + 
  geom_boxplot(show.legend = FALSE) + 
  labs(title = "Plot 2")

p3 <- ggplot(mpg, aes(x = cty, color = drv, fill = drv)) + 
  geom_density(alpha = 0.5) + 
  labs(title = "Plot 3")

p4 <- ggplot(mpg, aes(x = hwy, color = drv, fill = drv)) + 
  geom_density(alpha = 0.5) + 
  labs(title = "Plot 4")

p5 <- ggplot(mpg, aes(x = cty, y = hwy, color = drv)) + 
  geom_point(show.legend = FALSE) + 
  facet_wrap(~drv) +
  labs(title = "Plot 5")

library(patchwork)
(guide_area() / (p1 + p2) / (p3 + p4) / p5) +
  plot_annotation(
    title = "City and highway mileage for cars with different drive trains",
    caption = "Source: https://fueleconomy.gov."
  ) +
  plot_layout(
    guides = "collect",
    heights = c(1, 3, 2, 4)
  ) &
  theme(legend.position = "top")
```
